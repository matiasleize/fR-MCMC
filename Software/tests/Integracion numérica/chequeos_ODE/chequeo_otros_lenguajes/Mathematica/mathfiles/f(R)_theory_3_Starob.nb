(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    357182,       7236]
NotebookOptionsPosition[    354313,       7141]
NotebookOutlinePosition[    354761,       7158]
CellTagsIndexPosition[    354718,       7155]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.5508164326153464`*^9, 3.55081643493635*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.569756722063289*^9, 3.5697567307943015`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Various", " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]\[Gamma]", "=", 
     RowBox[{"2.469", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], " ", 
      SuperscriptBox["h", 
       RowBox[{"-", "2"}]]}]}], ";", 
    RowBox[{"Neff", "=", "3.04"}], ";", 
    RowBox[{"h", "=", "0.704"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]r", "=", 
     RowBox[{"\[CapitalOmega]\[Gamma]", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.2271", " ", "Neff"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mpc", "=", 
     RowBox[{"3.085677", " ", "*", 
      RowBox[{"10", "^", "22"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cH0", "=", 
     RowBox[{"0.925063", " ", "*", 
      RowBox[{"10", "^", "26"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"cH0", "/", "Mpc"}], ")"}], "/", 
    SqrtBox[".13"]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Definition", " ", "of", " ", "R", " ", "in", " ", "terms", " ", "of", 
      " ", "N"}], "=", 
     RowBox[{"Log", "[", "a", "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ra", "[", "Nn_", "]"}], ":=", 
    RowBox[{"6", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         RowBox[{"H", "[", "Nn", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"H", "[", "Nn", "]"}], " ", 
        RowBox[{
         RowBox[{"H", "'"}], "[", "Nn", "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Definition", " ", "of", " ", "the", " ", "f", 
     RowBox[{"(", "R", ")"}], " ", "Lagrangian"}], "  ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "R_", "]"}], ":=", 
    RowBox[{"R", "-", 
     RowBox[{"2", "\[CapitalLambda]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", " ", 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              FractionBox["R", 
               RowBox[{"b", " ", "\[CapitalLambda]"}]], ")"}], "^", "2"}]}], 
           ")"}], "n"]]}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "1"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.550815708537327*^9, 3.5508157167283382`*^9}, {
   3.5508168541309404`*^9, 3.5508168593419476`*^9}, {3.550817039102201*^9, 
   3.550817042262205*^9}, 3.550817269586526*^9, {3.550832141658906*^9, 
   3.5508321593609304`*^9}, {3.5508322175000124`*^9, 3.550832222091019*^9}, {
   3.5508329309890175`*^9, 3.5508329423910336`*^9}, {3.550833176145363*^9, 
   3.5508331787663665`*^9}, {3.550835776091137*^9, 3.550835776801138*^9}, {
   3.550836331365919*^9, 3.5508363405079317`*^9}, 3.5508363722219763`*^9, {
   3.5508386587788377`*^9, 3.5508386637068458`*^9}, {3.5508414432770643`*^9, 
   3.5508414539126825`*^9}, {3.550842386280101*^9, 3.550842411676945*^9}, {
   3.550843456041958*^9, 3.5508434574927607`*^9}, {3.5508437037029886`*^9, 
   3.5508437040461893`*^9}, {3.5508447192347603`*^9, 3.550844729343578*^9}, {
   3.550844804403708*^9, 3.550844837939166*^9}, {3.550845339309636*^9, 
   3.550845343646444*^9}, {3.5508454273561907`*^9, 3.550845436669407*^9}, {
   3.5508981530679145`*^9, 3.550898159511283*^9}, 3.550898688436536*^9, {
   3.5509001344352417`*^9, 3.550900135461301*^9}, {3.5553114898933744`*^9, 
   3.5553115265294266`*^9}, {3.5553192868693085`*^9, 
   3.5553192883903112`*^9}, {3.5553227469401875`*^9, 3.555322757452202*^9}, {
   3.555324865346173*^9, 3.555324865586173*^9}, {3.555328571285619*^9, 
   3.5553285756218667`*^9}, 3.555328806209056*^9, {3.5553297940275555`*^9, 
   3.5553297991438484`*^9}, {3.5557429208795056`*^9, 3.55574294805806*^9}, {
   3.555743899444476*^9, 3.555743909878073*^9}, 3.5557439976150913`*^9, 
   3.5558306445455456`*^9, {3.5558434286115403`*^9, 3.5558434669737344`*^9}, {
   3.5558435286392612`*^9, 3.55584358386942*^9}, 3.555843790745253*^9, 
   3.555843853694854*^9, {3.555924977356866*^9, 3.555924991173656*^9}, {
   3.555927167804152*^9, 3.555927168029165*^9}, 3.569079179276061*^9, {
   3.569086272924645*^9, 3.569086288606667*^9}, {3.569086323783717*^9, 
   3.5690863520677567`*^9}, {3.5690864859019456`*^9, 
   3.5690865147359867`*^9}, {3.569086597550103*^9, 3.5690866002211065`*^9}, {
   3.569132177099492*^9, 3.5691321802704964`*^9}, {3.5691323620517526`*^9, 
   3.569132363221754*^9}, {3.5691337264136753`*^9, 3.569133759509722*^9}, {
   3.5691422510208535`*^9, 3.5691422863759036`*^9}, {3.5693103749927015`*^9, 
   3.5693103758327026`*^9}, {3.5693106070740285`*^9, 3.569310609825032*^9}, {
   3.569565853658473*^9, 3.5695658671804914`*^9}, 3.5695659270925765`*^9, 
   3.5695661184788456`*^9, {3.569566252249034*^9, 3.5695662677010555`*^9}, {
   3.569566303548106*^9, 3.5695663191701283`*^9}, {3.569582226138576*^9, 
   3.5695822262885847`*^9}, {3.57026934706495*^9, 3.5702693479849515`*^9}}],

Cell[BoxData["8314.749528558872`"], "Output",
 CellChangeTimes->{{3.555927170258292*^9, 3.555927181979963*^9}, 
   3.5559276187089424`*^9, 3.5559277208637853`*^9, 3.55592832535236*^9, 
   3.556097185553916*^9, 3.5665539625940304`*^9, {3.5690791762550573`*^9, 
   3.569079179676062*^9}, 3.569079519492541*^9, 3.5690804228508224`*^9, {
   3.5690862770956507`*^9, 3.569086289216668*^9}, {3.569086324803718*^9, 
   3.569086352787758*^9}, {3.56908648867295*^9, 3.5690865158459883`*^9}, 
   3.569086600521107*^9, 3.5691321817104983`*^9, 3.569132245272588*^9, 
   3.569132277247633*^9, 3.569132314123685*^9, 3.5691323663227587`*^9, 
   3.569132480011919*^9, 3.569132531510991*^9, 3.5691329005615115`*^9, {
   3.5691337389656935`*^9, 3.5691337638607283`*^9}, 3.569140540382033*^9, 
   3.5691408094148207`*^9, 3.5691415015247974`*^9, 3.5691416026519403`*^9, {
   3.569142256370861*^9, 3.5691422875959053`*^9}, 3.5691423828730392`*^9, 
   3.5691424249010987`*^9, 3.5691428591897125`*^9, 3.5691538174344378`*^9, 
   3.5691539275837374`*^9, 3.569154063030485*^9, 3.5691543839538403`*^9, 
   3.569154515282352*^9, 3.5691546883512506`*^9, 3.5691551223180723`*^9, 
   3.5693099985161715`*^9, 3.5693101561993933`*^9, {3.569310357979677*^9, 
   3.5693103791437073`*^9}, {3.5693105202729063`*^9, 3.569310546364943*^9}, {
   3.5693106126850367`*^9, 3.569310640851076*^9}, 3.569311456168225*^9, 
   3.5693124706446533`*^9, 3.5693125203527236`*^9, 3.569312562298783*^9, 
   3.569312647670903*^9, 3.5693202477806206`*^9, 3.569320751309331*^9, 
   3.5693213635641937`*^9, 3.569321794433988*^9, 3.569324293380509*^9, 
   3.5693243976456556`*^9, 3.5693252759468946`*^9, 3.5693253385269833`*^9, 
   3.5693253894950547`*^9, 3.5695659321835833`*^9, 3.569566085324799*^9, 
   3.5695661214598503`*^9, 3.569566271412061*^9, {3.5695663255001373`*^9, 
   3.5695663727892036`*^9}, 3.5695667952517986`*^9, 3.569566870145905*^9, 
   3.5695690470337744`*^9, {3.569582239378333*^9, 3.569582242176493*^9}, 
   3.5696565805800667`*^9, 3.569757193994954*^9, 3.5697572730870657`*^9, 
   3.569757570791485*^9, 3.5697595503334427`*^9, 3.56975968377363*^9, 
   3.5697601390792713`*^9, 3.569829579551797*^9, 3.569829610875841*^9, {
   3.570269343573945*^9, 3.5702693489549527`*^9}, 3.5705182242372127`*^9, {
   3.57051976870339*^9, 3.57051981121145*^9}, 3.808428814395546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"f", "[", "R", "]"}], ",", 
   RowBox[{"b", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"f", "[", "R", "]"}], ",", 
   RowBox[{"b", "\[Rule]", "\[Infinity]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.569566099426819*^9, 3.5695661084878316`*^9}, {
  3.5695662783630705`*^9, 3.56956628492408*^9}}],

Cell[BoxData[
 RowBox[{"R", "-", 
  RowBox[{"2", " ", "\[CapitalLambda]"}]}]], "Output",
 CellChangeTimes->{{3.5695661095878334`*^9, 3.5695661238398533`*^9}, {
   3.5695662736830645`*^9, 3.5695662857650814`*^9}, {3.5695663272411394`*^9, 
   3.569566375730208*^9}, 3.5695667972658024`*^9, 3.5695690688580227`*^9, 
   3.569759558845454*^9, 3.5702693570659647`*^9, {3.570519792759424*^9, 
   3.570519812731452*^9}, 3.808428816395604*^9}],

Cell[BoxData["R"], "Output",
 CellChangeTimes->{{3.5695661095878334`*^9, 3.5695661238398533`*^9}, {
   3.5695662736830645`*^9, 3.5695662857650814`*^9}, {3.5695663272411394`*^9, 
   3.569566375730208*^9}, 3.5695667972658024`*^9, 3.5695690688580227`*^9, 
   3.569759558845454*^9, 3.5702693570659647`*^9, {3.570519792759424*^9, 
   3.570519812731452*^9}, 3.808428816396338*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Definition", " ", "of", " ", "the", " ", "ODE", " ", "in", " ", "terms", 
     " ", "of", " ", "N"}], "=", 
    RowBox[{
     RowBox[{"Log", "[", "a", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "z"}], "]"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ODE", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"f", "'"}], "[", "R", "]"}]}], 
         RowBox[{
          RowBox[{"H", "[", "Nn", "]"}], "^", "2"}]}], "+", 
        RowBox[{
         RowBox[{"HL", "[", "Nn", "]"}], "^", "2"}], "-", 
        RowBox[{
         RowBox[{"H0", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "om", "-", "or"}], ")"}]}], "+", 
        RowBox[{"0", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"om", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "3"}], " ", "Nn"}], "]"}]}], "+", 
           RowBox[{"or", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "4"}], " ", "Nn"}], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "6"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"f", "'"}], "[", "R", "]"}], "R"}], "-", 
           RowBox[{"f", "[", "R", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "''"}], "[", "R", "]"}], 
         RowBox[{
          RowBox[{"H", "[", "Nn", "]"}], "^", "2"}], " ", 
         RowBox[{
          RowBox[{"Ra", "'"}], "[", "Nn", "]"}]}]}], "/.", 
       RowBox[{"\[CapitalLambda]", "\[Rule]", 
        RowBox[{"3", 
         RowBox[{"H0", "^", "2"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "om", "-", "or"}], ")"}]}]}]}], "/.", 
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Ra", "[", "Nn", "]"}]}]}], "//", "Simplify"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.569079184347069*^9, 3.569079203110095*^9}, 
   3.569086338235737*^9, 3.5691322406415815`*^9, 3.5691424185090895`*^9, 
   3.569310355028673*^9, 3.569310543374939*^9, 3.569565945215602*^9, {
   3.569566072212781*^9, 3.569566077692788*^9}, {3.569566321730132*^9, 
   3.5695663491151705`*^9}, {3.569569034826076*^9, 3.569569043147552*^9}, {
   3.5695822546302056`*^9, 3.5695822585274286`*^9}, {3.5705197840064116`*^9, 
   3.570519807500445*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "[", "Nn_", "]"}], ":=", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"HL", "[", "Nn", "]"}], "^", "2"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        RowBox[{"2", "i"}]], " ", 
       RowBox[{
        SubscriptBox["\[Delta]H", 
         RowBox[{"2", "i"}]], "[", "Nn", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.5691552750638094`*^9, 3.56915529011567*^9}, {
   3.5691554390341873`*^9, 3.56915545830329*^9}, {3.569155514621511*^9, 
   3.5691555183487244`*^9}, {3.569310021680204*^9, 3.5693100222502046`*^9}, {
   3.569310347097662*^9, 3.5693103523386693`*^9}, {3.569310554935955*^9, 
   3.5693105559869566`*^9}, {3.569312497858692*^9, 3.5693125091507077`*^9}, {
   3.569312656571916*^9, 3.569312689376962*^9}, {3.5693207907253866`*^9, 
   3.5693207913053875`*^9}, 3.569320884839519*^9, 3.569320995678675*^9, {
   3.569324284408496*^9, 3.5693242885895023`*^9}, 3.5693279134992642`*^9, 
   3.5693279953913794`*^9, {3.5693281218545585`*^9, 3.5693281247745624`*^9}, 
   3.569328173280631*^9, 3.569400208286377*^9, {3.5694003377415605`*^9, 
   3.569400341892566*^9}, {3.569566392652232*^9, 3.5695664157252645`*^9}, {
   3.5695664611713285`*^9, 3.569566464321333*^9}, 3.569582268044973*^9, {
   3.570269361916971*^9, 3.5702693621069717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s0", "=", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{"ODE", ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "4"}], "}"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.569321372275206*^9, {3.569321411273448*^9, 3.5693214177944574`*^9}, 
   3.5693243015515203`*^9, {3.569324404866666*^9, 3.5693244060376673`*^9}, {
   3.569565988111662*^9, 3.5695659896816645`*^9}, {3.569566405993251*^9, 
   3.569566421916273*^9}, {3.5695690753083916`*^9, 3.569569090067236*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "12"}], " ", 
       RowBox[{
        SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], 
       RowBox[{
        RowBox[{"HL", "[", "Nn", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}]], 
      "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "2"]}]], 
      "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{
         SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], 
       RowBox[{"HL", "[", "Nn", "]"}]], "+", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"4", "-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], 
          RowBox[{"HL", "[", "Nn", "]"}]]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"6", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "2"], "+", 
          RowBox[{
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "4"]}]]}], 
     ")"}], " ", 
    SuperscriptBox["b", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "16"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "48"}], " ", 
       RowBox[{
        SubscriptBox["\[Delta]H", "4"], "[", "Nn", "]"}]}], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{
         SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}]], 
      "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], "2"], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           RowBox[{
            SubscriptBox["\[Delta]H", "4"], "[", "Nn", "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "3"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{
            SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Delta]H", "2"], "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}]], 
      "+", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "3"]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["H0", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "5"]}]], 
      "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["H0", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "4"]}]], 
      "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["H0", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "4"]}]], 
      "-", 
      RowBox[{"8", " ", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Delta]H", "4"], "\[Prime]",
         MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
         RowBox[{
          SubscriptBox["\[Delta]H", "4"], "[", "Nn", "]"}], " ", 
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"HL", "[", "Nn", "]"}], " ", 
         RowBox[{
          SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Delta]H", "2"], "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             SubscriptBox["\[Delta]H", "4"], "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Delta]H", "4"], "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "3"]], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "6"]}]], 
       RowBox[{"4", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"5", " ", 
              SuperscriptBox["H0", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], 
             "-", 
             RowBox[{"6", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"]}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"20", " ", 
              SuperscriptBox["H0", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]H", "2"], "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"5", " ", 
              SuperscriptBox["H0", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{"6", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]H", "2"], "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Delta]H", "2"], "\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Delta]H", "2"], "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]H", "2"], "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"8", " ", 
              RowBox[{
               SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"7", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"20", " ", 
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Delta]H", "2"], "\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Delta]H", "2"], "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]H", "2"], "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]H", "2"], "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}]}]}], ")"}], " ", 
    SuperscriptBox["b", "4"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "b", "]"}], "5"],
    SeriesData[$CellContext`b, 0, {}, 2, 5, 1],
    Editable->False]}],
  SeriesData[$CellContext`b, 0, {
   Rational[1, 4] ((-12) 
      Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] - 
     2 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-1) (2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[1][$CellContext`HL][$CellContext`Nn])^(-3) + 
     3 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-2) (2 $CellContext`HL[$CellContext`Nn] + 
        Derivative[1][$CellContext`HL][$CellContext`Nn])^(-2) + 
     2 $CellContext`HL[$CellContext`Nn]^(-1) 
      Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (
       2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[1][$CellContext`HL][$CellContext`Nn]) + 
     Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (4 - 
       2 $CellContext`HL[$CellContext`Nn]^(-1) 
       Derivative[1][$CellContext`HL][$CellContext`Nn]) + 
     6 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-2) (2 $CellContext`HL[$CellContext`Nn] + 
        Derivative[1][$CellContext`HL][$CellContext`Nn])^(-4) (
       Derivative[
         1][$CellContext`HL][$CellContext`Nn]^2 + \
$CellContext`HL[$CellContext`Nn] (
         4 Derivative[1][$CellContext`HL][$CellContext`Nn] + 
         Derivative[2][$CellContext`HL][$CellContext`Nn]))), 0, 
    Rational[1, 16] ((-48) 
      Subscript[$CellContext`\[Delta]H, 4][$CellContext`Nn] - 
     8 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-3) 
     Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (
       2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[1][$CellContext`HL][$CellContext`Nn])^(-3) - 
     2 $CellContext`HL[$CellContext`Nn]^(-3) (
      Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn]^2 - 
      4 $CellContext`HL[$CellContext`Nn]^2 
      Subscript[$CellContext`\[Delta]H, 4][$CellContext`Nn]) (
      2 $CellContext`HL[$CellContext`Nn] + 
      Derivative[1][$CellContext`HL][$CellContext`Nn]) + 
     4 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-3) (2 $CellContext`HL[$CellContext`Nn] + 
        Derivative[1][$CellContext`HL][$CellContext`Nn])^(-3) (
       4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + Derivative[1][
         Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn]) + 
     4 $CellContext`HL[$CellContext`Nn]^(-3) 
      Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (-
        Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] 
        Derivative[
         1][$CellContext`HL][$CellContext`Nn] + \
$CellContext`HL[$CellContext`Nn] (
         2 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
         Derivative[1][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn])) + 
     4 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-3) (2 $CellContext`HL[$CellContext`Nn] + 
        Derivative[
         1][$CellContext`HL][$CellContext`Nn])^(-5) ($CellContext`H0^4 (-1 + \
$CellContext`om + $CellContext`or)^2 + 
       6 $CellContext`HL[$CellContext`Nn]^2 (
         4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
         Derivative[1][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn]) + 
       3 $CellContext`HL[$CellContext`Nn] 
        Derivative[1][$CellContext`HL][$CellContext`Nn] (
         4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
         Derivative[1][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn])) - 
     4 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-4) (2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[
        1][$CellContext`HL][$CellContext`Nn])^(-4) ($CellContext`H0^4 (-1 + \
$CellContext`om + $CellContext`or)^2 + 
      6 $CellContext`HL[$CellContext`Nn]^2 (
        4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
        Derivative[1][
          Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn]) + 
      3 $CellContext`HL[$CellContext`Nn] 
       Derivative[1][$CellContext`HL][$CellContext`Nn] (
        4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
        Derivative[1][
          
          Subscript[$CellContext`\[Delta]H, 
           2]][$CellContext`Nn])) - $CellContext`H0^6 (-1 + $CellContext`om + \
$CellContext`or)^3 $CellContext`HL[$CellContext`Nn]^(-4) (
       2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[
        1][$CellContext`HL][$CellContext`Nn])^(-4) ($CellContext`H0^4 (-1 + \
$CellContext`om + $CellContext`or)^2 + 
      8 $CellContext`HL[$CellContext`Nn]^2 (
        4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
        Derivative[1][
          Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn]) + 
      4 $CellContext`HL[$CellContext`Nn] 
       Derivative[1][$CellContext`HL][$CellContext`Nn] (
        4 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + 
        Derivative[1][
          Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn])) - 8 
     Derivative[1][
       Subscript[$CellContext`\[Delta]H, 
        4]][$CellContext`Nn] + $CellContext`HL[$CellContext`Nn]^(-3) (
       6 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn]^2 
        Derivative[1][$CellContext`HL][$CellContext`Nn] - 
       8 $CellContext`HL[$CellContext`Nn]^2 
       Subscript[$CellContext`\[Delta]H, 4][$CellContext`Nn] 
       Derivative[1][$CellContext`HL][$CellContext`Nn] - 
       4 $CellContext`HL[$CellContext`Nn] 
       Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (
        Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] + Derivative[1][
          Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn]) + 
       8 $CellContext`HL[$CellContext`Nn]^3 (
         2 Subscript[$CellContext`\[Delta]H, 4][$CellContext`Nn] + 
         Derivative[1][
           Subscript[$CellContext`\[Delta]H, 4]][$CellContext`Nn])) - 
     4 $CellContext`H0^6 (-1 + $CellContext`om + $CellContext`or)^3 \
$CellContext`HL[$CellContext`Nn]^(-4) (2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[1][$CellContext`HL][$CellContext`Nn])^(-6) (
      Derivative[1][$CellContext`HL][$CellContext`Nn]^2 (
        5 $CellContext`H0^4 (-1 + $CellContext`om + $CellContext`or)^2 - 6 
        Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] 
        Derivative[
          1][$CellContext`HL][$CellContext`Nn]^2) + \
$CellContext`HL[$CellContext`Nn] (
        20 $CellContext`H0^4 (-1 + $CellContext`om + $CellContext`or)^2 
         Derivative[1][$CellContext`HL][$CellContext`Nn] + 
        12 Derivative[1][$CellContext`HL][$CellContext`Nn]^3 Derivative[1][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn] + 
        5 $CellContext`H0^4 (-1 + $CellContext`om + $CellContext`or)^2 
         Derivative[2][$CellContext`HL][$CellContext`Nn] - 6 
        Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] 
        Derivative[1][$CellContext`HL][$CellContext`Nn]^2 
        Derivative[2][$CellContext`HL][$CellContext`Nn]) + 
      12 $CellContext`HL[$CellContext`Nn]^3 (2 Derivative[1][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn] 
         Derivative[2][$CellContext`HL][$CellContext`Nn] + 
        6 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (
          4 Derivative[1][$CellContext`HL][$CellContext`Nn] + 
          Derivative[2][$CellContext`HL][$CellContext`Nn]) + 
        Derivative[1][$CellContext`HL][$CellContext`Nn] (4 Derivative[1][
             Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn] - 
          Derivative[2][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn])) + 
      3 $CellContext`HL[$CellContext`Nn]^2 
       Derivative[1][$CellContext`HL][$CellContext`Nn] (4 Derivative[1][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn] 
         Derivative[2][$CellContext`HL][$CellContext`Nn] + 
        8 Subscript[$CellContext`\[Delta]H, 2][$CellContext`Nn] (
          7 Derivative[1][$CellContext`HL][$CellContext`Nn] + 
          Derivative[2][$CellContext`HL][$CellContext`Nn]) + 
        Derivative[1][$CellContext`HL][$CellContext`Nn] (20 Derivative[1][
             Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn] - 
          Derivative[2][
           Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn])) - 
      12 $CellContext`HL[$CellContext`Nn]^4 (4 Derivative[1][
          Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn] + 
       Derivative[2][
         Subscript[$CellContext`\[Delta]H, 2]][$CellContext`Nn])))}, 2, 5, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.569321408813445*^9, 3.5693214188444586`*^9}, 
   3.5693243037715235`*^9, 3.5693244093176723`*^9, 3.5695659621176257`*^9, 
   3.5695659959816732`*^9, 3.5695663428941617`*^9, {3.5695663805402145`*^9, 
   3.5695664228962746`*^9}, 3.5695664663423357`*^9, {3.569569076135439*^9, 
   3.56956909084228*^9}, 3.5695822745973473`*^9, 3.5697596945156455`*^9, 
   3.570269367077978*^9, {3.5705197995794334`*^9, 3.570519818891461*^9}, 
   3.8084288222229357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"s0", ",", "2"}], "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.5695664331872888`*^9, 3.569566473113345*^9}, {
  3.5695665113993993`*^9, 3.5695665132094016`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]H", "2"], "[", "Nn", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["H0", "6"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"HL", "[", "Nn", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"34", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"6", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox[
       RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "4"]}]]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.569566474523347*^9, 3.569566514199403*^9, 
  3.5695690928093925`*^9, 3.5695822830078287`*^9, 3.5697596975856495`*^9, 
  3.570269370118983*^9, 3.570519822432466*^9, 3.8084288264037027`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]H", "2"], "[", "Nn_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["H0", "6"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8", " ", 
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["HL", "\[Prime]",
          MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"HL", "[", "Nn", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"34", " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
         RowBox[{"6", " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
     ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["HL", "\[Prime]",
         MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], 
     "4"]}]]}]], "Input",
 CellChangeTimes->{{3.5695665075083933`*^9, 3.5695665188404093`*^9}, 
   3.5695822887061543`*^9, 3.569759703776658*^9, 3.5705198343044825`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"s0", ",", "4"}], "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]H", "4"], "[", "Nn", "]"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.569566537493436*^9, 3.569566543964445*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]H", "4"], "[", "Nn", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "10"]}]], 
      RowBox[{
       SuperscriptBox["H0", "10"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"192", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "8"]}], "-", 
         RowBox[{"486", " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "6"]}], "+", 
         RowBox[{"320", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "7"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "-", 
         RowBox[{"18", " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          RowBox[{"HL", "[", "Nn", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"263", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"48", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
         RowBox[{"16", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
            RowBox[{"5", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"47", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{"8", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "15562"}], " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
            RowBox[{"25", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
            RowBox[{"972", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
            RowBox[{"12", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"532", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"15", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4422", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
            RowBox[{"345", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
            RowBox[{"40", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"72", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"9", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
            "+", 
            RowBox[{"18", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"175", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{"20", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "4", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"7000", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "-", 
            RowBox[{"148", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "5"]}], "-", 
            RowBox[{"10", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"324", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
            RowBox[{"36", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"63", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"4", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
            "+", 
            RowBox[{"9", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"609", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"66", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "4", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"824", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"400", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
            RowBox[{"60", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"29", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"3", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"6", " ", 
                   RowBox[{
                    SuperscriptBox["HL", 
                    TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["HL", 
                    TagBox[
                    RowBox[{"(", "4", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.5695665407934403`*^9, 3.569566546004448*^9}, 
   3.569582295332534*^9, 3.569759709767667*^9, 3.570269375809991*^9, 
   3.5705198405854917`*^9, 3.808428830677897*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]H", "4"], "[", "Nn_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["H0", "10"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"192", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "8"]}], "-", 
        RowBox[{"486", " ", 
         SuperscriptBox["H0", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "6"]}], "+", 
        RowBox[{"320", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "-", 
        RowBox[{"18", " ", 
         SuperscriptBox["H0", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
         RowBox[{"HL", "[", "Nn", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"263", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"48", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"32", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"47", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{"8", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "15562"}], " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
           RowBox[{"25", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
           RowBox[{"972", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"532", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"15", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4422", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
           RowBox[{"345", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"72", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"9", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"18", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"175", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{"20", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "4", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"7000", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "-", 
           RowBox[{"148", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "5"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"324", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
           RowBox[{"36", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"63", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"4", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"609", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"66", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "4", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"824", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"400", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
           RowBox[{"60", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"29", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  RowBox[{
                   SuperscriptBox["HL", 
                    TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                    MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "4", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], "/", 
   RowBox[{"(", 
    RowBox[{"16", " ", 
     SuperscriptBox[
      RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["HL", "\[Prime]",
          MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "10"]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5695665075083933`*^9, 3.5695665188404093`*^9}, {
   3.5695665553354607`*^9, 3.5695665605864687`*^9}, 3.5695823029589696`*^9, 
   3.5697597179186783`*^9, 3.5705198621695223`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HL", "[", "Nn_", "]"}], ":=", 
  RowBox[{"H0", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"om", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "3"}], " ", "Nn"}], "]"}]}], "+", 
       RowBox[{"or", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "4"}], " ", "Nn"}], "]"}]}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"1", "-", "om", "-", "or"}], ")"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.5694013697790194`*^9, 3.569401389887048*^9}, {
  3.5695665689074802`*^9, 3.569566571728484*^9}, {3.569582309269331*^9, 
  3.5695823107444153`*^9}, {3.808434115657187*^9, 3.8084341163360157`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hh", "=", 
  RowBox[{
   RowBox[{"H", "[", "Nn", "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.5695665889205084`*^9, 3.569566623856558*^9}, 
   3.5695823152816744`*^9, {3.5695823723789406`*^9, 3.569582385254677*^9}}],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["H0", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "Nn"}]]}], ")"}], " ", "om"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "4"}], " ", "Nn"}]]}], ")"}], " ", "or"}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"5", " ", "Nn"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "37"}], " ", 
           SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
           SuperscriptBox["om", "2"]}], "-", 
          RowBox[{"40", " ", "om", " ", "or"}], "+", 
          RowBox[{"32", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "Nn"}]], " ", "om", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", "or", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
          RowBox[{"32", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"7", " ", "Nn"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"om", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
        "4"]], "+", 
      RowBox[{
       RowBox[{"1", "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"om", "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"3", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
         "10"]}], 
       RowBox[{
        SuperscriptBox["b", "4"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"11", " ", "Nn"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"123", " ", 
           SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
           SuperscriptBox["om", "6"]}], "+", 
          RowBox[{"128", " ", 
           SuperscriptBox["om", "5"], " ", "or"}], "-", 
          RowBox[{"82748", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
          RowBox[{"160440", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "4"], " ", "or", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
          RowBox[{"77760", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "3"], " ", 
           SuperscriptBox["or", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
          RowBox[{"44552", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"7", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "-", 
          RowBox[{"277568", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"6", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "3"], " ", "or", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "-", 
          RowBox[{"228096", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"5", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "2"], " ", 
           SuperscriptBox["or", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "+", 
          RowBox[{"289024", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"10", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "+", 
          RowBox[{"310144", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"9", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "2"], " ", "or", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "-", 
          RowBox[{"82944", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"8", " ", "Nn"}]], " ", "om", " ", 
           SuperscriptBox["or", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "-", 
          RowBox[{"234880", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"13", " ", "Nn"}]], " ", 
           SuperscriptBox["om", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], "-", 
          RowBox[{"6144", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"12", " ", "Nn"}]], " ", "om", " ", "or", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], "+", 
          RowBox[{"63488", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"16", " ", "Nn"}]], " ", "om", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], "+", 
          RowBox[{"20480", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"15", " ", "Nn"}]], " ", "or", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], "+", 
          RowBox[{"20480", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"19", " ", "Nn"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "6"]}]}], 
         ")"}]}]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5697598406868515`*^9, 3.570269493423157*^9, 
  3.570520046261783*^9, 3.808429039351762*^9, 3.808434282853417*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Happrox", "[", 
   RowBox[{"Nn_", ",", "b_", ",", "om_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{"1", "-", "om", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "Nn"}]], " ", "om"}], "-", "or", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "4"}], " ", "Nn"}]], " ", "or"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"5", " ", "Nn"}]], " ", 
         SuperscriptBox["H0", "6"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "37"}], " ", 
            SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
            SuperscriptBox["om", "2"]}], "-", 
           RowBox[{"40", " ", "om", " ", "or"}], "+", 
           RowBox[{"32", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"4", " ", "Nn"}]], " ", "om", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"3", " ", "Nn"}]], " ", "or", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
           RowBox[{"32", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"7", " ", "Nn"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}]}], 
          ")"}]}], ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"om", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
        "4"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["b", "4"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"11", " ", "Nn"}]], " ", 
         SuperscriptBox["H0", "10"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"123", " ", 
            SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
            SuperscriptBox["om", "6"]}], "+", 
           RowBox[{"128", " ", 
            SuperscriptBox["om", "5"], " ", "or"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"4", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{"522", "+", 
              RowBox[{"20165", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "5"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
           RowBox[{"40", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"3", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{"52", "+", 
              RowBox[{"3959", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "4"], " ", "or", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
           RowBox[{"77760", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "Nn"}]], " ", 
            SuperscriptBox["H0", "2"], " ", 
            SuperscriptBox["om", "3"], " ", 
            SuperscriptBox["or", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"7", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1710"}], "+", 
              RowBox[{"7279", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"6", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "200"}], "+", 
              RowBox[{"4537", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "3"], " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "-", 
           RowBox[{"228096", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"5", " ", "Nn"}]], " ", 
            SuperscriptBox["H0", "2"], " ", 
            SuperscriptBox["om", "2"], " ", 
            SuperscriptBox["or", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "+", 
           RowBox[{"256", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"10", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "165"}], "+", 
              RowBox[{"1294", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "+", 
           RowBox[{"128", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"9", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "280"}], "+", 
              RowBox[{"2703", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "2"], " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "-", 
           RowBox[{"82944", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"8", " ", "Nn"}]], " ", 
            SuperscriptBox["H0", "2"], " ", "om", " ", 
            SuperscriptBox["or", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "-", 
           RowBox[{"640", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"13", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "90"}], "+", 
              RowBox[{"457", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox["om", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], "-", 
           RowBox[{"2048", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"12", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "20"}], "+", 
              RowBox[{"23", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", "om", " ", "or", 
            " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], "+", 
           RowBox[{"2048", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"16", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              RowBox[{"40", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", "om", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], "+", 
           RowBox[{"4096", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"15", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"7", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], "+", 
           RowBox[{"4096", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"19", " ", "Nn"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["H0", "2"]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "6"]}]}], 
          ")"}]}], ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"om", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
        "10"]}]}], ")"}]}], "/.", 
   RowBox[{"or", "\[Rule]", "\[CapitalOmega]r"}]}]}]}], "Input",
 CellChangeTimes->{{3.5693127512870493`*^9, 3.5693127788610883`*^9}, {
   3.5693210732097845`*^9, 3.569321077989791*^9}, {3.5693245959289355`*^9, 
   3.569324606730951*^9}, 3.56956663984858*^9, 3.5697596025815163`*^9, 
   3.5697598598698783`*^9, 3.5702695231581993`*^9, {3.570519874640539*^9, 
   3.5705198767815423`*^9}, 3.5705200612448044`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Solve", " ", "the", " ", "ODE"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "=", "0.704"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"or0", "=", "\[CapitalOmega]r"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"om0", "=", ".24"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "H", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modfried", "[", 
     RowBox[{
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"modfried", "[", 
       RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"ODE", "/.", 
                RowBox[{"om", "\[Rule]", "om1"}]}], "/.", 
               RowBox[{"b", "\[Rule]", "b1"}]}], "/.", 
              RowBox[{"or", "\[Rule]", "or0"}]}], "//", "Evaluate"}], ")"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"H", "[", "Ns", "]"}], "\[Equal]", 
           SqrtBox[
            RowBox[{
             RowBox[{"om0", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "3"}], " ", "Ns"}], "]"}]}], "+", 
             RowBox[{"or0", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "4"}], " ", "Ns"}], "]"}]}], "+", "1", "-", 
             "om0", "-", "or0"}]]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"H", "'"}], "[", "Ns", "]"}], "\[Equal]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "4"}], " ", "Ns"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", "Ns"], " ", "om0"}], "+", 
                RowBox[{"4", " ", "or0"}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "Ns"}]]}], ")"}], " ", "om0"}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "Ns"}]]}], ")"}], " ", 
                 "or0"}]}]]}]]}]}]}], "}"}], ",", "H", ",", 
        RowBox[{"{", 
         RowBox[{"Nn", ",", "Ns", ",", "0"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "2000000"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsol", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", "[", "Nn", "]"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsolp", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "'"}], "[", "Nn", "]"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yH", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"H", "[", "Nn", "]"}], "^", "2"}], "om0"], "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "Nn"}], "]"}], "-", 
        RowBox[{
         FractionBox["or0", "om0"], 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "4"}], "Nn"}], "]"}]}]}], ")"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yHp", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "Nn"}]]}], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "4"}], " ", "Nn"}]], " ", "or0"}], "om0"], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"H", "[", "Nn", "]"}], " ", 
          RowBox[{
           SuperscriptBox["H", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], "om0"]}], ")"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5508166527706566`*^9, 3.550816717300748*^9}, {
   3.5508168825959806`*^9, 3.5508168828459806`*^9}, {3.5508327403207493`*^9, 
   3.5508328414368916`*^9}, {3.5508330277331533`*^9, 3.5508330300731573`*^9}, 
   3.5508351689682813`*^9, {3.5508352026033287`*^9, 3.5508352028133287`*^9}, {
   3.5508352840554433`*^9, 3.550835287926449*^9}, {3.550835357756547*^9, 
   3.5508353638975554`*^9}, {3.5508354591496897`*^9, 3.550835536611799*^9}, {
   3.550835573777852*^9, 3.5508356079939003`*^9}, 3.5508359330643578`*^9, {
   3.5508359774414206`*^9, 3.550835989293437*^9}, {3.5508362734868374`*^9, 
   3.5508362792278457`*^9}, {3.550836376773983*^9, 3.5508363771539836`*^9}, {
   3.550836673749401*^9, 3.5508366796304097`*^9}, 3.5508419146416817`*^9, {
   3.55084251743913*^9, 3.5508425663296156`*^9}, {3.55084260458208*^9, 
   3.55084260472208*^9}, {3.550844887140851*^9, 3.5508448924136605`*^9}, {
   3.5508451407858934`*^9, 3.5508451974311914`*^9}, {3.5508452528004866`*^9, 
   3.5508452552496905`*^9}, {3.5508452904141517`*^9, 3.550845299742968*^9}, {
   3.5508986383806725`*^9, 3.550898665234208*^9}, {3.550898864152586*^9, 
   3.5508988712909946`*^9}, 3.5508990667471733`*^9, {3.5508997755617156`*^9, 
   3.55089977756383*^9}, {3.550900137513418*^9, 3.5509001377754335`*^9}, {
   3.5553186513584137`*^9, 3.5553186965844774`*^9}, {3.5553187508635535`*^9, 
   3.555318815833645*^9}, {3.5553188610707088`*^9, 3.555318863340712*^9}, 
   3.5553189348928127`*^9, {3.5553191568981256`*^9, 3.555319158979129*^9}, {
   3.555319448349537*^9, 3.5553195468346753`*^9}, {3.5553200417843738`*^9, 
   3.555320054836392*^9}, {3.555320267096692*^9, 3.5553202831097145`*^9}, {
   3.5553203222357697`*^9, 3.555320325265774*^9}, {3.5553203582308207`*^9, 
   3.555320359251822*^9}, {3.5553229734775066`*^9, 3.5553229870895257`*^9}, {
   3.5553233997871075`*^9, 3.5553234932812386`*^9}, {3.5553235782953587`*^9, 
   3.555323596788385*^9}, 3.555323629743431*^9, {3.5553241234501276`*^9, 
   3.5553241582541766`*^9}, {3.555324810237095*^9, 3.5553248356411304`*^9}, {
   3.5553249057022295`*^9, 3.5553249319272666`*^9}, {3.555325015740385*^9, 
   3.5553250340634103`*^9}, {3.555325071289463*^9, 3.555325153092578*^9}, 
   3.5553253024157887`*^9, 3.5553253597048693`*^9, 3.5553255795101786`*^9, 
   3.5553256421802673`*^9, {3.5553265284625163`*^9, 3.5553265298425183`*^9}, {
   3.5553266368896694`*^9, 3.5553266397506733`*^9}, {3.555326699669758*^9, 
   3.5553267005607586`*^9}, 3.5553267346068068`*^9, {3.5557448474236975`*^9, 
   3.5557448783644676`*^9}, {3.5557449283353257`*^9, 
   3.5557449289393597`*^9}, {3.555745095154867*^9, 3.555745133560064*^9}, 
   3.555752063199416*^9, {3.5559250576704593`*^9, 3.555925085347042*^9}, {
   3.555925137683036*^9, 3.5559251383140717`*^9}, {3.5559252686875286`*^9, 
   3.555925268791535*^9}, 3.555925924329029*^9, {3.5559261118457546`*^9, 
   3.5559261323339267`*^9}, {3.555926581280605*^9, 3.555926583216716*^9}, 
   3.555926688272724*^9, {3.5559272039492197`*^9, 3.555927204601257*^9}, {
   3.555927634436842*^9, 3.555927639233116*^9}, {3.555928529435033*^9, 
   3.555928535185362*^9}, {3.556097244520999*^9, 3.5560972843070555`*^9}, {
   3.5560974080052295`*^9, 3.5560974081452293`*^9}, 3.5560974498912888`*^9, {
   3.556097696509636*^9, 3.556097696699636*^9}, {3.5560978147468023`*^9, 
   3.5560978271078196`*^9}, {3.566553982328065*^9, 3.5665539823904653`*^9}, {
   3.569079267580186*^9, 3.569079273961195*^9}, {3.569079342963292*^9, 
   3.56907949759851*^9}, {3.5690795391255684`*^9, 3.569079548956582*^9}, {
   3.56907964650372*^9, 3.569079714025815*^9}, {3.5690797744959*^9, 
   3.569079784836915*^9}, 3.569079856030015*^9, {3.5690804312718344`*^9, 
   3.569080431471835*^9}, {3.5691321890815086`*^9, 3.56913218989251*^9}, {
   3.5691322201575527`*^9, 3.5691322306895676`*^9}, {3.569132261824611*^9, 
   3.569132288709649*^9}, {3.5691323246067*^9, 3.5691323248767004`*^9}, {
   3.569132392206795*^9, 3.569132396597801*^9}, {3.569132456097885*^9, 
   3.569132491383935*^9}, {3.5691325218089776`*^9, 3.5691325277499857`*^9}, {
   3.569133772951741*^9, 3.569133778562749*^9}, 3.5691408052038145`*^9, {
   3.569141504965802*^9, 3.569141511316811*^9}, {3.569141596920932*^9, 
   3.569141597140932*^9}, {3.569154685112066*^9, 3.5691546852960763`*^9}, {
   3.5693108878784237`*^9, 3.5693109037514467`*^9}, {3.5693110737176857`*^9, 
   3.569311075387688*^9}, {3.569320545148041*^9, 3.569320560321062*^9}, {
   3.569320596466113*^9, 3.5693206012761197`*^9}, {3.5695667319127097`*^9, 
   3.569566768568761*^9}, 3.569567160409315*^9, 3.569757211657979*^9, 
   3.5697572559350414`*^9, 3.569757288430087*^9, {3.5705198851625547`*^9, 
   3.5705198853825545`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ns", "=", 
   RowBox[{"Log", "[", 
    FractionBox["1", 
     RowBox[{"1", "+", "20."}]], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5693253056619368`*^9, 3.5693253297359705`*^9}, {
  3.5693253651610203`*^9, 3.569325375593035*^9}, {3.569566787400788*^9, 
  3.5695667875807877`*^9}, {3.5697572204689913`*^9, 3.5697572303810053`*^9}, {
  3.5697572915700912`*^9, 3.5697572917800913`*^9}, {3.5697573228841352`*^9, 
  3.5697573229841356`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "0.05", ",", "om0"}], "]"}], 
     "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".05", ",", 
       "Ns"}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.569757654133602*^9, 3.5697576559336042`*^9}}],

Cell[BoxData[
 RowBox[{"-", "8.905591375452104`*^-7"}]], "Output",
 CellChangeTimes->{3.5697576589536085`*^9, 3.569759640176569*^9, 
  3.56975988245391*^9, 3.5702695390202217`*^9, 3.570520077687827*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "0.1", ",", "om0"}], "]"}], 
     "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".1", ",", 
       "Ns"}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.5693115731743894`*^9, 3.5693115995684266`*^9}, {
   3.569312960889345*^9, 3.569312966500353*^9}, {3.5693204707149343`*^9, 
   3.5693204828099527`*^9}, 3.5693210893818073`*^9, 3.5693253098219423`*^9, 
   3.5693253801240416`*^9, {3.5695669504870195`*^9, 3.5695669658990407`*^9}}],

Cell[BoxData["1.779500991005989`*^-7"], "Output",
 CellChangeTimes->{{3.5693204772689447`*^9, 3.5693204986309752`*^9}, 
   3.569321110002836*^9, 3.5693246302039843`*^9, {3.569325325114964*^9, 
   3.5693253477889957`*^9}, {3.569325384064047*^9, 3.569325402948074*^9}, 
   3.569566779219776*^9, {3.5695669529070225`*^9, 3.5695669694400463`*^9}, 
   3.569757623778559*^9, 3.5697596471175785`*^9, 3.5697598872439165`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "0.5", ",", "om0"}], "]"}], 
     "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".5", ",", 
       "Ns"}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.5693115731743894`*^9, 3.5693115995684266`*^9}, {
   3.569312960889345*^9, 3.569312966500353*^9}, 3.5693210902718086`*^9, 
   3.5693253109829445`*^9, 3.5693253814440436`*^9, {3.5695669573980293`*^9, 
   3.5695669669990425`*^9}}],

Cell[BoxData["0.023715476970054272`"], "Output",
 CellChangeTimes->{{3.5693115835664043`*^9, 3.5693116006594276`*^9}, 
   3.569312967240354*^9, 3.5693211148738427`*^9, 3.5693246384189963`*^9, 
   3.569325350689*^9, 3.5693254043280754`*^9, {3.5695669592280316`*^9, 
   3.5695669704900475`*^9}, 3.56975964807758*^9, 3.5697598882839184`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "1", ",", "om0"}], "]"}], 
     "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", "1", ",", "Ns"}],
       "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.569313221881713*^9, 3.5693132245527167`*^9}, 
   3.5693210910918093`*^9, 3.569325312292946*^9, 3.5693253826640453`*^9, 
   3.569566968139044*^9}],

Cell[BoxData["0.7520455173312013`"], "Output",
 CellChangeTimes->{3.5693132249427176`*^9, 3.569321116413845*^9, 
  3.5693246399589987`*^9, 3.5693253525490026`*^9, 3.5693254052880774`*^9, 
  3.56956697252005*^9, 3.5697596485775805`*^9, 3.569759888813919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "0.05", ",", "om0"}], "]"}], 
       "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", ".05", ",", 
         "Ns"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", ".00001"}], ",", ".00001"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff from NDSOLVE\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=0.05\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "0.000008"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569321109872836*^9, 3.569321236556015*^9}, {
   3.5693246482630105`*^9, 3.569324653854018*^9}, 3.5693253162529516`*^9, {
   3.5693254097490835`*^9, 3.569325412409087*^9}, {3.569566978931059*^9, 
   3.569567018377115*^9}, {3.5695670969392257`*^9, 3.569567098209227*^9}, {
   3.5697577313547106`*^9, 3.5697577496577363`*^9}, {3.569759656549592*^9, 
   3.569759657929594*^9}, {3.569759908886947*^9, 3.5697599407309923`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw02Hk4lt/TAHBRUpYkSZIkIiQJKRyy79n3fd93kvWxLyE72UlCiiQhTiqV
SqWSVIokSYpQCdX7feb83r+6PtfMmTMz9+15aLejn6ELLQ0NzREmGhrqv2XR
jvQHnUsQDU1PqCT7edT7nFfHjPekwn+huw5ZiejfXRzPy5tK9fciXIJZctqa
Nw7n/GeKT154Iy7rydi1jvcM1fzZy81YdNY5859bBTW/wPR+I37LUv539WU1
1dsfMpdh/toN0ssr56gOZ9aMRd7yIT6/dtX/557L4u/OoSuDYzWLyo1Uz9g7
N6NlL52R725N/9l+SOdPM6pcM5L6S/Uy9fwPdpN6pPIoW+Dnyxaq91XcyUFT
Reo3Fz1awbyKOTjd+Y/1wspVan/7DR/XYXHxK0vfM65R698NLGnGz1fc8+Z2
dVDjHhxrm3HoPR7x2cudVIclsNVirtzBh1+Vu6j1NPTzUzC2TXObedFNjb9S
wAXIUViR7ovbjf+sKGQ5XI9oV8KfLEb2/OfKsLHbzWhwzGTnoupNqmm+H21G
tXfFvRZYblHr8XDN16KwRsaO+Zfg0IPTGUgrZ5J+vvI21d2xD3Mxd9hN4+8e
vdT73mvn1eFvNqXVcxJ3qPe9/63ejHuUT8zNrlBNIyA01YRz9hmi2d67VH90
el+LnTftT/+WcY9qvdHy01j6x/rXX037qFZybcpG69+MC37ddZ/qCOmN59Fw
T3fIzBTVil91cptQQ23R7S+XH1D3lSim2Ywi04M2fwl/SM3/wvStHukF6tlN
K/dT+xNevVOMeM33XfzM9Igat2+76ofn5deuTL0A19mer8S9e0Y1psofU11T
an4BF2zoLPjk9oTqTV9qmnDrCa3AIM4BqvOEyxpx6fTh7QuRVFPMxFaqcaKN
QE/ge4iPU9YkYN8BNrd51adU+8dK5yEzZRqWwAaqezoe/6hFim1fW7+zPKOe
3zH0/BLat++NVUAQ1Yo6iStNiK20j/b7S6ppLt50bEArLG31/nLPqfn9hivl
aCL2rP5cJdU0/LGWHujRYtYvv3WDVEdRFopwm1t0+awH+Iv5lfO44rWXqt9j
8EeX4Ys4Rddi5pvEC2q9fzc7LuKAHrVc30KqaX4Z25/Hlockj35bAff2Shdh
5drd733sh6ieo7h7I9Htm1K+9lJN2Xi2vxxtTV8V89n3kjqf1o/pevT37+cX
MxlUKx6qkWhCnwJeRnrPQ/zNUb9LaGCid8+M6TA13vvt0nnUbtbywOs61ZRk
g+oiVPWgIuDLrlfU+1IkvjvixaKrwqPpYOHBk+VYze3hh2e/wfzydfX4jNT7
0ruur6kO2cd0Cc/Q/TLpfA6+G+F/ASs8Y9p0SfENtf618/nVOKeSr6/qItU0
9PTqSfijr0xsPtcINR6kHZWNZOT1jqYmU63Y91XlHDrF6LwQuUg1TVDffCN6
9+pko7/DW2q8h3bHJXSw7rSL82NwLP+hepQQeo7HXPYdNb8yS74cvVS5/lK7
Dux9YsEXCW95mqWwdZRqVqFfBTjq/aTmoTjwsZq5c3igaZVWcBZ8mZ7nAmZT
2GDLLDZGtWtEbAOW3Zt3NNkZPLan5Bx2Zt61bU0JeH5rfDHOXKxfCH8KLuIs
C8XtbyQHFte/h8/LbVcz0ftbNxp9ETjlFF8l2tiglToVTHVPeuVCDZLMfuHi
eAG8DsWdQ7Zh9koj76mmeGozV6Nkuy88ppzjVOPrAoWoWS105Yke1TRDbZkR
6PX+NcOaiWD3p5cTMN3W9Nbb18HbmOSLsOgqR7b8PHhqKKISm36o8rkm9IHq
n6bxVTjmgajWQTvwkYyWMlx3+dreC/ngewM4Bz8rUqIT6AeHqR0NwCsxj0bL
aSeolpO8k4j43cy7OI9QTWl0iS9EenofinL8wKyjmRXohJRvCFMt2FyqoBJV
cv82SBqB82897UrRA7oEMZotH6l+7W6XgxanWRjDNcH6PDpBaOezM58WYsB9
hg1xWK2Dv9enDXxWMTcf+1c2VX6aAX97HVSGi5OPRjnsmaRa5HxWBb7te8fi
jQX4euDlEjxjoi9tkgX+V0zJwRzyb9ie3AUPmDwKxYr8rrMaf8AMsboxyIPx
+8Nbhz5R++f+XJ2LcuYj6uQ8qaYxuhZSgrpe0Se2VUJcWzmlDE32ZDuIv4T4
mg+mxWhTHTdqYJ6Czz8z2hwkc/o8F78KON3N4SRyDJX4VRYOtlZ4dBKn23Q/
33YZfCGYPQdfVdFozv4E3l++qxi/E3mezsjzmWqOh6ZlmGGLrUeiMfhmC1MJ
llieUv2XBn76OT8XW70P4jt5E8w3NRWLE/r+/p3/BY40/e6OLjWlvvEWm6Za
oV4iHU2zTadrOVBNObH+XD4SDNVCQnkQj7rGewY5v2qYXXcP4s8ONBehSjnG
qg+/werNQnlopMLL8KboF2p+54WhFLSdrp+uwg480iXhikxdRa9G5hCrnInC
OffTXS3vgG+sxGThx6Jft8ksgY1G7xdixizd+1tFZuB5hn8rwRoLF8MXbMDo
VWIpTjBlEX2aBT4iOlKEezp83166DRZYisjGf7ifZKb/BA/o/Y3GRykHFD33
faVadPWMCwr9cPq7ujXYpasqFbWozVULnKaasimIMR/N1usb090CO1a/O4NE
mS+ve78InpbYXIzc/Tdfw4LfqOcx/UA+qnke4F5qCc6ZUT+F3ks/2x6eAQ6m
LLghnmKJh2Y94Nrz+yjY8k9OpNQCiY/8ysYF9gv7t+ydpfrci7oi/Py20eic
Ofj024oSzCrYmvX4FHh9D00x1kljV2rEYN+evXk45WvwQup3cJhxexJ2rPN8
dohtDj6/MnvVMc1rrgvVIuDPHtzxqILxYfxmVaopBxxWshGSj7Cm2EJcUPRH
ARrxFZGaPQHxTcfGClF45Rtm22zwoaHUPMT57NRkfwPkO9gknkJtdHI3ZHvB
/XvqApGx1Exhw1uw0IvnIXjetdR/+y8wT2ZgBs4u0tFMYf0O39++jflY/MHq
7l/7wEer95/Bj1cal12UwWJbY4uw936b54PW4D3mLbl4ox1zo3Io2PT0UBKu
y+pOaDkN7jGKPI7VbvnY7K4HW434xqOJhZ3SWbeopmRNzOegeIHHLP/egNH7
q0WIzyz6k88P8N6Q1TOoJ0WsZ4RlHr4//iUUINvOd0XaQuD2wK4MtPolM6Dz
GJhf72kAKt6poLXPChz87FcEljk+y1cUDK4Qic7GQ5SKFfpMYhmPMzik5fhg
yHnixwZlmH3iX+NEDzjwT0MpbtnanGj0GizajAqxvrq97a0F8Ews3Sn8LYz1
8EHmBapp3iYY4PSGnk2Ve8ENm8RSkPCI/xSLItWUe71XClEf8+6bURYQ17G6
WY7cFJ6emQmEePjIdAWiqf7Z+eYUxBmDHhajorXcIw9qIE5j1JKFxN2O/eno
hrj+wrwH6rvvylM/BDbdXZKI7UXTFYpmwXFfJgrwUuZl+2SGRdhHzY9ynPV9
KDZ0N9WUrulLlVjIeLXa5SjEdcWrynBP2+5eYyPwy978PGy+Xf2jsjd44PH3
aDwX4U1/KBE8/yMmHKW8yxbkK4d6L82e5yLeY9c0Nl+D+K0mjTLUfnbEg2aA
6p6hofxKpE9Pe2p2CuKdHt3laMpdsPHdmh9UjzpaFyDKQ51Hj7jAtYHzcYhT
LPBb1yHwMPe/ENycVbipUQdckHAq97/Poy7xEhfwqvnbMjxmMm6QFk01JeC+
fBUOa18fdLIQrNUvVYlZd+zPc2+G/KPJY4W4Psrwqtl9MOtZ9kSsNHZiSG0c
rH9kLhC9Vir7JbUCDjd6l4MCz93iFGD/CZ93ByTL0EaGqSPs+6mmtByvqUTV
nsxWdGrguAnmCnT0kUTkvC14qex2AXp2wLzs/Qk4/2DHYDzyzInCA1lg3t0G
QZj2R/XojXrwZf/EHFxs1kfTdAtc55ReiiU6v+4ufwP+tupeiR9wb1HOWAQz
a3mXY8cYGedI5l9UfzEfzsfL720SvfaCl4yux+IclfhaSwWwWHv1CSRyvu6e
pjnVFJvtQbmod8PjKZkAsJzi7VJk7b2wQSgNnL7wogItPuYU2XaW1Cs/WYrS
DyId+i6I62mI5CL+PCefH4MQV+KMOYG6fqZkTnwF//2zNRYbW1xqek6/RPX9
Vu58PHP9+cCtXWCbL1JlOIHn9/fLMmDa+4wVmDuWZ0uVATgoSagYt35Qlszy
BPsG/cjEOmoeJjHx4MrQEGM8UZcZ6lsKHo2KTkORjK2FNlfJ+U3/fV+y+75q
13lMNeWxvG85ujjw95XsJ4g3mh0oQ2qH+FeEaX5Tra17JB+9y9fk5toOlpXN
oaDQJV/5DRLgYRfhcMxilWe7pAUW4XqQi2u7O2I+OYGr3T1LMeIdrRyKBN//
a1eOh+LW3rqTD668xnEG+37c96H1Enjc3fwUHrN9xXDzPtj56k5nZDScIvZo
AhylL5CD7hrIGL/6RzWl4E51KZJ5+OnkR65lqv2EP5ajCyqFFd+lwOUsOkWI
B6vd+aO/DD8vf/gTUdbhn9MbvMEzdwROYrrL51g5ksH2M0fycaiwiTRfNXhf
6s0yPHV2rbVYN/jvO4kybLWzNfboMLi2mTsPPy5wOq+2AO691xuEFVm3PDJk
WaF6WS8yGV1JvTVvuw/8mjJZhPbSBXJ6qVBNEW1LKUdFkbvRCTvwtUsfi9HG
nwNO8eGQ7/fuRQaK8qOkns4H00zcssZzUweaSprBVZ//ZmNHx9HB8w/Bt8Xd
S/Hgm8zlK5Pg7cm1ZVjdBPH2rFmlunTANx93Pv6q2s8NFtW6G4ZFNcq8hg+D
N7AcTkLlN3WyJwzB3R13itBm2dW2OR+qKeaPnMpRQuuFkdUUiOtPHCpGP/db
0W6oAfv83XgKeZzfKLT1Brhv6bc3HuHt1N39Grwl6XQu1iv2CNr/A1xtN1KK
b27ZfuYI6x+qMwOYSrFkRh9WFQFH+Ldk41r6sAkDNfBYP6ch3k4R3GjrAD7d
2H0apf8eOuAZCeZG5iXob2CSSWghWGTd0TIUMCMVEddCNWWdSVsemnD5WJn5
COJixeGByHQ0727xFDiB3T8N95mrzNTS/aXaweRIMZZ9trD5Cg/Y82J4Gb6k
ffbwjSPgBJrBfMx7x9DmoTHY/JvnCZyDaONf+oHFqrpT0Lr2y3Uf0qim5B1+
cwaFHXR4PHsOvK81oQxNN7AurvRA/mE7lQJkzd+znWEEnLkrJxw9KfNTYP8F
FuVbTsJK23a58LL9g+ffyHQG//fbWJrofvCr482lWHBjdLOMBtjaUTQfF8fv
H1JxAtdYM4Vipj8jK/rRYNOOsBQUE5q+2+YM1ZQkHpEzaH5WVt2jFSw/v68U
OXt88Q55AvkPZkZz0cvx4pzYabDix0kvJCAmMHKXlkaRhvofFk3p+N306jcd
VjC7FH8xLjo/uOb5TnD34XPF2MC5kd1CBFyUyHIab9ydIDgqA+6T7HNEfXLZ
B6JVwZalh3JQknn54Z2GVFO2mi0VI5XgCwpdtuDIEYUziDarXd3KC/L54x+l
o54Ld44vnwD7N1ZY4eh7z8zOJIB/3PuXheU+jNrJZIOTc8+cwct/Z9xelpG4
m3gRbuda9gttAOsXOaThUOn1YVuvgXlV/vt7RdKQndJ6G+4XmxHOQfM+u1OM
BsDXk9PPoOZUsaz5Ech3Wi9QgHzPyRZlfwbXZpXGI9GbGpXiP8HmH1TD8ZcR
k7ontGuo5nvDlIcblhybfTeBUzp/F2F3dv92Zm4wN41CLt4rHtXTKAS2LvoV
hCe00/q0pcAy23Yno2q3woHpY1RT2LNZCpF9fM1wqh7EKy10//s8rLg8JmQF
/t2WnYFGOvHUPTfwQM1nY1w89HDONRi863VrFjafH15aFws+IBZQhDlYJmnO
ZYAVvvPk48F9CwwqxeAZuZsUnKNKs/lDLfjlAV0K0ndg3h53BfpZO/EjD7FE
ce3e3QNxcznmItRfJLivpx/i8opcWSitVfKg3SuI2+82V0IaA8eO/P0IXmzK
yMT0M3rHyubJ+a1phbh3vbWm3D9wdB9LHo7b42HwhpGW6gRL+QisqBBqEc4J
DnztE4/+WsY7bBcASx05no+6QrM82g9STYlQ1ylA4TllAWYI4hNX/iUjmUsN
J39qgdmfDgXgn/evxeabgXtzb+Xg1o+9qZLO4B+lrIU4cM2z7Of+4DpXnInF
d46eCYwC2yfgY+ibzEzV5jTwNvm50+ii8e/65gLwwv6OAuTtT99y/Cz083bc
OxsJp2/p/NYEcd6Adk80dZ73VkYXmNv4RAquvb3/geh9cL+sWD52Hj367OEL
MA66noP5VtRfe46DKydrw/AYh8n4hlnw+6bn8ahcwnG6bgXuu+RLyUPWen7z
6gx0VF/84pyLuDwjlyfZ6eB9m86JRMOJqbRJu8Hl9hfjcEFVwUYBMXDzhW15
2Lj7LFvvUfCJF3M5mO1VM5eTOpjB728EHljs5qM1BpvxjMeiTNaHwlX24DXG
pbmo4/DOq3q+cH923IYcNGHrp7AaAXF/7y3+iDXp5v36VHB76/1ULHtxi7FZ
ITgsSz4Puw66vFt7Diy51TUV56xcc29pAYtarviibr6NC3Y9YNnOiGw0pWkd
xfwY7mvewZWD2AMurb/+BuIz8RPBSKGIJsf9M1jtQVQy9rxhyM3xCyx99lIu
Lpisqb29di3sJ2kkBd9k/iUewAZuSL4ZgGYkNa/z8IK3xtzORpzWJar9+8GH
RBmykXL81ycnZcHmzAGeyLdBwVJQE+zKPJKKi59mTwyagnW9X+XgO0sffOOc
wUMnuuLx3C7p3wcCwXfjZCMRt3pK/NsY8Krjjhyk7vua+VQGuMqo/hQKzBct
kikBV3qFWuDyrmi+yTpyHx7NxPc/DDTmtoFvXuHNwosb9xw+1gseNqS4Y16J
kJvfnoLvaAalIm2Le9qlo1RT+uhcs1EoZfuQ5leyD3nfCFR93sv+1zJ4Ys4x
Hj963D1dw7COao4Sq2y89GNTiCEHmE0iIh7v2en4798esMqr1pNIT6U19eJB
sPD5viwU7kXPbqUA3nmJOQWdyzEvZ9AF03T88sYDHQ1CbZZghjzKabw6ttri
5A7uYgpKxYIMx+U3h4KzZv7aIcMDVfdwPFgg9UgGijZdMPDOBu8aOp6G6qNU
R7ZXgHltavTxYE2h671GsFqtSzqm6f88F9wJtswxT8MiC7IRfH3gAXtVbWTK
lblu4AW4PrL1FIo7NnY66gO43+dOKrroLsEl8p3U91ujhYdPJ9QM/wWHtUuf
wmuvDYklMdFTzSrhnIIPvBPqOMQFpkQ32CHLdRHK7wXBFXnPT6Ek0UePMqXA
0W4Nieiy0S5zOWXwlJ25Lx4JDxj/rA/m//35FGaovu1daAseTJeLw4fub/2l
4g1elrobhGzn3GLnT4JfzP1MQ2nbOhkrk8HuKZ+i0FXEVKCbD26fqQ/HYy62
vCvVYNOb59IwU0ZzQ10z2NvsayA+3EorZYrBygy6ccjxjfENun7w4xiRFLSx
5L1PwCtwz2qmOWqx9OUenQT/XF5MwJZcKw90FsEp/SMJmO518snONeupXhLR
tESNZ9iFhDaBs5/YJSNji6qhfG7w1HRaDFrlFEukEyb5YmLBuGa481DAYXDn
pYRkrFOkPv5OBayfKxOAF80Gs3QMwXvXWVFQ6TYHhU47sIn+hkSk+vLrV0Ef
MI39Zyn0rSC8ND8cnJ71Kx4XmK7XpksB9yQ6xWDEkffbPx/cnkjrhyZf8Na9
qwbv+i6ciDLzL5rqNIP1JlAAkjY5uq6zGywe0xKB37HfuyL4EKxlbx2HkweN
HPOHwRRr9n1IPG+MlW4SLH1tYxwaNvK54b8APuosFYYoW5Z93tEwUF1TcTwQ
Cz1P4tZhAS9ODsXigZwtDzt2gOf+TJvhMMPKk4L7SL7O9mjEy7ZfKF8aXJcY
FYbuP+0YolUh/s7ihQOz1RL9DcDtqjMUzGXw/NA7W3BWcKwlvsVqP67tDS5l
5aAgz4GZrI6TYL6mxycRW9ZJBcFkcJfFpkDceZz+W14e2HITfTx23JRbSlsN
pohoGGDGJ7u0/ZvAPt4H41FrZuPvt13gvNW5k/99nx2p034Adg84exKvZblr
2vESPPB1ewJufGS4TvAj6e92qCEyzhi9kjcPLqsqTUSrOt6OtDQbIF8sNgDV
MP1m9WcGR16Mj8W6/Yk33nKBhx0rYvHPU2y+2kLgjfXegahcu4K7Qwp8WCw8
Cakxij7cqwymdPLJom8P2k/m6ZN6TvpJuCBNVYjWFtwfJhSCkdazIT8vsHGe
UBya3GCX+DYMfNTXPQ6dvv/lkHYSmGn7kxAskxo23p4LXg5TTsZjGuuy91aB
ZSo7DVEKQ45C3iXwNxrHFCTex/NtTRfYfPGeOxpOvlDqdx8s+jI/CVPUZbTf
DoEZ4v5FYKH1d35rTZDzJ1Xi0MBdg7r27+CLzkwJKCzpnenef+Ca+KthmFfN
a10e00bYb+98Mu5bt3RlDReYf3yTGwq4k+DoJwimfLyZingm1Oh/HgLT+GhZ
oYe0GxoiFcF/sxtTcNjuh7p0uuC6lquRWEAx43uqBdhccyUOPbM9ns/qChaM
ykpCMVGbjxQGgoOzpYOxaOnzkZ0x4OG1f9Pwq858Ss0pct/QHlac9MqMX6QI
PGvmfwodWtred7kGPJchHYzGOEa8ZC6T/HiPFJwhVb7pRje4h6YhDh81tr+i
+oDUj7kVhz4F8pn1D4E3l9KmorzsiWXDDySO34XiY8215a9mSf1Db9Pxt8fu
Svar4CmWNitU8lV4cpKBkeobIUcykQbT11SfrWDR8AQH9EO4af/ibnBvekEG
rtYMeBouBq7ZFncCH3c/FLJGFuzXZHYKrSb94ExRBxdPs8Sh+nPXuliMwZzv
NqZg096T9vn24IJ3EsmY7oPsWm4f8IEH/Amoec3f89UnwSENYqeQDW+P9r4k
cJwUIwVvVIibbcoBpzzclYmv2ajkSleA9RKPhSHnSPrD3Reopvzo5s1Cm0v6
Xiu3Q5yX1jYA44606Ae9YKm+T1nYa1iHz+ApeOkqmxvi/MVy9+VbOP9oLiwb
3dn61MN2GuJZRVXWOFAyl/njT/D60i/ZeJeRyWUvOiaq3Y32GKL+gG0m85vA
P0QjctDJrFdLYdxg+9A4Lby3qaT0nxCYBq/m4OePbBSTpMCUF/vUEWVm1wST
EjhFPjYX7WccT87VA1c6sBjh1/tqRLiswDolL3Nxsobrk0o3sAybvj2SdBMK
EgwGrzOUykPvE6c5LlHIfX1dXjizprFTMgO8eCwlD8ve9rW9foZY41oImnov
TqtUSzyYn4fyaRbO9bWAVcQkKFhp11XN4zfAbH6vcvGs/ImvLx6CC5QZk1Cp
9ZFs62GqKUXrwnOQZsSK5IcJiPPWnU/HP890D3t8Bx+x58rCZ9tjIuf+QH5m
c2M20n95jPfERmZq/JuWeSr684Ou9w8H+NWawf/+fmW/65awBzyw6b/3wexQ
CiOjOPjNev5CtNZQqylbDry4bsgBXfZnMuLUBIcZKhbh/uItJy+agltW78Wg
yV6uCiVn8PFH/HmIZnb3nZcBYIG1a/Mw1/Z9X7xjwOzvwilYUll8M20G1RQp
f+Ez6LjP4cOFxRCfO1MVgz0LkY1oHTjQsjEXJ9xUjb95FfJNPVnyUfkXnXrT
2xCXpCQHo/atxk++DIDfR8kU4WcKVj8o78C/T+Ek9NXDcQfHDFif+1YyYsjz
OHbhN7i5/K435sP+borrWeD916uOxXJTJzJesIPbwksTkClbzBVPPjAl/voh
5C+X9OrfATBDXn0CTnPN+JcnD87qL4xBNVl5AsLa4DmBy57oRmeJ9g1zcC/+
mIBfT1QHGLuCUwSVT6BFlobCz0HgpdmvIYjlyOXu6FhwTbN7IhZyav+w5TR4
iCYyACll3NhQX0rydwT99/157e4B1AAOazJJwKHvH5k8vwZWbHvlhbIZX0S4
3wHniI2eRI1SI1V/noGVam3j8V27D/dyxsDG93o90Vjq9FfBb+Da3Dcn0PKV
71u6V8AD+7PiMPu7pSOGGzZRLfdpwg+JMdDYf+IAR1oyBSENifVJkfzgFnbO
OOxkzdK4WQIsPNkehKKTtj6rVQBnBdD6o6Jm7iVZXXDtclUcbnm9h+epJalf
JhGJ+teKqLi6g1lTprTQpJiE50oIuU85IgbTWBzJyooHf6fsjEVc8YptAtlg
Gd+DzljqovpIZznYeCU9GOu/1KPVbwS31RbEIs81pkIfO8D9J/JP4AQRG73w
e2B7JTtDXG7iHLzpBZgl/XQkao/xKq4ZBzcrbKLg5/WBPUfmyH1LfF7o2/OT
k4//gCvvG3qhtTGK9C3rWKkuyv8Tgzezq5yJZAJbrvkZiXjq1UXVt4DFx1st
sQjSvrGZC1y5RisYyzzXMxzhBQdt945Fqu6GH2sFwb0MfBHY8I9JWIAYWDGh
XxPZ5VgwykmBJ27HhyBvQZtyejmwisUdCj7ZZX/wqRI40rYkAiUZOPeWaIKz
bD5Z4bxJNzNXfbBGpF8grorwmhY3A3czu8Qi8Z4NS8k24Lkmj2jcs7Zu3agT
2P+pjg7S11TbIu0JDj3WeBKNZUzwZviDaT03xGH/Z3FiE6HgHjuvEPSPY7ec
bBR47MqQNcq0uqGZE0/qbx2JwjyVNmafU8Gu1+0o6NLEirNiFpgyKe6D5fcV
BxYWgMPordxwv48M5VspuO6haDSybhnKUD1L9qupHYVnfgaXlNaD+2yPuKMI
2S31C00kbqjnijZSLrdptYE5NUIicHHv8d6qLvDI1apIJLzh29OlW2TeLn4f
3KGbPnr8Ptk/w2VLrJEj/LX2Cdj3+74TaHiob/nPC/Dw2+8R2H2HG4PJCJht
g3EQ+mW3jqNxnDzv9bXHcFLN2T10n8HuAsd9McfnYwctZ8Fa99lPotr9Y+jy
D7D+taNhWCowWodhFdw/NeCJetu4Le1oN8P72VGsgoxXOt3aGMCr6wv88YSC
RQjzJnCeTsQJFJTwK855K5j77ukQTHs/P+v6DjD/yks3lMMsWc7GB67k+30Q
8Rk+u+AhBJ4ymfDAlwv8O3rEwPjkvyCk+Ibl3jYpcK9iUzAe2HVx0FeWnHfY
5ovsnbXH7xwD+yvZm+DZus+z3BrEZf2mOPpr8p8gPdL/3k++iEViL+NDYzC7
Rl4wLg/t5eSzAruO9QWh/dcd9550APPa0Xvhrn80kgNuYJqiC9pIR6XimKAv
ifdr2aKRFPnj0cFgndMd/tjr0RvrF+Fg6Tt3Q9Dy5nBP0Vhw3+bzITjNlDMs
PhncOZbvj7hK2hJfZ4DnHtna4fpR49yDeeCeN+0qWIZ/oTKlGGx9ZYsH6nPP
vjRaSeKT3MHY/OKBLunz4HCPfyfQp++P7mdcJPEX50/gUGnvlxNXwBQ/wyBE
H7Hxo2wn2TdfpxsuuFE3n9ND5hP/pYIE1qrTTN8FMxhvtUKtGh+Zjz0CK5pf
8cEqGfE7ip6Do/dRgtHg0937Zl+R+VTowrATR4+02hhY7tK6cDRvaatSNgnu
EisLw3EVqwaLM2Q/W6yDkb54e4DIAql/qMQD89wMynb8DRZ3/aWDZgwOXD7z
Dzwgm2CCOsenBwbWsVFd1GroiVOCaufWM4F77skFIdO1jqwKbGB75yehmD9/
p3goJ7hL2SoMzQu8On6RB5wyyHcC97Tl+U3wgx0t7wSjTHX90ztEwJz8s/7Y
epixyfAguP2yhQcS9rj3OPUwmPfHeju89DvuW488uJLDQQvdTUMsS8pgxXo7
aZS3Y3n/AS3wQNFmM+zYeFXXVR8spPrHEYnLB/iUmRLTWLnjv49EMwatwXm+
0t6o33aqkdGJ9Nv93hcXz57tV/IA04tH+SN3it3MST/wmGxTAJbevIPpcgh4
zggHoLXVQyJTEeCJFhSAn0nkaO+KI/M2+fmjytu6XqYp4Lp7Dn7Y13jDqYxM
8JRsgQ+S+9jb0JsH9n9t44U3hlIerBST/vSLPNAwvdy0RBVY5q+XG64t/LXB
8zwx3TEXFCx0ZV/VRTDlUpITPtbhqzl8hczz0MEJsWgJe2zqBGv4Gzrhkdcf
U9R6wM78+k6owauqLuoumWe9kxMOW7Xua+0HGz9744DUMjinvjwD06RY2GJ2
nsH1e16R51eX6IvGL50WtBwl74eHjS9uVtBWz/4IXvwQ6YuiB+jd+r6Q/V/U
8MU6DreS/n0nz7et1Q9xzUfVSi+BW++k+uOpuCN3ff6CvaVNA1Dblh8fa9Zu
oVryLFMgTqhpXjeyESwu4BCIDKW8BbZsBtdZnQ7EvHcFVbW2gaWVMgPRN9MP
zrE7wUX3FQNx16fyhPY94Oi2jgCUFmZZM7sPzGnDGIDNN3D07hUHN/uM+aO9
xU8/2EiDK6uv+eJF4Qy6fDmwkKGhJ7p1XWNPvxJY5i67C87SWatMpwlOmfW0
QbZvbzgePQ6254rSwaK+EXEBJmBKv74gXv4rXV1nRXxF2QT1nZ6/OeoAHjvT
7YQLeC+953AHq5zY742cL3us0fMFO78oCMASSgK7E4PBGjtFgxHN8zHFrnDS
j4lNCE74jKvCY8FK+EEA2kBTRnskBTwQnmKDMzkinH5lknlNeMwx236L3qv5
4DwGswBUqHxYILgULNchHoq5LbcmSZwFr7USDkSV/guTc/VgRe5b5lgg+al6
UzNx2EcH3FDWVOdzDZwm5BWMxFozNohicKQBQyi+8sDLc7oXvGjI6YFk3ms+
rHsIZt0Vp466fgmKuj0jz/vFkh8+xkKfIfAK7GsvHYzu8k98/TBKnq9zvjvW
kr2lVz1J7k/pUsOPDSqb7L+See+q+CMj92jWXYvkfQoJD8LD0dYBb5fB/cOm
Tsg6/+izkjXscL9pmSUau8B5yJIB3H/1WgB2ufUzl3MTWEiuwRdNDw8uDm0F
U272yWPf2RaTfG5ynpXWE8+vy24z2gN+Zzvhj05w+21jEwZnsSFLvCqhGzYg
DubdzeSIKZoirzIPg5u33/VD6+w3HNVF4B7Koj1OC/1UzKhKzjcJWWKWjDsr
97XBYYf2+KDcs2etUwzBMv7x9pizM7ZbzQKsaMtihksH7HjW2YP7LMy90e5P
8jG3XcE0Fj/scO2fHWOxPuCxz4xWWJh9WVExGOx9Rs4HNQkPV/0NB4vfe2eJ
JY+10XbHgoe/SzjidrM8p4gUsPuHQF8k5xvYe+Q0mc+EThPfTNAXWMoH23Oo
e2K1ErGktlIw948VT/TgMtOn4LMkX8ZAC+n1TasfagCbfwrzx8/f9dV9bwar
rE2wR+Y/ajc0XwMHKzK5oRHGRE9fTOpFbPPH9nxOD0XvkPvOSSnijzLHRL88
BKNdrQHI8/iujPpn4DlLWTv8zeXPV7dX5PnujffEQZFv9PaOgfV9lj3RUk5H
08QkmPPSoAWKrC9kPfuV9Ksz6IvX9IQEOCyS9yHmrghOGjJ6tmsFrGHN74s2
fj146N2arVRXKvBo49N0rHmlDGDFIR1PzM71bdFyE3jAbtYMFYn3m2znADNp
RrqgneoNbS+5wf7zvba42iZlW8EecJHVJUe8N9g1zFgY3NOR7Ij2Hx01qhAH
a4wMGSFJGvMD09Lg5ldbPbHs3YGNUvJg/dtcukgpXXMyRhksfuSlM9I0vHXz
gSbpL22tD9bnlC3bqg+mLJ81wmbvroTZm4LLP4kGINsaUeML1mDWXzP62MXz
3IGfjqSfkkgf7C3Ow3jMAzyo/8EFBf0smDzlBx6jZXVE4V2bbg2FgPu0Db1x
bFxK2e5Isq93FE2corHmpHccWJR+qw86zRJufC2F9Hc5WA4XDM4foD0NpjmX
7IHLir0YdfPB7VvZjVGN/cRkYQnYvOCdM7qw1+bWeBXZx1MGK9wy86Jsfx3p
5624A+5o0TsZdgkcSdNgj3rC7hnfbgXL1BfYontIUZzlOniqfrsTfry2g9Hi
Jpn3oIAVfvHg4Kez98CSjYdd0EhWw61vj8ApLwSt0AfTPeVHBsn+pa664Gnu
0pMJr8nz3/nDGn8fZzd5Mgaec3vrgpbqMsS5PpHniavt0V9feiaXryS+/aUz
XicV86lpgfQzlu2EmVZ+3Vr+DXbX5HJAbDf9y1VpOKheW6LlirYnfz6ZRQ+m
+f7eCPPqOpq8YQIP8J1yx4Jb3ojv3ULi6jmHkdgrI6aA7WD9HEdPJFXR/+n6
LpJfxKOJ5FxUb9PvBdfdV/LAyiK43EAUPKzkb4+1vkuHl0qAu9jLnZDBtSaT
TzJg6xPuHsg8SuighAKY94/FcWynXMUUpQo2N2D0xa4buKbuaYP9Wzj1sc+T
nNtshuD0jWleKDifscLGHNy+7OmBIqwSwutswVmBrhY4bvcfkwVn0v95ZX+c
+inkIPICi29LNsJZF78xpQaQeWPd3FBhkNvU8xNgDQYVL1R+ZOw2TzSJ9w+w
4XP/zCs8EsAplTFeuPHO0/DWNHLfvWeu+MopLdN/WWSef9f1UafB7YNahWD+
DG9fdHObHHN+GXke1kFOqO9t69ToWXCz94QZfnJ2f69wA3jq1jkfPORRWxHS
TPqPGXfAbw/siuhpIx79a4gmfhSaMnaDe5J2eKHqY4eC3t4GM/x87IHsMh6f
bnpA6stpOCDuVx6NsU/Bisa7jqLX/OvuGw2D7Qsu6OAi/8qPAqNgVh42e2za
JUu79BE8NvbcBbMzvOR5MEOet46eG35qFChbukDqmfU748wKZnPfZXL+14AN
1vlSF6y4Zhuc7zDXwRsPq2SzMYBppApEUF/c6MUJFnDfXK8RSnoc/qBtK8kX
/+99V+bi+JTCDbb2L3BBNK6X6az2gO1jpt0QvqzDu18YzO90yB1F/vkk90+c
nH8q6IaOaMZbPD1MrLTWBf3M4wk9i0i+wpgDah3ryAlRBbcL9lmhQFGTJnUd
cBbfayN0IGzu4XYj0u+Hz5po5vapqS8WxJRbcqhhk+A6bA+m3E/hR+5Wt3Zn
uZG4CscGLHDeBjn6Ej/eyY7H55csJUOII4dZcCXKO0EfSVy55oO8bdqBvOE4
Um84iQNxDz1obkglZv7CiV7vdn0UmQXuueIpiAp91kzrFYIrRZ8dRcYdpfS7
y8m8sTKqiG2dzJ6FGpJv7q+DBvSfK9y5AOb0nDJEmaW+1oUtYH0NLlOkM7Xh
pEcHWEh21RxtkDyXL9sDDmPvt0R3YxRbmO+BZbh7bFDCwzePRx+BB7SXbJDS
thNfLg+S+sHV1uifIxtDwhvwVMVhc9R16SK/6TjY/OpuQxS+rHFM6DPpV61M
GcmoTdgsz5J90L9bg39kx4T3/yTPWzpTHbe85Sos/wNu7j5lgv33tV3xX8sJ
8xuzW2KxEIMBJUZwluQ1e/ylZ2aGnQ08lTpnj+uYUjZ84gT7c22xxq7me/Z2
7ALb7/5yHPPXYKVTe8E0EflMaHzWws5mP3jYeZ0RqpT9EXFAEqwy8dAe2SRn
Fa2RJfHOe06I67nI1efHwKz93fZomOfe03MaYN7BT3qowNPx24njpN/ABGVs
3PZno5YpmPKo0B6z0Z4R5LYBC7EKu+InupIq35zAS2ePOOD0M0/sezxJPm2K
PNb66BmVE0DmyzlmitSi9jSqhJH5J7c6I6WtI69/RoNXaaNcELqYt6E+kcR/
cVuio6q6MlbpZF6OMCYs/XadG3Mu6Y8yYI4lQnD+jTNgDf59LliM+URvQCU4
hbXKAQufO7Cw5zy45+I5hPfKT+0eugh2t99vgfheVOqntIJFaSkuiMfHIubo
dXDfx9v2iGsd26WZm+T+Svyqm6PswUh5H1ixN9EBs0nFMxo8IfVMXrhhlkey
R+mGyPMLzDbHjC6L7ldHyPl394wQw5/GQrcP4K7b6a5obb7L3e3TYHPnQVtE
s5/nx8M58rzzp1Xxau/QnuhfZH/jv5zxkvVpQ/G/pH43kwNeXFSPHV+7HfbV
HHEMzaXTNOcxghU/67iiGf6Od2ps4OEOTTs01RXA/JsTbG+9zgBPGAvLXdhF
8p9R3PDYzLinzV4wxczPCI8klJzZtB/sv3nyv/eF27jv5iEwt9V/f+8PtjL9
CjoKpvEQkMADOncE9h4Di//+6Yr7J6KMh9XJfdX6prgvUjo+TQ8sw67jiHrZ
Zy/LmZD+peedUU/j+bFvVuCe97NGuEvFflOVI+nPPNcTt49wIiMPch9r2VB3
a/BT73X+YB0+Ow/UzJRWci2U5H+X1UKNNUoPPKLA7TFerrhObmVpRwLpJzPU
CNcMXhF8nAYW2n/fCVV6e5tSssGcL+ONUelagUSJIjL/8HlbXFT69spEOXhg
TssQ50kWjBecA/NWLNqirH69zZqNYP3lrboow3m94koLuHKMxg6nrd7wvdhB
9juiKIeT8sLK7HrIvKWe9ihO9GD/5nskfuM2L47u/bx8+xGZN+O1PQ63rt4X
OghmnWvVRaGLluZCb8Bhv2ltUGD6luTX78HNVcdtsC9//9X0KdLffaSHPbsS
JtAsOO+TshNyNZbf8v3H//qplsSOMz+OnV0lz09M3w7bJlzyN6Hjgn1qF1og
S263ivUbwayRH9SRaeuuxx2sYE76NAdsqDO86rUN7P7E3wDpTWSJ8PCQ85sj
jVG/yMSgNT+40izMGmsHHY4uEQaLn223wA860wRfi4P76L5aIA3adwOch8F1
8Tz/fb5rHgw3kyfnXectsWp2wp4CZXL+z6IF7h1+2T+oCdbP2GmLlHhFQrfo
g8dU3puhHrfoXYam4B5eX3us0PS0L8sanNXGYYDxT/7AJ45g+/lEGySHwnaw
eIBpdH4j1Jn4sFfHj9SrGnDAMo94fE+FkHr/NhxCbeyB2x5EgFvLYuyRlPWd
HoY40o/iVWPcepbTUz2F1CteNcISX7y2JGWCh52zbVCzxI2u3jwSdx9ag8XC
2VzpSsC8qXXWuPGmyyalKrJv7U0mSGRDRzvlPHjgZY0OatBncrxxkewjOMoe
CxXZMf69QuJmWaqodrSlVa6T9NNOb4EEBOltI3rI80k4bYdrfC3Wd94l8x99
IYH42hqbl/rJfAbG1qjyzz+Lw89JvwyP7PEuVSO60Fck3y/sMCpPr21sHQVP
SSVYI+7B3yYLH0m8odMRF+/Q/XdwhvSn366DtjtV1vnPk3yjNeaoqGHBoGmJ
9JPL7II55tVWvv4l78OIiBXKO1JcI7puB9Q7niyJtsR+1fViBCse3m6Pc/oU
f9VvBneNr3dCrKx5lVPbwFl+LkY40+yTpiAPmPLMWAkzVxxdcOEHDwT+tUHp
kxmlNcLgpfvYHm8Ue6/6QRwslDdljFJCJGd3HwbTUMTpMH13cpG9POlH/4kB
Tlj75liFMpih9YoZotMR+/JWEyzuvWKG43Jj87j1wXMmxfqI5s2gvJUp6ecL
vzCO5hP6dMaaeMhFDa96RGQNO4L1DfeYofDLj49s8wCz7n9sjX8v7f5g4kfs
vtYShSmGpOeFgCtVPhrin8l9Us8jwLy/eY+h4Cc7RjfHkfqBDNvRAodfin4K
eKy5TwUH2t46eDqT5M/W6KG5c1vfPMoj851RMcS+X90TmErI+RUPE/RVsmu/
dhW4eeyuKfaO3PQy9TyZj5JuiqZvO1L6LpJ9Naaa4F3Zw56ZrSRfs80cGdvq
mRhfJ/NdeWeEU0V6FbhukfweUXmEl44Ij/WR+y+7qqCFO03stU+I7+iYYKFc
gX9eQ+CiMTVzZGNf8vngW9LfpTgdnLN/8+CvD6TeY99D+N5yEu6eJg63MUar
91br4r+T5z+7aoIP5gfmai6B/VO2H0OujlNRm/6R/sQPq6GSA7buL9Zxw3zj
ghZ4YPW5YQkTeODSTiNE/0BT3mELuMemag+SLbwhKMgF5q0LMsb+zlJsX3nB
iuw9Rqj24IXVFkEwJbl/G3rzl/dTmBjYfruBIWbtL3iKpMDNpTnaSPUMU9da
OXDl2ZmjKNw1rvaBErFJsBFuOrSUlaVJ7t/prYAmaHwjTPVJv05n//t5e/zB
hduMxC90GGC9Egv9cRswTYLLQRzv/uRonTM47G2aCWqXUhXw9SL9eZyRwV9p
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
xx38plMI3Sf0JGt3g6/qDBOlmznPz/mArUkB3O7R0afuS52vDwtiDChydDkI
TutlRYrn4goj/cHVyjRsfdNf4VUAOFyTHfukr4/qCAYfTORAEa/kRvlDwLZz
Qii9YsbV4iS4df17oryxvsT/NFjquxDu7HmqfvcsWG+vGGaejbheEwG+8ZQN
K3G5z8xcBMdO1hHWUia71a6Af65nQz4r6O+dr8L+NJsLogjUq3vhOuSY+Pde
7EsTXt4CvwjnRRWed2jtt8EfY7hQV0CwL/0OWD2BC7Ge3/QJpYCNO8YIlVsq
pofuUfPfOUiue7iUeicdnP+FA+/Na2KrfgS+biyMIytfHJ5+Qt2/8+z4v6ao
RpUs8Ib/WFBFr/dqpxcwX58eIdQ1a/7ofC61n6JfCFZuEb6c1+DpJmGsKj10
rLUQTHPsJ220q37xYmg/7ieEfFffW0eUQH7p2yB5ySE062A5+Ik+L87YvVUk
qZK6n95cqCpQ63RVNfV+eufJnvMsXZO11H1m6iHZ435tUv4MNrvNidT+e/1q
awN1PzQFsM3rWOlzjeDf7/6NX7X/QnYz2LVVBF/6bjXw6yf4/TYh9LhP0omn
DYw6//19NTdetKoT5q99VgT1cdcpHeiGPLmSA3PKPIpO6KPus0sroaETPl4x
AA7VmiZsLVzdJoap+/WTAx/Yol+uOE7dj25mFOXFpeU4BZ7cw4ieBHXeDJ8F
N7vx4uoIci5rAWx+YZLsi4v3/knTXjZzgiDifHS4hosZ/OHf+Wvm2xiYsYE/
/WDDdu/l7/hygqXauLBf8yzjbR6w2rdWMvrvlwPv6ODqTxwocz6zfkxw2eHZ
puLoA0+kmYIo5BcG2VG/jMd9BwnwkcM/CG5dU84z0uBL/COkliV/4DM5cKfe
FGnn2Pf9hyJVL9VJ+nmXWXKqgos1C4jo4OTHphpgH5U54tmFo/z7VoB30TlR
v/mucxd0weV/eP/9PmQ99sAAfH4zHR98quVTagz+VjJFPPES+tq6EuY/yMiP
+sTn1y6ZQ/6Ujx2pf+7Ik7YAh4+kkb6XalTN14DtGplwxuqXCTvWUftxnh/3
TCZxnNgA7kkRwqpZ50Jv24HvaPLjvXsO/H1lD3beQMf/STm6NTiCv7LScdeX
lbWjTuBZZjpWviKP+F3BOfX82MeK47mOG3V+G7hx+syw7GYPsKfQGNmZ3RTr
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
UQL0Kg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=0.05\"", TraditionalForm], {10, 8.*^-6}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff from NDSOLVE\"", TraditionalForm]},
  PlotRange->{{0., 20.}, {-0.00001, 0.00001}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.569321132125867*^9, 3.5693212376460166`*^9}, {
   3.5693246455230064`*^9, 3.5693246557540207`*^9}, 3.5693253560000076`*^9, 
   3.5693254140290895`*^9, {3.5695669891930737`*^9, 3.569567019227116*^9}, 
   3.5695671009592314`*^9, {3.569757736125717*^9, 3.5697577504777374`*^9}, 
   3.5697596622396*^9, {3.569759915147956*^9, 3.5697599424409943`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "0.1", ",", "om0"}], "]"}], 
       "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", "0.1", ",", 
         "Ns"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", ".00001"}], ",", ".00001"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff from NDSOLVE\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=0.05\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "0.000008"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569321109872836*^9, 3.569321236556015*^9}, {
   3.5693246482630105`*^9, 3.569324653854018*^9}, 3.5693253162529516`*^9, {
   3.5693254097490835`*^9, 3.569325412409087*^9}, {3.569566978931059*^9, 
   3.569567018377115*^9}, {3.5695670969392257`*^9, 3.569567098209227*^9}, {
   3.569656653403169*^9, 3.569656683837212*^9}, {3.56975748204836*^9, 
   3.5697575093023977`*^9}, {3.569757666144619*^9, 3.5697576888876505`*^9}, {
   3.5697599499220047`*^9, 3.569759977977044*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Wo2PKp6YvyvwaDmZDPFk23EK6z0sCqwlcW/SxDYUMtxSaKl+nQgfuKa54hrD
tu4l6S2k8eyAG1Mvw4Oy3+xbiT4bc+LXUcyXfGjbQEZdxareLPrOqH8hctVF
Qruv29MjwDBT1LcttWTNNt8vzTswvjjxy7/vW3r28ipdtNGi0ep/n0fNMnlO
aH2znstk0OS9QUIYntdd13yRBDUu8TuRjfEfmw+dJzz/bc1wrcG49Y2LZ8mF
k4ZXze5hvOuLQglRHjz+TP09xnvO7i8iL5ULfuyaR/tdsM8mvufa1mzim8XP
u46d6WTZ0lF5vq1ooyX7T5NSd67DLOrorINhMWRvj2zolA26IqszhDyWNi94
dxzN090SStzTT5JeOtqWXLYA5u+lb29dQPe+XuYNuWadTNVt6MavFzxBtmlC
pPAVmr1nJga6BFeqJM+gM90+xoB9uJxjKNcPhiXzzKLh1zvrUx6bGaYt8V1O
h3TVqHJLRYzvYs5IBMnzFR1a5ujHbYfjoZ39waicD/rstuepYOU5zS6egIYn
AzEw82CN5OqzaJ3XIqcgaTvosjWj14rYxIJohsPR731oZ//ZcGiejUsZmkA3
7MgPB2OLy9VP2Obwfcv2i4DxG09629ajO57a0SBa6Oe3Wjl0MyhGgGCE0MoS
A7Q1+4FIqP+gspPujk5Xj4sEXXU3k/AodMbrpZEwVJES6JWPFmu4RoNQjvps
66toqbc3TwKf14tG3QfonUzWJ+BS758X+0bQa+5d9QP1HaLzEkw/GW65tv8o
vMnUEhRYi442XHCAwDmv/eyyaH0ZFWPgPpxhM6eNtlW21IDym9fDRxzQvYIN
BwCE3xY/C0VP/jitBs8iF7fdyUTPje62BK+PWz7UX0arbnR2g0GbF0tb76Hz
s/QCwKg/blvPELor6kE43DWQM37xF/2dphADcvdHTnwU+MVw/464RLioml30
bReaNzGYDkJE/c5vfbTuKq90oO+ZHWP3RH+1cjsNLLXnePhjGaZlhuechkAJ
k90bStFPQ9+kw+jZxVbbbmL+T2GJNDi8rj5ibz/acc/yFHiQ5XBefRo9brcp
HpR4VvYYcs9jPxuWRcOV+LYpmy1oiZDnYbCZxXeNhyq6TabzOOSEisDxI+gm
6dV+sGy21yEqGF05kOgNJ4/R4lMz0W+2PPaByVHp6rwadNjZ6wFgb/+27/x9
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
L6Cb3zTSSci+lRemq9Ey28tDyDJabYN2A/oX3ScWctsPtZc0o7dp9KWCBPuX
R3Nt1P05RyduXj+Y9PbQPfRqZVk60UyXmCh/iB6HxljS/6zz1++naDr3rXBw
/c9lqckAw7TnUR1p8OMIK3/Ve4y/YR/1gZiysxtZPlHP9+1cMuH/dGC75Vd0
YER3MinfOgi139F8V4v8YZdvmO7SBfQm0wvp0N4gaHmEeQXDQQtHQsF4vsml
YSk6XzQviQwpWgRwLUenvDelE7/oH5GOq9CDSw96A/O9TPqN/9BiT8VOQzrX
zkLeDVTcLykcNhg+vugmji6ekUgmtVne11u2ocsPfKITpVfcHat3oUvvl/pC
7/pLfV77GKbJFM2eBltHnfd3DmCcSKaFwNeKT18FNdF6b2zoJGwi9refHvpw
P9AJt+xmjvvG6L5D9DAoDGxfs+Ew+pFrbQZsvWG/+YQd2qqv0h2a/zLt7HVB
/xzRPU10VYsOiHmhnYUKEshA3P5DYf7onnVx8eDR88rqaTC6OujWafi1Ithd
KgJNW6HkThJM1wRFxaKrVvhlEoG8hlMvk9H6Cd+CyYW3xqe3Z+B8Jc8S//2+
F50ujsul5jO7nwKdrmmX3xajK+q54oj5Jenm3efRfy5PZJCRbz33ki+hPa8/
cIfA3Z7Ph66gS5hasoAtZNnHfU3Ufv5oB0HWrYqp9Ba077nyDLJpsQbT2F20
4MrPSaRe8yPXgR60X+f2VFBNjvov5wn2d9hCMwP6Hols+foC422nHtKIA3/L
bvVB9GPFiGwyZWmjWjBMPd+EEDmILFowmBlHT+rcyQZ9mUYfyWmq/21F4SDU
6pdm/xPNtdsjk4wbSNee+YsubNRMJU3vx3p7WXkZ9/9NsKZDnF/55BJOXtzv
tuJMMF1sz6PIi5YoL4okopnrZALXoBteS58hU5teHLokhKa/+GQJLQ0Zx4ZE
sR5rEk8upGjop/4nifHSdU+Og1U/R7XhdvQ9m/IcIuHW8SB+D1qcXyaezP2M
/NKyH/17lUIm3E0A7jkVrPcr6lkaZPz3a6u0NsYfF9yhE/uqqwed9dGqG7Mz
icx+n6MFpmjPmyQW/vRIJfdZ4XmJHPYc6LYZreJwwLiws0soyf16tlvZDc2v
IX+GuNKOjJ84hu7mkbGD3Sv+46wNQDdaC56BxaXPJEdD0L37dNXhsWy6zvpI
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
yYUfFVW06jSnUOan4scc0edVwlMpnz+xPMjXUUZWJx0s1MCO64U+ik4+AEfz
/yZK/gzle5QJPvabEV16Kc/m9hCsEi2Ie8530rE/hvPR3bkVaZmHr9dmU97/
O9OkRHblhfP/UT5ftgngXz3dv1RzwMcr+ZHl46tDP5+Bcy3GiI9OqH5NewH+
nMyFN3S/duzKozzftk7SXpprzQwvKfuf40FF7zVqSAWU/b3YJHLe6y87Xfh/
99PfK+aVQhHlPp7mx41KOs++F4Mn2jaI0ks/spLewPqJlnworCo+xbYM8tkE
VjTxrerun3LwtBMddl37nfi0krI/5zFS9Va5eBcMPuPOh5R19t2graK8/2K8
+J5zfNSranCkDhumCay6crAW5ss/JYxOJPy+xPYO8j6XYWLPC9kLFfVgnQwa
bNa09+zxRnChAhXOH4kLEmgGX16mR0J0VSfftUC/7448KErit+/pVsr7UtNK
mkWyxyQ+UP7+6Qtgd/e9hz60g3t4eHHD+biDlzoon6+3u0ka997uV+oEv7Hh
Rg+K5vd8+Qz9Zb4KIcYOmd3XuiGPNWJFwTNujtpfKPdNjRF9Z42zG+qlvM/e
VMhG8a31rT7KeuLniCVW8+ZG/ZT3b88vosQRGZOp7+CjL+eJcRFuxLQf4Hdp
NGg5M1Z/xxDYTpEFeZOw9vIw5fNNkwu19c6pPxmB9XkG8yL9FWkV5zHIyxu3
omw+N0XqCTDnBDvi1IyVffmLcp8ie0gXHbHkgSnK85bkwyMn5sRYZsAiO3jw
rlhp4bJZsE/tALEyZ4/AsXmYryiOH8nXx/DwLVCe90smdGeIxFG7CN7W8u/+
Us2xBC6Df2zyYl8xaUbxP+Czr1nR5+176FpXwfwHRZDx3hiqi+vgtAFO/OIs
aV1+A+wRyID5786udG2Cx0q3oohXUouR1OpkT+ykwVNtrnMatOCCfbTYbfLG
1AAd2eHUedyojok0nkAPOc2lf5+3crM/DRnByjX0KNVcanCCCRweMULa4u3a
n8ICJjT9IAWE3ei1ZAMfFZwn9qVXdi2wg+lf02Gr8pmOR5zg4Df/vg92S35w
5AaX2nJgsUWXlg0e8NN+TnSD+0ZDLh9YbZkOL6hW1u4TAKdMtRMP2s+8ZRQE
+yrQoGZfycoSITDrMh/Wvu5SelgE9pftL4iynlwv4haDvP4sG2aprSioEgcP
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=0.05\"", TraditionalForm], {10, 8.*^-6}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff from NDSOLVE\"", TraditionalForm]},
  PlotRange->{{0., 20.}, {-0.00001, 0.00001}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.569656662644182*^9, 3.569656684727213*^9}, {
  3.569757484418363*^9, 3.5697575097823987`*^9}, {3.569757668215622*^9, 
  3.5697576898476524`*^9}, {3.5697599581640167`*^9, 3.569759979727047*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "0.5", ",", "om0"}], "]"}], 
       "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", ".5", ",", 
         "Ns"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff from NDSOLVE\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=0.5\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "0.08"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569321109872836*^9, 3.569321236556015*^9}, {
   3.5693246482630105`*^9, 3.569324653854018*^9}, 3.5693253162529516`*^9, {
   3.5693254097490835`*^9, 3.569325412409087*^9}, {3.569566978931059*^9, 
   3.5695670630941777`*^9}, 3.5695671048002367`*^9, {3.5697577005096674`*^9, 
   3.5697577013196683`*^9}, {3.569760003881081*^9, 3.569760013532095*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
7dIS7vP8vVDyH2kwmzo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=0.5\"", TraditionalForm], {10, 0.08}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff from NDSOLVE\"", TraditionalForm]},
  PlotRange->{{0., 20.}, {-0.1, 0.1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.5695670392301445`*^9, 3.5695670638941793`*^9}, 
   3.5695671061402383`*^9, {3.5697576977096634`*^9, 3.569757701989669*^9}, {
   3.569759999310075*^9, 3.569760015162097*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "1", ",", "om0"}], "]"}], 
       "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", "1", ",", "Ns"}],
         "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "20."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff from NDSOLVE\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=1\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "1.5"}], "}"}]}], "]"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.569321109872836*^9, 3.569321236556015*^9}, {
   3.5693246482630105`*^9, 3.569324653854018*^9}, 3.5693253162529516`*^9, {
   3.5693254097490835`*^9, 3.569325412409087*^9}, {3.569566978931059*^9, 
   3.569567018377115*^9}, {3.569567083997207*^9, 3.5695671203332586`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwk13c81V0YAHBFsirhpSEJISSkEjrHyihJQhISykiy97j23jMrKyFFyErn
XqOSlUoiQnZGISEq773n/tXn+3me85znPOf8yCGzuzo3t9LQ0Ewz0dBQ/s3y
NaOXtMgAbC/veGXNLMKWD7yaV3g9IFPDAxfh7EW4+QoF8vKGw55d9nJqFxdh
Fin64Dbee7BAnZU7pGQB2p5xubN6sBj2rJDk6GK+ww8bVkkLB+tgKwo0WNWe
hq6veSR+PK2HUVa398x4TcF9iT3t88oNkC7VR8myYBKaiSjQzloSIXfEu8r8
7+PQvZS5bulTE1Sf/68/2/Yr3D4wKjR/8A20z98tPmbRA/tIL1zmpt9AA8EB
yRsJ72FJYVrz7NM2KHPzszkDqRtqOWpdn1HugN2J5i+4ZNtgCmN9ypTlW8j7
VYmoeq8GsmW2bl389B7S3FOMvslOIm7srC62l/8AR2ToBhTuNBPH/fO1F3I+
QJLldsfuF6+I1Za+2T+seyBv/QVGXsVOouFxadnvGx8h4eL6796vPUTlwkNf
75j2QhIaneYz7yWK7d0VNt/SC+0zBb/QDn0i/vv37eNc9CfYnVa+QCJ+Jua2
3XeYPdgP09CnaU6uEeJy2jOR4ah+2Fo5GXXyzQhR1bJ97P3vfmgfe7qo2fUr
cY52Va/+w2fobvtwtKt5lAjfs+x6ojAAWfmupwqYjxETcvhacx8PQIa/lT9T
/o4RZc5oyYaHDkIrnQM2sfwTxEhmi5/ey4Ow2+YHWn0yQRzq9yi1v/EFuit3
SCqemCQGuT7gMZAbgiO3igrOSU0RP6k8/3S+aAh2f5dMWy2aIoqwv4uD/w1D
gm5U7PV908Tusj9bhX4MQ3VFuwMa89NENshoskN8BI4MRp5v0vpGlBNMkg21
INtF9OFEyTeixY6DXFsyRqDVYrx8xZYZYsxy8U/PdyNQWEXiuvDlGWLtgHT3
8vavUEGFr1Dj/gzxaxOx1A58hbzbNKf3TM4QmUrOhU87f4ULLVwy6UKzROn4
jzfNHn2FIx29Q+/NZ4km7qZKg1+/QprS11fepM8SQ6/P8ujvGYVhRhPngjtm
ieWqrhtvtUahqR1t6K7fs8TPR7f0aQSPQhrPo+sOvHNE2v+iqpqfj8LWDPCo
RmmOKPaHM/7M0igkVMVVzl2fI+qP5d6pER6DCv+MZXjc54h+bWLnJK+PQZlb
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=1\"", TraditionalForm], {10, 1.5}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff from NDSOLVE\"", TraditionalForm]},
  PlotRange->{{0., 20.}, {-1, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.5695671105212445`*^9, 3.5695671211132593`*^9}, 
   3.5697600232431083`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Off", "[", 
  StyleBox[
   RowBox[{
    RowBox[{"NIntegrate", "::", "slwcon"}], ",", 
    RowBox[{"NIntegrate", "::", "ncvb"}]}], "MessageName"], 
  StyleBox["]", "MessageName"]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".05", ",", "Ns"}],
     "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".075", ",", 
     "Ns"}], "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".1", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".25", ",", "Ns"}],
     "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".3", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".4", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".5", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".75", ",", "Ns"}],
     "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", "1", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", "2", ",", "Ns"}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.5697601642633066`*^9, 3.569760207549368*^9}, 
   3.5697602478034244`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0389511260081032`", ",", "1.0389154433473957`", ",", 
   "1.038865725435036`", ",", "1.0382974927078243`", ",", 
   "1.0380210574420956`", ",", "1.0373967938137711`", ",", 
   "1.0369061206190373`", ",", "1.0384425225573743`", ",", 
   "1.0442544577099486`", ",", "1.0762243185071922`"}], "}"}]], "Output",
 CellChangeTimes->{{3.569760234772406*^9, 3.569760250334428*^9}, 
   3.5698296048448324`*^9, 3.569829658551908*^9, 3.5702695633322554`*^9, 
   3.570518268145274*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testdatH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"100", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Happrox", "[", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  FractionBox["1", 
                   RowBox[{"1", "+", "z"}]], "]"}], ",", "b", ",", "0.24"}], 
                "]"}], "/", 
               RowBox[{"Hsol", "[", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  FractionBox["1", 
                   RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", "b", ",",
                  "Ns"}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", "0", ",", "20"}], "}"}]}], "]"}], "/", "20"}], "//",
         "Abs"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"{", 
        RowBox[{
        "0.05", ",", "0.075", ",", "0.1", ",", "0.25", ",", "0.3", ",", "0.4",
          ",", "0.5", ",", "0.75", ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5697562478646216`*^9, 3.569756280719668*^9}, {
   3.5697563124247127`*^9, 3.5697564043668423`*^9}, {3.569756516143999*^9, 
   3.5697565224450083`*^9}, {3.5697566085271297`*^9, 3.569756613718137*^9}, {
   3.569757355230181*^9, 3.5697573564001827`*^9}, {3.569760069459173*^9, 
   3.569760078510186*^9}, {3.5697602146403775`*^9, 3.569760214770378*^9}, 
   3.5697602543544335`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl2", "=", 
  RowBox[{"ListLogLogPlot", "[", 
   RowBox[{"testdatH", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Black"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<b\>\"", ",", "\"\<<% error(b)>\>\""}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.15", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "15"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.15", ",", "2"}], "}"}]}], "}"}], "//", "Log"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.3", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "15"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.3", ",", "2"}], "}"}]}], "}"}], "//", "Log"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dotted", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.001", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "5"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "5"}]}]}], "}"}]}], "}"}], "//", "Log"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(f\), \(2\)]\)CDM\>\"", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.1"}], "}"}], "]"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.569756628610158*^9, 3.5697566757772245`*^9}, {
   3.5697567145122786`*^9, 3.56975671550228*^9}, {3.5697568746065044`*^9, 
   3.5697570687667775`*^9}, 3.569757151598894*^9, {3.569760270197456*^9, 
   3.569760317273522*^9}, {3.5697603536885734`*^9, 3.56976039370463*^9}, {
   3.5698296744939303`*^9, 3.56982970266997*^9}, {3.569829737466019*^9, 
   3.569829769242064*^9}, {3.569829873550211*^9, 3.569829877860217*^9}, {
   3.5705182468922443`*^9, 3.570518247152245*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[0.005], 
    LineBox[{{-2.995732273553991, -22.37429457243756}, {-2.5902671654458267`, \
-20.926208308208988`}, {-2.3025850929940455`, -19.118997325928465`}, \
{-1.3862943611198906`, -13.804030205457526`}, {-1.2039728043259361`, \
-12.80511024170413}, {-0.916290731874155, -10.722606462241574`}, \
{-0.6931471805599453, -8.939746751496264}, {-0.2876820724517809, \
-7.451155646167769}, {0., -4.380858518707001}, {
     0.6931471805599453, -0.9028673278573235}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-2.995732273553991, -22.37429457243756},
  BaseStyle->{FontSize -> 18, FontFamily -> "Times"},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  Epilog->{{
     Dashing[{Small, Small}], 
     Thickness[0.003], 
     LineBox[
      NCache[{{-1.8971199848858813`, -
         Log[1000000000000000]}, {-1.8971199848858813`, 
         Log[
         2]}}, {{-1.8971199848858813`, -34.538776394910684`}, \
{-1.8971199848858813`, 0.6931471805599453}}]]}, {
     Dashing[{Small, Small}], 
     Thickness[0.003], 
     LineBox[
      NCache[{{-1.2039728043259361`, -
         Log[1000000000000000]}, {-1.2039728043259361`, 
         Log[
         2]}}, {{-1.2039728043259361`, -34.538776394910684`}, \
{-1.2039728043259361`, 0.6931471805599453}}]]}, {
     Dashing[{0, Small}], 
     Thickness[0.003], 
     LineBox[
      NCache[{{-6.907755278982137, -Log[100000]}, {
         Log[10], -
         Log[100000]}}, {{-6.907755278982137, -11.512925464970229`}, {
       2.302585092994046, -11.512925464970229`}}]]}, 
    InsetBox[
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)CDM\"", 
      TraditionalForm], {-2.3025850929940455`, -2.3025850929940455`}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"b\"", TraditionalForm], 
    FormBox["\"<% error(b)>\"", TraditionalForm]},
  FrameTicks->{{{{-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-20.540944280152456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.890356714011308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.499490405324295`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.219188440170136`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.000499239205308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.821158310549492`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.669142103250866`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.537214560208316`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-23.025850929940457`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-20.540944280152456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.890356714011308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.499490405324295`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.219188440170136`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.000499239205308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.821158310549492`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.669142103250866`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.537214560208316`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {{{-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.00\"", 5., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.00\"", 2., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-1.203972804325936, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.30\"", 0.30000000000000004`, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.0986122886681098`, 
       FormBox[
        TagBox[
         InterpretationBox["\"3.00\"", 3., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-1.897119984885881, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.15\"", 0.15000000000000002`, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.4054651081081644, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.50\"", 1.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.3566749439387323, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.70\"", 0.7000000000000001, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.9459101490553132`, 
       FormBox[
        TagBox[
         InterpretationBox["\"7.00\"", 7., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.2072749131897207`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.040220828526554, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.9661128563728327`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.8170772772123447`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.7429693050586228`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6739764335716714`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm]}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm]}, {-1.897119984885881, 
       FormBox["\"\"", TraditionalForm]}, {0.4054651081081644, 
       FormBox["\"\"", TraditionalForm]}, {-0.3566749439387323, 
       FormBox["\"\"", TraditionalForm]}, {1.9459101490553132`, 
       FormBox["\"\"", TraditionalForm]}, {-2.2072749131897207`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.040220828526554, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.9661128563728327`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.8170772772123447`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.7429693050586228`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6739764335716714`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.09531017980432493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.1823215567939548, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.26236426446749106`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.336472236621213, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.47000362924573563`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5306282510621705, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.5877866649021191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.6418538861723948, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.791759469228055, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-2.995732273553991, 0.6931471805599453}, {-22.37429457243756, 
   0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-2.3025850929940455`, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.00\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.00\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-1.203972804325936, 
      FormBox[
       TagBox[
        InterpretationBox[
        "\"0.30\"", 0.30000000000000004`, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.0986122886681098`, 
      FormBox[
       TagBox[
        InterpretationBox["\"3.00\"", 3., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-1.897119984885881, 
      FormBox[
       TagBox[
        InterpretationBox[
        "\"0.15\"", 0.15000000000000002`, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.4054651081081644, 
      FormBox[
       TagBox[
        InterpretationBox["\"1.50\"", 1.5, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.3566749439387323, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.70\"", 0.7000000000000001, AutoDelete -> True],
         NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.9459101490553132`, 
      FormBox[
       TagBox[
        InterpretationBox["\"7.00\"", 7., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.2072749131897207`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.040220828526554, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.9661128563728327`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.8170772772123447`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.7429693050586228`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6739764335716714`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.09531017980432493, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.1823215567939548, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.26236426446749106`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.336472236621213, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.47000362924573563`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5306282510621705, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.5877866649021191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.6418538861723948, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.791759469228055, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, {{-23.025850929940457`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-20.540944280152456`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.890356714011308`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.499490405324295`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.219188440170136`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.000499239205308`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.821158310549492`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.669142103250866`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.537214560208316`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.56975662994016*^9, 3.56975663744117*^9}, {
   3.569756670216216*^9, 3.569756676417225*^9}, 3.5697567160122805`*^9, {
   3.5697569095025535`*^9, 3.569756988423664*^9}, {3.569757046342746*^9, 
   3.569757069316778*^9}, 3.569757424249278*^9, 3.569760117657241*^9, {
   3.5697602607154427`*^9, 3.56976039421463*^9}, 3.5698297037199717`*^9, {
   3.569829740067023*^9, 3.5698297697420645`*^9}, 3.5698298163201303`*^9, 
   3.5698298791612186`*^9, 3.570269565242258*^9, 3.570518270045277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<.\\\\plots\\\\accuracyH(z)_Starob.eps\>\"", ",", "pl2", ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.569756739045313*^9, 3.569756787842382*^9}, {
  3.569756860704485*^9, 3.5697568613744855`*^9}, {3.5697571557789*^9, 
  3.5697571617499084`*^9}, {3.5698297745830717`*^9, 3.5698298295721493`*^9}}],

Cell[BoxData["\<\".\\\\plots\\\\accuracyH(z)_Starob.eps\"\>"], "Output",
 CellChangeTimes->{
  3.569756790213385*^9, 3.5697570778577905`*^9, 3.569760411556655*^9, {
   3.5698297809040804`*^9, 3.569829830812151*^9}, 3.5698298829912243`*^9, 
   3.5705182716962795`*^9}]
}, Open  ]]
},
WindowSize->{1853, 1025},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.600000023841858,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 119, 2, 49, "Input"],
Cell[679, 24, 191, 4, 49, "Input"],
Cell[CellGroupData[{
Cell[895, 32, 5079, 108, 484, "Input"],
Cell[5977, 142, 2330, 31, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8344, 178, 411, 10, 82, "Input"],
Cell[8758, 190, 434, 7, 49, "Output"],
Cell[9195, 199, 374, 5, 49, "Output"]
}, Open  ]],
Cell[9584, 207, 2508, 71, 187, "Input"],
Cell[12095, 280, 1418, 29, 94, "Input"],
Cell[CellGroupData[{
Cell[13538, 313, 528, 12, 49, "Input"],
Cell[14069, 327, 31455, 775, 846, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45561, 1107, 412, 11, 49, "Input"],
Cell[45976, 1120, 1743, 50, 86, "Output"]
}, Open  ]],
Cell[47734, 1173, 1541, 47, 100, "Input"],
Cell[CellGroupData[{
Cell[49300, 1224, 357, 10, 49, "Input"],
Cell[49660, 1236, 14744, 375, 394, "Output"]
}, Open  ]],
Cell[64419, 1614, 14326, 373, 502, "Input"],
Cell[78748, 1989, 718, 20, 68, "Input"],
Cell[CellGroupData[{
Cell[79491, 2013, 255, 5, 49, "Input"],
Cell[79749, 2020, 7796, 203, 374, "Output"]
}, Open  ]],
Cell[87560, 2226, 10363, 264, 461, "Input"],
Cell[97926, 2492, 10864, 236, 797, "Input"],
Cell[108793, 2730, 478, 10, 85, "Input"],
Cell[CellGroupData[{
Cell[109296, 2744, 553, 17, 87, "Input"],
Cell[109852, 2763, 202, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110091, 2771, 783, 20, 87, "Input"],
Cell[110877, 2793, 417, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111331, 2803, 733, 20, 87, "Input"],
Cell[112067, 2825, 338, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112442, 2834, 647, 19, 87, "Input"],
Cell[113092, 2855, 257, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113386, 2863, 1596, 41, 138, "Input"],
Cell[114985, 2906, 49852, 825, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164874, 3736, 1644, 42, 138, "Input"],
Cell[166521, 3780, 50230, 831, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216788, 4616, 1509, 40, 138, "Input"],
Cell[218300, 4658, 48215, 799, 400, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266552, 5462, 1417, 38, 138, "Input"],
Cell[267972, 5502, 46992, 780, 406, "Output"]
}, Open  ]],
Cell[314979, 6285, 214, 6, 49, "Input"],
Cell[CellGroupData[{
Cell[315218, 6295, 1992, 64, 231, "Input"],
Cell[317213, 6361, 517, 10, 49, "Output"]
}, Open  ]],
Cell[317745, 6374, 1657, 42, 138, "Input"],
Cell[CellGroupData[{
Cell[319427, 6420, 3076, 77, 210, "Input"],
Cell[322506, 6499, 31090, 622, 438, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353633, 7126, 394, 6, 49, "Input"],
Cell[354030, 7134, 267, 4, 49, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
