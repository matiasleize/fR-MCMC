(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    320561,       6866]
NotebookOptionsPosition[    317736,       6772]
NotebookOutlinePosition[    318184,       6789]
CellTagsIndexPosition[    318141,       6786]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.5508164326153464`*^9, 3.55081643493635*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.569756722063289*^9, 3.5697567307943015`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Various", " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]\[Gamma]", "=", 
     RowBox[{"2.469", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], " ", 
      SuperscriptBox["h", 
       RowBox[{"-", "2"}]]}]}], ";", 
    RowBox[{"Neff", "=", "3.04"}], ";", 
    RowBox[{"h", "=", "0.704"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]r", "=", 
     RowBox[{"\[CapitalOmega]\[Gamma]", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.2271", " ", "Neff"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mpc", "=", 
     RowBox[{"3.085677", " ", "*", 
      RowBox[{"10", "^", "22"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cH0", "=", 
     RowBox[{"0.925063", " ", "*", 
      RowBox[{"10", "^", "26"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"cH0", "/", "Mpc"}], ")"}], "/", 
    SqrtBox[".13"]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Definition", " ", "of", " ", "R", " ", "in", " ", "terms", " ", "of", 
      " ", "N"}], "=", 
     RowBox[{"Log", "[", "a", "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ra", "[", "Nn_", "]"}], ":=", 
    RowBox[{"6", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{
         RowBox[{"H", "[", "Nn", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"H", "[", "Nn", "]"}], " ", 
        RowBox[{
         RowBox[{"H", "'"}], "[", "Nn", "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Definition", " ", "of", " ", "the", " ", "f", 
     RowBox[{"(", "R", ")"}], " ", "Lagrangian"}], "  ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "R_", "]"}], ":=", 
    RowBox[{
     RowBox[{"R", "-", 
      RowBox[{"2", "\[CapitalLambda]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"R", " ", "/", 
               RowBox[{"(", 
                RowBox[{"b", " ", "\[CapitalLambda]"}], ")"}]}], ")"}], "^", 
             "n"}]}], ")"}]}]}], ")"}]}]}], "/.", 
     RowBox[{"\[CapitalLambda]", "\[Rule]", 
      RowBox[{"3", 
       RowBox[{"(", 
        RowBox[{"1", "-", "om", "-", "or"}], ")"}], 
       RowBox[{"H0", "^", "2"}]}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "1"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.550815708537327*^9, 3.5508157167283382`*^9}, {
   3.5508168541309404`*^9, 3.5508168593419476`*^9}, {3.550817039102201*^9, 
   3.550817042262205*^9}, 3.550817269586526*^9, {3.550832141658906*^9, 
   3.5508321593609304`*^9}, {3.5508322175000124`*^9, 3.550832222091019*^9}, {
   3.5508329309890175`*^9, 3.5508329423910336`*^9}, {3.550833176145363*^9, 
   3.5508331787663665`*^9}, {3.550835776091137*^9, 3.550835776801138*^9}, {
   3.550836331365919*^9, 3.5508363405079317`*^9}, 3.5508363722219763`*^9, {
   3.5508386587788377`*^9, 3.5508386637068458`*^9}, {3.5508414432770643`*^9, 
   3.5508414539126825`*^9}, {3.550842386280101*^9, 3.550842411676945*^9}, {
   3.550843456041958*^9, 3.5508434574927607`*^9}, {3.5508437037029886`*^9, 
   3.5508437040461893`*^9}, {3.5508447192347603`*^9, 3.550844729343578*^9}, {
   3.550844804403708*^9, 3.550844837939166*^9}, {3.550845339309636*^9, 
   3.550845343646444*^9}, {3.5508454273561907`*^9, 3.550845436669407*^9}, {
   3.5508981530679145`*^9, 3.550898159511283*^9}, 3.550898688436536*^9, {
   3.5509001344352417`*^9, 3.550900135461301*^9}, {3.5553114898933744`*^9, 
   3.5553115265294266`*^9}, {3.5553192868693085`*^9, 
   3.5553192883903112`*^9}, {3.5553227469401875`*^9, 3.555322757452202*^9}, {
   3.555324865346173*^9, 3.555324865586173*^9}, {3.555328571285619*^9, 
   3.5553285756218667`*^9}, 3.555328806209056*^9, {3.5553297940275555`*^9, 
   3.5553297991438484`*^9}, {3.5557429208795056`*^9, 3.55574294805806*^9}, {
   3.555743899444476*^9, 3.555743909878073*^9}, 3.5557439976150913`*^9, 
   3.5558306445455456`*^9, {3.5558434286115403`*^9, 3.5558434669737344`*^9}, {
   3.5558435286392612`*^9, 3.55584358386942*^9}, 3.555843790745253*^9, 
   3.555843853694854*^9, {3.555924977356866*^9, 3.555924991173656*^9}, {
   3.555927167804152*^9, 3.555927168029165*^9}, 3.569079179276061*^9, {
   3.569086272924645*^9, 3.569086288606667*^9}, {3.569086323783717*^9, 
   3.5690863520677567`*^9}, {3.5690864859019456`*^9, 
   3.5690865147359867`*^9}, {3.569086597550103*^9, 3.5690866002211065`*^9}, {
   3.569132177099492*^9, 3.5691321802704964`*^9}, {3.5691323620517526`*^9, 
   3.569132363221754*^9}, {3.5691337264136753`*^9, 3.569133759509722*^9}, {
   3.5691422510208535`*^9, 3.5691422863759036`*^9}, {3.5693103749927015`*^9, 
   3.5693103758327026`*^9}, {3.5693106070740285`*^9, 3.569310609825032*^9}, {
   3.5702690978955994`*^9, 3.5702690983656*^9}, {3.570464320905486*^9, 
   3.570464321965488*^9}}],

Cell[BoxData["8314.749528558872`"], "Output",
 CellChangeTimes->{{3.555927170258292*^9, 3.555927181979963*^9}, 
   3.5559276187089424`*^9, 3.5559277208637853`*^9, 3.55592832535236*^9, 
   3.556097185553916*^9, 3.5665539625940304`*^9, {3.5690791762550573`*^9, 
   3.569079179676062*^9}, 3.569079519492541*^9, 3.5690804228508224`*^9, {
   3.5690862770956507`*^9, 3.569086289216668*^9}, {3.569086324803718*^9, 
   3.569086352787758*^9}, {3.56908648867295*^9, 3.5690865158459883`*^9}, 
   3.569086600521107*^9, 3.5691321817104983`*^9, 3.569132245272588*^9, 
   3.569132277247633*^9, 3.569132314123685*^9, 3.5691323663227587`*^9, 
   3.569132480011919*^9, 3.569132531510991*^9, 3.5691329005615115`*^9, {
   3.5691337389656935`*^9, 3.5691337638607283`*^9}, 3.569140540382033*^9, 
   3.5691408094148207`*^9, 3.5691415015247974`*^9, 3.5691416026519403`*^9, {
   3.569142256370861*^9, 3.5691422875959053`*^9}, 3.5691423828730392`*^9, 
   3.5691424249010987`*^9, 3.5691428591897125`*^9, 3.5691538174344378`*^9, 
   3.5691539275837374`*^9, 3.569154063030485*^9, 3.5691543839538403`*^9, 
   3.569154515282352*^9, 3.5691546883512506`*^9, 3.5691551223180723`*^9, 
   3.5693099985161715`*^9, 3.5693101561993933`*^9, {3.569310357979677*^9, 
   3.5693103791437073`*^9}, {3.5693105202729063`*^9, 3.569310546364943*^9}, {
   3.5693106126850367`*^9, 3.569310640851076*^9}, 3.569311456168225*^9, 
   3.5693124706446533`*^9, 3.5693125203527236`*^9, 3.569312562298783*^9, 
   3.569312647670903*^9, 3.5693202477806206`*^9, 3.569320751309331*^9, 
   3.5693213635641937`*^9, 3.569321794433988*^9, 3.569324293380509*^9, 
   3.5693243976456556`*^9, 3.5693252759468946`*^9, 3.5693253385269833`*^9, 
   3.5693253894950547`*^9, 3.5697558032289953`*^9, 3.5697604213486686`*^9, 
   3.5698299093752613`*^9, {3.5702690951525946`*^9, 3.570269100425603*^9}, 
   3.57046339379018*^9, {3.570464140235232*^9, 3.5704641669902697`*^9}, 
   3.5704642399423723`*^9, 3.570464273277419*^9, 3.5704643258464937`*^9, 
   3.5704659653609004`*^9, 3.570510639857336*^9, 3.570511306043275*^9, 
   3.570511566769643*^9, 3.5705180781840067`*^9, 3.570518141504096*^9, 
   3.5705188709641247`*^9, 3.5705195594670954`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Definition", " ", "of", " ", "the", " ", "ODE", " ", "in", " ", "terms", 
     " ", "of", " ", "N"}], "=", 
    RowBox[{
     RowBox[{"Log", "[", "a", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", "z"}], "]"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ODE", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"f", "'"}], "[", "R", "]"}]}], 
        RowBox[{
         RowBox[{"H", "[", "Nn", "]"}], "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"HL", "[", "Nn", "]"}], "^", "2"}], "-", 
       RowBox[{
        RowBox[{"H0", "^", "2"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "om", "-", "or"}], ")"}]}], "+", 
       RowBox[{"0", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"om", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "Nn"}], "]"}]}], "+", 
          RowBox[{"or", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "4"}], " ", "Nn"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "6"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"f", "'"}], "[", "R", "]"}], "R"}], "-", 
          RowBox[{"f", "[", "R", "]"}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "''"}], "[", "R", "]"}], 
        RowBox[{
         RowBox[{"H", "[", "Nn", "]"}], "^", "2"}], " ", 
        RowBox[{
         RowBox[{"Ra", "'"}], "[", "Nn", "]"}]}]}], "/.", 
      RowBox[{"R", "\[Rule]", 
       RowBox[{"Ra", "[", "Nn", "]"}]}]}], "//", "Simplify"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.569079184347069*^9, 3.569079203110095*^9}, 
   3.569086338235737*^9, 3.5691322406415815`*^9, 3.5691424185090895`*^9, 
   3.569310355028673*^9, 3.569310543374939*^9, {3.570464162549263*^9, 
   3.5704641892533007`*^9}, {3.570464232780362*^9, 3.570464233810364*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "[", "Nn_", "]"}], ":=", 
  SqrtBox[
   RowBox[{
    RowBox[{
     RowBox[{"HL", "[", "Nn", "]"}], "^", "2"}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"h1", "[", "Nn", "]"}], 
     RowBox[{"H0", "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"b", "^", "2"}], " ", 
     RowBox[{"h2", "[", "Nn", "]"}], 
     RowBox[{"H0", "^", "2"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.5704659725419106`*^9, 3.5704659746119137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s0", "=", 
  RowBox[{"Series", "[", 
   RowBox[{"ODE", ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.569321372275206*^9, {3.569321411273448*^9, 3.5693214177944574`*^9}, 
   3.5693243015515203`*^9, {3.569324404866666*^9, 3.5693244060376673`*^9}, 
   3.5704641997453156`*^9, 3.570464379595569*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["H0", "2"]}], " ", 
       RowBox[{"h1", "[", "Nn", "]"}]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["H0", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"HL", "[", "Nn", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["H0", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}], "2"]], 
      "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["H0", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "2"], "+", 
          RowBox[{
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"HL", "[", "Nn", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}]]}], 
     ")"}], " ", "b"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["H0", "2"]}], " ", 
       RowBox[{"h2", "[", "Nn", "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or", "-", 
          RowBox[{"4", " ", 
           RowBox[{"h1", "[", "Nn", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["h1", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"HL", "[", "Nn", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}]], 
      "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"3", " ", "om"}], "+", 
          RowBox[{"3", " ", "or"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"h1", "[", "Nn", "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["h1", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "2"]}]], 
      "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["H0", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
        RowBox[{"h1", "[", "Nn", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}], "2"]], 
      "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["H0", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["H0", "2"], " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["h1", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["h1", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SuperscriptBox[
                RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"HL", "[", "Nn", "]"}], " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}], 
            "3"]}]], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox[
                RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["H0", "2"]}], "+", 
                 RowBox[{
                  SuperscriptBox["H0", "2"], " ", "om"}], "+", 
                 RowBox[{
                  SuperscriptBox["H0", "2"], " ", "or"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["H0", "2"], " ", 
                  RowBox[{"h1", "[", "Nn", "]"}]}], "-", 
                 RowBox[{
                  SuperscriptBox["H0", "2"], " ", 
                  RowBox[{
                   SuperscriptBox["h1", "\[Prime]",
                    MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox[
                   RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"HL", "[", "Nn", "]"}], " ", 
                  RowBox[{
                   SuperscriptBox["HL", "\[Prime]",
                    MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}], 
               "4"]]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"h1", "[", "Nn", "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox[
                  RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"HL", "[", "Nn", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}], 
              "3"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"], "+", 
            RowBox[{
             RowBox[{"HL", "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox["b", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "b", "]"}], "3"],
    SeriesData[$CellContext`b, 0, {}, 1, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`b, 
   0, {(-$CellContext`H0^2) $CellContext`h1[$CellContext`Nn] - \
($CellContext`H0^4 (-1 + $CellContext`om + $CellContext`or)^2) \
($CellContext`HL[$CellContext`Nn]^(-1)/(2 $CellContext`HL[$CellContext`Nn] + 
     Derivative[
      1][$CellContext`HL][$CellContext`Nn])) + (((
        2 $CellContext`H0^4) (-1 + $CellContext`om + $CellContext`or)^2) \
$CellContext`HL[$CellContext`Nn]^2) ((-4) $CellContext`HL[$CellContext`Nn]^2 - \
(2 $CellContext`HL[$CellContext`Nn]) 
       Derivative[
        1][$CellContext`HL][$CellContext`Nn])^(-2) - ((($CellContext`H0^4 (-1 + \
$CellContext`om + $CellContext`or)^2)/$CellContext`HL[$CellContext`Nn]) (
       2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[1][$CellContext`HL][$CellContext`Nn])^(-3)) ((
       4 $CellContext`HL[$CellContext`Nn]) 
      Derivative[1][$CellContext`HL][$CellContext`Nn] + 
     Derivative[
       1][$CellContext`HL][$CellContext`Nn]^2 + \
$CellContext`HL[$CellContext`Nn] 
      Derivative[
       2][$CellContext`HL][$CellContext`Nn]), (-$CellContext`H0^2) \
$CellContext`h2[$CellContext`Nn] + ((((
         Rational[
          1, 2] $CellContext`H0^6) (-1 + $CellContext`om + \
$CellContext`or)^2)/$CellContext`HL[$CellContext`Nn]) (-1 + $CellContext`om + \
$CellContext`or - 4 $CellContext`h1[$CellContext`Nn] - Derivative[
       1][$CellContext`h1][$CellContext`Nn])) (
       2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[
        1][$CellContext`HL][$CellContext`Nn])^(-3) + ((((
         Rational[-1, 
           4] $CellContext`H0^6) (-1 + $CellContext`om + $CellContext`or)^2) \
$CellContext`HL[$CellContext`Nn]^(-2)) (-3 + 3 $CellContext`om + 
       3 $CellContext`or - 8 $CellContext`h1[$CellContext`Nn] - 2 
       Derivative[1][$CellContext`h1][$CellContext`Nn])) (
       2 $CellContext`HL[$CellContext`Nn] + 
       Derivative[1][$CellContext`HL][$CellContext`Nn])^(-2) + (((
        2 $CellContext`H0^6) (-1 + $CellContext`om + $CellContext`or)^2) \
$CellContext`h1[$CellContext`Nn]) ((-4) $CellContext`HL[$CellContext`Nn]^2 - (
        2 $CellContext`HL[$CellContext`Nn]) 
       Derivative[1][$CellContext`HL][$CellContext`Nn])^(-2) + ((
       8 $CellContext`H0^4) (-1 + $CellContext`om + $CellContext`or)^2) ((((
          Rational[
           1, 2] $CellContext`H0^2) $CellContext`HL[$CellContext`Nn]^2) ((-4) \
$CellContext`HL[$CellContext`Nn]^2 - (2 $CellContext`HL[$CellContext`Nn]) 
          Derivative[1][$CellContext`HL][$CellContext`Nn])^(-3)) (
        4 Derivative[1][$CellContext`h1][$CellContext`Nn] + 
        Derivative[
         2][$CellContext`h1][$CellContext`Nn]) + ((((-3) \
$CellContext`HL[$CellContext`Nn]^2) (-$CellContext`H0^2 + $CellContext`H0^2 \
$CellContext`om + $CellContext`H0^2 $CellContext`or - (
            4 $CellContext`H0^2) $CellContext`h1[$CellContext`Nn] - \
$CellContext`H0^2 
           Derivative[
            1][$CellContext`h1][$CellContext`Nn])) ((-4) \
$CellContext`HL[$CellContext`Nn]^2 - (2 $CellContext`HL[$CellContext`Nn]) 
           Derivative[
            1][$CellContext`HL][$CellContext`Nn])^(-4) + ($CellContext`H0^2 \
$CellContext`h1[$CellContext`Nn]) ((-4) $CellContext`HL[$CellContext`Nn]^2 - (
            2 $CellContext`HL[$CellContext`Nn]) 
           Derivative[1][$CellContext`HL][$CellContext`Nn])^(-3)) (
        Derivative[
          1][$CellContext`HL][$CellContext`Nn]^2 + \
$CellContext`HL[$CellContext`Nn] (
          4 Derivative[1][$CellContext`HL][$CellContext`Nn] + 
          Derivative[2][$CellContext`HL][$CellContext`Nn])))}, 1, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.569321408813445*^9, 3.5693214188444586`*^9}, 
   3.5693243037715235`*^9, 3.5693244093176723`*^9, 3.570269132481648*^9, 
   3.570464200565317*^9, 3.5704642495033855`*^9, {3.5704643005824575`*^9, 
   3.570464329616499*^9}, 3.57046438007557*^9, 3.570465976962917*^9, 
   3.57051887510513*^9, 3.570519564278102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesCoefficient", "[", 
      RowBox[{"s0", ",", "1"}], "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"h1", "[", "Nn", "]"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.570464213107334*^9, 3.5704642217583466`*^9}, {
   3.570464336737509*^9, 3.570464343118518*^9}, 3.5704644012085996`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"h1", "[", "Nn", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["H0", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"15", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"HL", "[", "Nn", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}], 
       ")"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.570464222098347*^9, {3.5704643376375103`*^9, 3.5704643438185186`*^9}, 
   3.570464402098601*^9, 3.5704659811929226`*^9, 3.57051888180614*^9, 
   3.5705195666881056`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h1", "[", "Nn_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["H0", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"HL", "[", "Nn", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"15", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
       ")"}]}], ")"}]}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"HL", "[", "Nn", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["HL", "\[Prime]",
          MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "3"]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5693243598606024`*^9, 3.5693243646516094`*^9}, 
   3.5704644097606115`*^9, 3.5704660033869543`*^9, 3.570518888097149*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h1", "[", "Nn", "]"}]], "Input",
 CellChangeTimes->{{3.570466200376232*^9, 3.570466202037235*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["H0", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", 
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["HL", "\[Prime]",
          MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"HL", "[", "Nn", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"15", " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
     ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"HL", "[", "Nn", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["HL", "\[Prime]",
         MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], 
     "3"]}]]}]], "Output",
 CellChangeTimes->{3.570466202477236*^9, 3.5705188943781576`*^9, 
  3.5705195688881083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", "=", 
  RowBox[{
   RowBox[{"s0", "//", "Simplify"}], "//", "Normal"}]}]], "Input",
 CellChangeTimes->{{3.5693244130576773`*^9, 3.569324461926747*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["b", "2"], " ", 
  SuperscriptBox["H0", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     RowBox[{"h2", "[", "Nn", "]"}]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["H0", "6"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"HL", "[", "Nn", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"15", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "5"]}]], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SuperscriptBox["H0", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"16", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "6"]}], "+", 
         RowBox[{"32", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
         RowBox[{"24", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], ")"}]}], 
         "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          RowBox[{"HL", "[", "Nn", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"], "-", 
            RowBox[{"3", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"9", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"30", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"7", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "7"]}], 
      ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["H0", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "6"]}], "+", 
         RowBox[{"96", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
         RowBox[{"24", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}]}], ")"}]}],
          "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          RowBox[{"HL", "[", "Nn", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
            RowBox[{"6", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"9", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"30", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"7", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "6"]}], 
      ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SuperscriptBox["H0", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "14"}], " ", 
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "6"]}], "+", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "7"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}], "+", 
         RowBox[{"48", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"9", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["H0", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
          RowBox[{"HL", "[", "Nn", "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"127", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"20", " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "370"}], " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
            RowBox[{"21", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"134", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"5", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"72", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"96", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"6", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"7", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "4", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"186", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
            RowBox[{"42", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"9", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"120", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{"10", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "4", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"212", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "-", 
            RowBox[{"36", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "5"]}], "-", 
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
            RowBox[{"21", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"19", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             SuperscriptBox["H0", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"206", " ", 
                RowBox[{
                 SuperscriptBox["HL", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
               RowBox[{"37", " ", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "3", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "4", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "8"]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.5693244144786797`*^9, 3.5693244267016973`*^9}, {
   3.5693244587067423`*^9, 3.5693244622567472`*^9}, 3.5702691494046717`*^9, 
   3.57046441565062*^9, 3.5704660076909614`*^9, 3.5705189062001743`*^9, 
   3.5705195778501215`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"s1", "\[Equal]", "0"}], ",", 
    RowBox[{"h2", "[", "Nn", "]"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.5693244639467497`*^9, 3.569324472788762*^9}, {
  3.569324508433812*^9, 3.5693245197858286`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"h2", "[", "Nn", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["H0", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"128", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "8"]}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "6"]}], "+", 
          RowBox[{"32", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"25", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"3", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{"HL", "[", "Nn", "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"139", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"22", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"9", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
             RowBox[{"89", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
             RowBox[{"12", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "749"}], " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
             RowBox[{"9", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
             RowBox[{"48", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"74", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{"3", " ", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"144", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"146", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"15", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{"6", " ", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "4", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"540", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
             RowBox[{"124", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"17", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
             "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"129", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                RowBox[{"12", " ", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "4", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
            ")"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"84", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "-", 
             RowBox[{"53", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "5"]}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"21", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"41", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{"4", " ", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              SuperscriptBox["H0", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["HL", "\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"217", " ", 
                 RowBox[{
                  SuperscriptBox["HL", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
                RowBox[{"42", " ", 
                 RowBox[{
                  SuperscriptBox["HL", 
                   TagBox[
                    RowBox[{"(", "3", ")"}],
                    Derivative],
                   MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["HL", 
                  TagBox[
                   RowBox[{"(", "4", ")"}],
                   Derivative],
                  MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "8"]}], 
       ")"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.569324473318763*^9, {3.5693245104038153`*^9, 3.569324515224822*^9}, 
   3.5693245454608645`*^9, 3.5702691894197283`*^9, 3.5704644290556393`*^9, 
   3.570466015501972*^9, 3.5705189109111805`*^9, 3.570519582801128*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h2", "[", "Nn_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["H0", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"128", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "8"]}], "-", 
        RowBox[{"32", " ", 
         SuperscriptBox["H0", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "6"]}], "+", 
        RowBox[{"32", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"25", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["H0", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
         RowBox[{"HL", "[", "Nn", "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"139", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"22", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"16", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"9", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
           RowBox[{"89", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
           RowBox[{"12", " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["HL", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "749"}], " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
           RowBox[{"9", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
           RowBox[{"48", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"74", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"3", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"144", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"146", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
           RowBox[{"18", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"15", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"6", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "4", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"540", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
           RowBox[{"124", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"17", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{"4", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"129", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{"12", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "4", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"84", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "-", 
           RowBox[{"53", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "5"]}], "-", 
           RowBox[{"3", " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
           RowBox[{"21", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"41", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"4", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["H0", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["HL", "\[Prime]",
               MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"217", " ", 
               RowBox[{
                SuperscriptBox["HL", "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
              RowBox[{"42", " ", 
               RowBox[{
                SuperscriptBox["HL", 
                 TagBox[
                  RowBox[{"(", "3", ")"}],
                  Derivative],
                 MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "4", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}], ")"}]}], "/", 
   RowBox[{"(", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["HL", "\[Prime]",
          MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "8"]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.570269242396803*^9, 3.5702692440778055`*^9}, 
   3.57046443638665*^9, 3.5704660645200415`*^9, 3.5705195936431437`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h2", "[", "Nn", "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.5704662243302665`*^9, 3.570466243463293*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["H0", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"128", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "8"]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["H0", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}], "6"]}], "+", 
       RowBox[{"32", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "7"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"25", " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["H0", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
        RowBox[{"HL", "[", "Nn", "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"139", " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{"22", " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"9", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
          RowBox[{"89", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
          RowBox[{"12", " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["HL", "\[Prime]",
           MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "749"}], " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
          RowBox[{"9", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "-", 
          RowBox[{"48", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"74", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{"3", " ", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "3", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "5"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"144", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{"146", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
          RowBox[{"18", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"15", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{"6", " ", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "3", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["HL", 
               TagBox[
                RowBox[{"(", "4", ")"}],
                Derivative],
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"540", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"]}], "+", 
          RowBox[{"124", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "4"]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "3"], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"17", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "3", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"129", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{"12", " ", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "3", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["HL", 
               TagBox[
                RowBox[{"(", "4", ")"}],
                Derivative],
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"HL", "[", "Nn", "]"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"84", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "-", 
          RowBox[{"53", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "5"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "4"], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
          RowBox[{"21", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{
            SuperscriptBox["HL", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "Nn", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"41", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{"4", " ", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "3", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["H0", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["HL", "\[Prime]",
              MultilineFunction->None], "[", "Nn", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"217", " ", 
              RowBox[{
               SuperscriptBox["HL", "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "Nn", "]"}]}], "-", 
             RowBox[{"42", " ", 
              RowBox[{
               SuperscriptBox["HL", 
                TagBox[
                 RowBox[{"(", "3", ")"}],
                 Derivative],
                MultilineFunction->None], "[", "Nn", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["HL", 
               TagBox[
                RowBox[{"(", "4", ")"}],
                Derivative],
               MultilineFunction->None], "[", "Nn", "]"}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"HL", "[", "Nn", "]"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"HL", "[", "Nn", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["HL", "\[Prime]",
          MultilineFunction->None], "[", "Nn", "]"}]}], ")"}], "8"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.5704662259602685`*^9, 3.5704662456532965`*^9}, 
   3.5705195972431483`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HL", "[", "Nn_", "]"}], ":=", 
  RowBox[{"H0", 
   SqrtBox[
    RowBox[{
     RowBox[{"om", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "Nn"}], "]"}]}], "+", 
     RowBox[{"or", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "4"}], " ", "Nn"}], "]"}]}], "+", 
     RowBox[{"(", 
      RowBox[{"1", "-", "om", "-", "or"}], ")"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.5691552750638094`*^9, 3.56915529011567*^9}, {
   3.5691554390341873`*^9, 3.56915545830329*^9}, {3.569155514621511*^9, 
   3.5691555183487244`*^9}, {3.569310021680204*^9, 3.5693100222502046`*^9}, {
   3.569310347097662*^9, 3.5693103523386693`*^9}, {3.569310554935955*^9, 
   3.5693105559869566`*^9}, {3.569312497858692*^9, 3.5693125091507077`*^9}, {
   3.569312656571916*^9, 3.569312689376962*^9}, {3.5693207907253866`*^9, 
   3.5693207913053875`*^9}, 3.569320884839519*^9, 3.569320995678675*^9, {
   3.569324284408496*^9, 3.5693242885895023`*^9}, {3.5704641442862377`*^9, 
   3.570464144746238*^9}, {3.570464448518667*^9, 3.5704644488986673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "[", "Nn", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.5702692330357895`*^9, 3.570269234745792*^9}, {
  3.570464472592701*^9, 3.5704644745827036`*^9}, {3.57046455610982*^9, 
  3.5704645615708275`*^9}, {3.570466038746005*^9, 3.5704660461770153`*^9}}],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["H0", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "Nn"}]]}], ")"}], " ", "om"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "4"}], " ", "Nn"}]]}], ")"}], " ", "or"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "Nn"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], " ", 
            SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
            SuperscriptBox["om", "2"]}], "-", 
           RowBox[{"7", " ", "om", " ", "or"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"4", " ", "Nn"}]], " ", "om", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"3", " ", "Nn"}]], " ", "or", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"7", " ", "Nn"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}]}], 
          ")"}]}], ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "om"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
        "3"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"5", " ", "Nn"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"37", " ", 
            SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
            SuperscriptBox["om", "6"]}], "+", 
           RowBox[{"40", " ", 
            SuperscriptBox["om", "5"], " ", "or"}], "-", 
           RowBox[{"4656", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"4", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "5"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
           RowBox[{"8692", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"3", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "4"], " ", "or", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
           RowBox[{"4032", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "3"], " ", 
            SuperscriptBox["or", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
           RowBox[{"7452", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"7", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "-", 
           RowBox[{"25728", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"6", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "3"], " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "-", 
           RowBox[{"17856", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"5", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "2"], " ", 
            SuperscriptBox["or", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], "+", 
           RowBox[{"25408", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"10", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "+", 
           RowBox[{"22016", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"9", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "2"], " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "-", 
           RowBox[{"9216", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"8", " ", "Nn"}]], " ", "om", " ", 
            SuperscriptBox["or", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], "-", 
           RowBox[{"22848", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"13", " ", "Nn"}]], " ", 
            SuperscriptBox["om", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], "-", 
           RowBox[{"2048", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"12", " ", "Nn"}]], " ", "om", " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], "+", 
           RowBox[{"9216", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"16", " ", "Nn"}]], " ", "om", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], "+", 
           RowBox[{"3072", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"15", " ", "Nn"}]], " ", "or", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], "+", 
           RowBox[{"1024", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"19", " ", "Nn"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "6"]}]}], 
          ")"}]}], ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"om", "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"3", " ", "Nn"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
        "8"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.5702692351757927`*^9, 3.570269246847809*^9}, 
   3.5704644695816965`*^9, {3.570464553648816*^9, 3.5704645620708284`*^9}, {
   3.5704660338849983`*^9, 3.5704660475270176`*^9}, 3.5704661519691644`*^9, 
   3.570519694981286*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Happrox", "[", 
   RowBox[{"Nn_", ",", "b_", ",", "om_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["H0", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "Nn"}]]}], ")"}], " ", "om"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "4"}], " ", "Nn"}]]}], ")"}], " ", "or"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "Nn"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], " ", 
              SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
              SuperscriptBox["om", "2"]}], "-", 
             RowBox[{"7", " ", "om", " ", "or"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "Nn"}]], " ", "om", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"3", " ", "Nn"}]], " ", "or", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"7", " ", "Nn"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}]}], 
            ")"}]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "om"}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"3", " ", "Nn"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
          "3"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"5", " ", "Nn"}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"37", " ", 
              SuperscriptBox["\[ExponentialE]", "Nn"], " ", 
              SuperscriptBox["om", "6"]}], "+", 
             RowBox[{"40", " ", 
              SuperscriptBox["om", "5"], " ", "or"}], "-", 
             RowBox[{"4656", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "5"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
             RowBox[{"8692", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"3", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "4"], " ", "or", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
             RowBox[{"4032", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "3"], " ", 
              SuperscriptBox["or", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}], "-", 
             RowBox[{"7452", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"7", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "4"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], 
             "-", 
             RowBox[{"25728", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"6", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "3"], " ", "or", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], 
             "-", 
             RowBox[{"17856", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"5", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "2"], " ", 
              SuperscriptBox["or", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "2"]}], 
             "+", 
             RowBox[{"25408", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"10", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], 
             "+", 
             RowBox[{"22016", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"9", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "2"], " ", "or", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], 
             "-", 
             RowBox[{"9216", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"8", " ", "Nn"}]], " ", "om", " ", 
              SuperscriptBox["or", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "3"]}], 
             "-", 
             RowBox[{"22848", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"13", " ", "Nn"}]], " ", 
              SuperscriptBox["om", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], 
             "-", 
             RowBox[{"2048", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"12", " ", "Nn"}]], " ", "om", " ", "or", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "4"]}], 
             "+", 
             RowBox[{"9216", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"16", " ", "Nn"}]], " ", "om", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], 
             "+", 
             RowBox[{"3072", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"15", " ", "Nn"}]], " ", "or", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "5"]}], 
             "+", 
             RowBox[{"1024", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"19", " ", "Nn"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}], "6"]}]}], 
            ")"}]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"om", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"3", " ", "Nn"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "om", "+", "or"}], ")"}]}]}], ")"}], 
          "8"]}]}], ")"}]}], ")"}]}], "/.", 
   RowBox[{"or", "\[Rule]", "\[CapitalOmega]r"}]}]}]}], "Input",
 CellChangeTimes->{{3.5693127512870493`*^9, 3.5693127788610883`*^9}, {
   3.5693210732097845`*^9, 3.569321077989791*^9}, {3.5693245959289355`*^9, 
   3.569324606730951*^9}, 3.5702692649518347`*^9, 3.5704645722318425`*^9, 
   3.570466179323203*^9, {3.5705196848702717`*^9, 3.5705197029922976`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Solve", " ", "the", " ", "ODE"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "=", "0.704"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"or0", "=", "\[CapitalOmega]r"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"om0", "=", ".24"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "H", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H0", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modfried", "[", 
     RowBox[{
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"modfried", "[", 
       RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"ODE", "/.", 
                RowBox[{"om", "\[Rule]", "om1"}]}], "/.", 
               RowBox[{"b", "\[Rule]", "b1"}]}], "/.", 
              RowBox[{"or", "\[Rule]", "or0"}]}], "//", "Evaluate"}], ")"}], 
           "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"H", "[", "Ns", "]"}], "\[Equal]", 
           SqrtBox[
            RowBox[{
             RowBox[{"om0", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "3"}], " ", "Ns"}], "]"}]}], "+", 
             RowBox[{"or0", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "4"}], " ", "Ns"}], "]"}]}], "+", "1", "-", 
             "om0", "-", "or0"}]]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"H", "'"}], "[", "Ns", "]"}], "\[Equal]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "4"}], " ", "Ns"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", "Ns"], " ", "om0"}], "+", 
                RowBox[{"4", " ", "or0"}]}], ")"}]}], 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "Ns"}]]}], ")"}], " ", "om0"}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "Ns"}]]}], ")"}], " ", 
                 "or0"}]}]]}]]}]}]}], "}"}], ",", "H", ",", 
        RowBox[{"{", 
         RowBox[{"Nn", ",", "Ns", ",", "0"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "2000000"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsol", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", "[", "Nn", "]"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hsolp", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"H", "'"}], "[", "Nn", "]"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yH", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"H", "[", "Nn", "]"}], "^", "2"}], "om0"], "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "3"}], "Nn"}], "]"}], "-", 
        RowBox[{
         FractionBox["or0", "om0"], 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "4"}], "Nn"}], "]"}]}]}], ")"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yHp", "[", 
     RowBox[{
      RowBox[{"Nn_", "?", "NumberQ"}], ",", 
      RowBox[{"om1_", "?", "NumberQ"}], ",", 
      RowBox[{"b1_", "?", "NumberQ"}], ",", 
      RowBox[{"Ns_", "?", "NumberQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "Nn"}]]}], "+", 
        FractionBox[
         RowBox[{"4", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "4"}], " ", "Nn"}]], " ", "or0"}], "om0"], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"H", "[", "Nn", "]"}], " ", 
          RowBox[{
           SuperscriptBox["H", "\[Prime]",
            MultilineFunction->None], "[", "Nn", "]"}]}], "om0"]}], ")"}], "/.", 
      RowBox[{
       RowBox[{"modfried", "[", 
        RowBox[{"om1", ",", "b1", ",", "Ns"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5508166527706566`*^9, 3.550816717300748*^9}, {
   3.5508168825959806`*^9, 3.5508168828459806`*^9}, {3.5508327403207493`*^9, 
   3.5508328414368916`*^9}, {3.5508330277331533`*^9, 3.5508330300731573`*^9}, 
   3.5508351689682813`*^9, {3.5508352026033287`*^9, 3.5508352028133287`*^9}, {
   3.5508352840554433`*^9, 3.550835287926449*^9}, {3.550835357756547*^9, 
   3.5508353638975554`*^9}, {3.5508354591496897`*^9, 3.550835536611799*^9}, {
   3.550835573777852*^9, 3.5508356079939003`*^9}, 3.5508359330643578`*^9, {
   3.5508359774414206`*^9, 3.550835989293437*^9}, {3.5508362734868374`*^9, 
   3.5508362792278457`*^9}, {3.550836376773983*^9, 3.5508363771539836`*^9}, {
   3.550836673749401*^9, 3.5508366796304097`*^9}, 3.5508419146416817`*^9, {
   3.55084251743913*^9, 3.5508425663296156`*^9}, {3.55084260458208*^9, 
   3.55084260472208*^9}, {3.550844887140851*^9, 3.5508448924136605`*^9}, {
   3.5508451407858934`*^9, 3.5508451974311914`*^9}, {3.5508452528004866`*^9, 
   3.5508452552496905`*^9}, {3.5508452904141517`*^9, 3.550845299742968*^9}, {
   3.5508986383806725`*^9, 3.550898665234208*^9}, {3.550898864152586*^9, 
   3.5508988712909946`*^9}, 3.5508990667471733`*^9, {3.5508997755617156`*^9, 
   3.55089977756383*^9}, {3.550900137513418*^9, 3.5509001377754335`*^9}, {
   3.5553186513584137`*^9, 3.5553186965844774`*^9}, {3.5553187508635535`*^9, 
   3.555318815833645*^9}, {3.5553188610707088`*^9, 3.555318863340712*^9}, 
   3.5553189348928127`*^9, {3.5553191568981256`*^9, 3.555319158979129*^9}, {
   3.555319448349537*^9, 3.5553195468346753`*^9}, {3.5553200417843738`*^9, 
   3.555320054836392*^9}, {3.555320267096692*^9, 3.5553202831097145`*^9}, {
   3.5553203222357697`*^9, 3.555320325265774*^9}, {3.5553203582308207`*^9, 
   3.555320359251822*^9}, {3.5553229734775066`*^9, 3.5553229870895257`*^9}, {
   3.5553233997871075`*^9, 3.5553234932812386`*^9}, {3.5553235782953587`*^9, 
   3.555323596788385*^9}, 3.555323629743431*^9, {3.5553241234501276`*^9, 
   3.5553241582541766`*^9}, {3.555324810237095*^9, 3.5553248356411304`*^9}, {
   3.5553249057022295`*^9, 3.5553249319272666`*^9}, {3.555325015740385*^9, 
   3.5553250340634103`*^9}, {3.555325071289463*^9, 3.555325153092578*^9}, 
   3.5553253024157887`*^9, 3.5553253597048693`*^9, 3.5553255795101786`*^9, 
   3.5553256421802673`*^9, {3.5553265284625163`*^9, 3.5553265298425183`*^9}, {
   3.5553266368896694`*^9, 3.5553266397506733`*^9}, {3.555326699669758*^9, 
   3.5553267005607586`*^9}, 3.5553267346068068`*^9, {3.5557448474236975`*^9, 
   3.5557448783644676`*^9}, {3.5557449283353257`*^9, 
   3.5557449289393597`*^9}, {3.555745095154867*^9, 3.555745133560064*^9}, 
   3.555752063199416*^9, {3.5559250576704593`*^9, 3.555925085347042*^9}, {
   3.555925137683036*^9, 3.5559251383140717`*^9}, {3.5559252686875286`*^9, 
   3.555925268791535*^9}, 3.555925924329029*^9, {3.5559261118457546`*^9, 
   3.5559261323339267`*^9}, {3.555926581280605*^9, 3.555926583216716*^9}, 
   3.555926688272724*^9, {3.5559272039492197`*^9, 3.555927204601257*^9}, {
   3.555927634436842*^9, 3.555927639233116*^9}, {3.555928529435033*^9, 
   3.555928535185362*^9}, {3.556097244520999*^9, 3.5560972843070555`*^9}, {
   3.5560974080052295`*^9, 3.5560974081452293`*^9}, 3.5560974498912888`*^9, {
   3.556097696509636*^9, 3.556097696699636*^9}, {3.5560978147468023`*^9, 
   3.5560978271078196`*^9}, {3.566553982328065*^9, 3.5665539823904653`*^9}, {
   3.569079267580186*^9, 3.569079273961195*^9}, {3.569079342963292*^9, 
   3.56907949759851*^9}, {3.5690795391255684`*^9, 3.569079548956582*^9}, {
   3.56907964650372*^9, 3.569079714025815*^9}, {3.5690797744959*^9, 
   3.569079784836915*^9}, 3.569079856030015*^9, {3.5690804312718344`*^9, 
   3.569080431471835*^9}, {3.5691321890815086`*^9, 3.56913218989251*^9}, {
   3.5691322201575527`*^9, 3.5691322306895676`*^9}, {3.569132261824611*^9, 
   3.569132288709649*^9}, {3.5691323246067*^9, 3.5691323248767004`*^9}, {
   3.569132392206795*^9, 3.569132396597801*^9}, {3.569132456097885*^9, 
   3.569132491383935*^9}, {3.5691325218089776`*^9, 3.5691325277499857`*^9}, {
   3.569133772951741*^9, 3.569133778562749*^9}, 3.5691408052038145`*^9, {
   3.569141504965802*^9, 3.569141511316811*^9}, {3.569141596920932*^9, 
   3.569141597140932*^9}, {3.569154685112066*^9, 3.5691546852960763`*^9}, {
   3.5693108878784237`*^9, 3.5693109037514467`*^9}, {3.5693110737176857`*^9, 
   3.569311075387688*^9}, {3.569320545148041*^9, 3.569320560321062*^9}, {
   3.569320596466113*^9, 3.5693206012761197`*^9}, {3.5704646151499033`*^9, 
   3.570464617319906*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ns", "=", 
   RowBox[{"Log", "[", 
    FractionBox["1", 
     RowBox[{"1", "+", "30."}]], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5693253056619368`*^9, 3.5693253297359705`*^9}, {
  3.5693253651610203`*^9, 3.569325375593035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "0.01", ",", "0.24"}], "]"}],
      "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".01", ",", 
       "Ns"}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.5693115731743894`*^9, 3.5693115995684266`*^9}, {
   3.569312960889345*^9, 3.569312966500353*^9}, {3.5693204707149343`*^9, 
   3.5693204828099527`*^9}, 3.5693210893818073`*^9, 3.5693253098219423`*^9, 
   3.5693253801240416`*^9}],

Cell[BoxData["3.190246855577783`*^-6"], "Output",
 CellChangeTimes->{{3.5693204772689447`*^9, 3.5693204986309752`*^9}, 
   3.569321110002836*^9, 3.5693246302039843`*^9, {3.569325325114964*^9, 
   3.5693253477889957`*^9}, {3.569325384064047*^9, 3.569325402948074*^9}, 
   3.5697558317640357`*^9, 3.5702692739128475`*^9, 3.5705197112533092`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "0.1", ",", "0.24"}], "]"}], 
     "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".1", ",", 
       "Ns"}], "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.5693115731743894`*^9, 3.5693115995684266`*^9}, {
   3.569312960889345*^9, 3.569312966500353*^9}, 3.5693210902718086`*^9, 
   3.5693253109829445`*^9, 3.5693253814440436`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.00038450035211301525`"}]], "Output",
 CellChangeTimes->{{3.5693115835664043`*^9, 3.5693116006594276`*^9}, 
   3.569312967240354*^9, 3.5693211148738427`*^9, 3.5693246384189963`*^9, 
   3.569325350689*^9, 3.5693254043280754`*^9, 3.5697558332740383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"Happrox", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "1", ",", "0.24"}], "]"}], 
     "/", 
     RowBox[{"Hsol", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        FractionBox["1", 
         RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", "1", ",", "Ns"}],
       "]"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.569313221881713*^9, 3.5693132245527167`*^9}, 
   3.5693210910918093`*^9, 3.569325312292946*^9, 3.5693253826640453`*^9}],

Cell[BoxData["2.1157011684018623`"], "Output",
 CellChangeTimes->{3.5693132249427176`*^9, 3.569321116413845*^9, 
  3.5693246399589987`*^9, 3.5693253525490026`*^9, 3.5693254052880774`*^9, 
  3.56975583450404*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "0.01", ",", "0.24"}], "]"}],
        "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", ".01", ",", 
         "Ns"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "30."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.00001"}], ",", "0.00001"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff.\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=0.01\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "0.000008"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569321109872836*^9, 3.569321236556015*^9}, {
   3.5693246482630105`*^9, 3.569324653854018*^9}, 3.5693253162529516`*^9, {
   3.5693254097490835`*^9, 3.569325412409087*^9}, {3.5697558413250494`*^9, 
   3.5697558850021105`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
uoE1DRKCkDtLtmN2JPi1698UFNP4OmY6l7BEw1O9AlSgwXaLr5owiUaC8xaq
XzDrcO8k3P5Hc70CDUbfetc2TngymivuHprm/PKb8ivkz7/MrUFrD04yqf63
ncinjtSrQzR6rsLZDIQnp5lS6hDnj/uq08cJS3Tq5dQhseR1ez5EuECXiq4W
qfJfiHZXh/wvh87dQ5Y9pJttlrCfb+5CBfI37XxI6QcWs6gvRSl/d7xVSQSH
8JgUoLIsxV9ZxYQprCw40xA+ncg43QC+96cnGD0dGhXiGwRLKEZLo1kbRhX3
SfBg4S53vLFN165tBSxgzh6A6QuuR1LupCQs/uqnN+Y9P1WswgJmW3hxDUs8
52zPEgQbBvl6Im0X69dTsmBqgY4EZE9dscarS5iEbv/ORiG3FundHcGL2sFF
KEvqtGBbCOF2lhrTf+/ljecVykxYz1CkWI46vZttVMoh33KpsxK93L8RnvUA
8l26ParQUpVk0dRTwhLxr30qEaVCOOadhfX4R/EddPhD70u3P7B+fDq8FAmR
qH+20u4g1g97KBUi+UOq+ym5CFMc/HguExnWp55SOQd+muweidzVXihmXQFT
ma3roJh5ZuspEzD/mIU/Log0DOP1BM9p/4rG9RxFBW4x4Eb/0CQ82PahtTUf
fD0yLAlP6xyf2F4Llr+7PQ6vfbdfVe4Btz74HYhpEqv3Zb0C0z60UUGcvCsn
phbBU16K4UisS0SBdxsV/DzNNKQjVWM/Szcm8AXLhRvI8jcOaeUnTJFN3VyM
/DO23NguCfFfQl/+vRdBuRZlLTCDiF0ZOvXq2qUL1uD/av3K0GCYw1M+P1j/
8hXFLWRzMtiIOYFwu82JnmJEOZ72haoQ4gpNRjdQcXCZ189a8BnjyHQkwde6
9WM3+K4ybxh6O/YkcWwCTIGdWLBf4PtDHfPg9qjYEMzE8/PWvU1wNU9DIq4f
2SVcQLcT4m/7U7GGH2t7Ahe4RkAwDS9xCikFiII7zUNTcPyQ7LidIpiVjzMG
83pfM9c1BK+JufrgHnaHJXkXsPjkLgtkPkDyFwkDU186EIX+80ij4s4kTDqS
uJaG8lnL0ujvQFyiJeM6Ot/bwra1jbBEfWxMIRp3eVLx7QnEp+rbipHHofei
k9MQf/d0uBjRdf3oHFqF/TIdNopQteMutTaqXcT8eIctC9AVJtY35YcIUxxY
as9Gcw8FbXJOgk9qHUpGUXayq1GSYFexM4GIi+FasJcmmMQqqY0fYfs9llZg
yoTFEGxkTcrW9AUPxS8k4D/70rik48FhAR9TcHbLrXuCBeBL52pS8VmLlgts
teDiozbJ+CnNkz6abvDKlqYo7Nw4rfV3HCwaruKJ95j+mPryBcxpU2SJ7uze
5fhyA5zZ4hWJLt1n+dW7bzfhtsdhqWjGUDCigROMS7RyUAiVLF2pCHjy19N8
dKRGJz9NgbDEHqY9BahVz5431ADivXL7byDd7aR6F2fCpEOP13PQz6pUKeNQ
MMWYURpK07k1pJwB+Z5fhKOR4JYW3Qu3waoXdzuhofKhj3ytYE1NNxdspzXt
yvwEzIF8IzDV5uoG1TRYPXwkEd8s2xn7cwXMIjOUjKXUWQ583EFNWGDwXhJ+
91ugeIwZrFwmGI39b8qc6jgBFjeI9sEHVXRa7kmAk9IFdFD9mt2lAg3wySCx
UKRRFPQ0wZIwyerKwWS0pJhqFOADLubszEDxq6Vf7OLAc9N/shHvjWYv3Ruw
PkCNLgf1yA9tvVwDbpBRy0Tmy1OJIl1goW8tyei/vNVD3OPgn0LZYShfdmcZ
/Rfw0tWfRkh88bDw1g3wH4mP3ngiS6D9G+0ewtxVO2JwztPyvZ5c4GTlm8lY
l+aY0a9z4GbqthR86HJRVaAyuPTkRCJ+HcqyscUMPD1WFoqv46wrkV5giUau
a9hwff/13XFguosOgeiIcOJ8YgE406ExEU067hKnvw+2udycjgpvh8dm9YGv
nUBZyHSG4tXht2CjG1sz0dEj/ryFy4RJkhuOKWjm2k8frh00RLye5VQEupnm
2nf7EHimsNUUWT75ynRSAKzkJuuDj+2ysa6RAVe8G4nBszIzDWevgf0KkpPx
7SCjHS0OYOZg3hRs2/xS+2IIOGu/RALmW9Uq7cgAG/K2BOP5UyOrl8rB7bGx
MrjSVkl28AE4TPtHEHK82ZOmOgYu2EqbiE5NSs2MzRImnc10TkNLzPj0tb8Q
r3GZSUf3tM6Fvtm3l7BUbXkqck2qGzXhBu+6/ycWnR44xfFRDKyzeNYbrWwv
d7FVIfu3nAW+L8H9cMEMHNK3EYY9/Qpp3bzBo0uLiVik/rDxzzjwtqrNZLy2
lHnXrxD8rOt8Em7i27+5eR8s5rs1AvtaJiiH9YOdqwRs8fnCnflU78CiP795
oD+vwr7GfQfflGSPRYa7SflU22gJj0mFp6IHZRe6FWjASXU30xGb3O+vcUxg
zas3UxHpfSPDEw5we5Z/LJokeV7YdwJsrerhhiRZhS00RMDzf6LdcVHLt7h0
SbD91ytxeMu1u3UvFMFNrxXTsOkP+9cHtcEaJiPpuCOVd5u+MdiG+mgK5hSc
5cu3BVdcuRCGw4Zuaky6gwWy+5TQjJ2ZH0cQ2EqjMxLJ7mQvNo8Gc6XfSEOl
pW/7S1MJkyjPs2UjSpm85dnrEN+760gWspy6xsxXBjbLaEtGPYEHpBxqwCfp
ogMQz+FnNndbwWku9G44qikl+Vs3uJsuMRHPaqs2nR4Be1fMZ+DLK3umPF6B
JdmSsvCd5AGqxg/gD8kMaXjXqWiBX4tgHd6lMGw7KKcj/gvMs+c/I9Rvs40U
uG0f5EuS4v59v390q50GLK7hkIliS4KebDkIrty+NxcpCNvQMRwFVxjrZCGq
TnWtYyfArLIUSahbQzzrnAiYbSLQEYW953qlKAn+VRUTgqXc9rIaKoIzBXel
YYqt68bOWuArocvZGKdMF4cYgZUkvbKxP8fgxzQb8KRUagoWq7l//JYbWNj7
gh9ek7xh3xQA1vXb6Y/qR6LuDkQSJn09ZZaKPExcl98kQ3zPPoFcJPxN78xS
LsQpJ83y0DJJ1ntLKXhDOy4DVdOeaqGvhvzOh9sikGMB0wZ3M5iqlMkO8wts
kTzXCZaS3JKM5x58CVUcAkv4Xc3BZSrPug3Gwa+YJvOw1Tu803karGDyIBNz
O5UphcyDKc7vi8IzG8mJaT/AZQtZdqgowW+0lIKO6Cf9qmkKMma1YGjaBf7q
WZuHWKuUdQbowVeSrW+g1xdEc9+wEqZwu5KYjXIes79d5AGvFf4XjXQMdrNv
OQ1uz73kghm/rpjRXwB//sSchsf835ZyXwLXzZ3OxynUvZ9F1cBh+2tuYLW8
e/yKemBaJZYsTMuf62RgAR6aoArFQy1hNU5OYIalrSQUp+i4GuwD/e3IyshE
Cq+uiqaFEm7vFLEoQFR2kn6l8ZCvImxagLp/8eLGTDC24c1EYTH0/w0Ugnft
pPdFUswb0m/KwRm7FaMwxZ1PEYv3wT3W9LkYnxvp+68dzPPnbQH272umpu8H
G9tS5ePz10pUuMfA8qpSyfjXbHyK6Fswxe8//6FGb69nCrPQ78MF8STkSWXC
ZLAMHmP8/e+9ZCnoOf2B/B2nqgrR8jHh/GDK/YQtL7uFoeoGlqlUWnAeZ2kG
dry0g7OUGWxtaZ6FT7xYsmzkBA/3m6TgecuXt/tPgmnFb/jgOz865l+Lkh2z
KwhZR1SeWpQCax9xSEXcjJmu/10B730XnoVmbpLu778KxkH66ajojO0alwn4
+G/3CGTcpXFe1A7MFkVtjlm1LgQqeIBZnxsn4Ncz3A/1g8D7Tydm4Bx32m1O
0WB0nCcD62z7JRecCq4KPhaHD6S9j069DpYQMlbGTHz3w9ZKwSvjqZGI+VFE
kEE1YZIj/0IaOnxNx/dRE8ST8uMyEevScY9jHeA7j9ZSEFvkb6e4QfD5XKZg
xMH62PbbM3I++7QL5ryfb6H9DpwYvCMJcyk5G7fMgk/JpWRg7veSemzLYAN1
9gzM47tfO/w3uZ+LZvGYd98H1blt9ISz1E6ZY/6yekUVGvAYv304OnkxSq7u
APiU2vs0JPD8muRBdrByb34WEnLgEw/kJUyi0rBIQ6e3/T37/jTEeZ3LQpBw
7pCg/AUw01ivGz4rVMBfKQfu07mRjEX7XI7RqYIvxMVlYTFjaQ6va+Ci7bqZ
WPwnPctrUzD11+I4jBI+HpC0B1PsTBDFElyNdKUe4P2k8lgk2Rq9Z3cQeDQ+
PhNJaehROUdBf1xf3LKRzBz/1mfJ4D619hQkF7zx91wu5E/f0PFE8kzDa/kl
YH0XqVCscLfw+9YqcOCDinSsJOe2YN1AnsfSlRys/Ebm8+N2cOedh+lYxZ1x
RqgfXHJ2LgSr7p59m/kU/GjA3gepFzVN/HkN9b8LsqYhzXOxYyYfwSbfP+Ug
7WH9J92L5HlanslCOlYn+/nWYX3DgZJopLux2Zm0hYHw7EalLdZPH3mwuhvM
Remfgg34i5t1GcALVvtysWGH+/0HrGDVL6PZ2FhXrpqTB3xSiykBm347UB4t
CE4q97iKzKM+31wQA6cZ3k9GlkdaCjRkCJMuZablIuv6uNzGK+DIXydyke0V
wwyWq+C+RvckZDdzKjnEGNazrbbLYnu//+I+2YAf8xYmY0e6pxFKbuDpdeo8
7Hy7JPieP3jlQ28udpXw9GeMAH/KaEjC7i8uefklghuz5VWRp+NB18ksqNd9
Lz0FeW//Yi9bBB46T3Ud+eS1Wt0ph3yVfuY85Hs6wXTvfbCX9kYi8u83MnDH
4LLNaHMcaCKoM9EDzr5/JA2T1rZooBHwW6+M6zgkcexK8Uuwnix7Lg7jLpWn
mgHrrijE4og2L2mHr+CiKCUPFKl5GY3+AP/39WAGYq4bYt7yHyOcZ/nddVS1
X/On4G7widjL/96n28RTEwZwc3i6J3o+alidfARMw6cQj22FZuIeHgefu1yW
i/8m29h8Ow3ulunOwUnfFmTZEVhXsTQKc6q5c6jJg6kXH5JQY/X6BkmdMKmn
dzELKdEGvarWhzhjVXUemnTa1jhpCbaojkpGbk+i02hdwFHCohaY8tReFwk/
MGeNYzrOSUi74hwO7vvyKQ+fXDjIW5AInptiTcePrtygHM4GT+6lNsPalZzv
N4uhfl56XDKao77z4FQV2GSGIw8F2p/KM2qE/LETdzPRvsE678RHYMe9r3xR
CZ+Y1oNBMFVXZSwWjX0guPgcfE17MQcPzsnQHJkCy5lZ/HvfCv1zyl/AYTzK
YXjltkpP4Co4i94kHEXufFZctQk+3lqejZhtdElvdx4g+mEuCcxBVb3v9Gno
CVMMiHdHISkei3OIFSzvGxGMn0fOMTjygHnnaLKx7Sen5etCYCmtvzn4r9zq
0GNxcJXwwxicVOpb/lcOLFCpTEKclBRRJ9TA3RHrWajRItzcQA/qt6ALuUip
a5dkvAW53mBDDJrkTGJpcwKf5G0mYbcwhl/zPmC+j2zZmHIm5/nhMPCiRn8O
zpFmq1VKAJsfUYjGJ4tvJvpngY8lvglGj7bw2VcUQT2jMv5spG1aLf+6Avyg
RDsHfX54hou6AfIzrewjkT97y3/iD8H8XTRhmDZY4q3dAPiJWHI2Lpnsas59
Blb74ZKNRSUUMwfegWlVM0Lx4I1ht9+fwbGvyyKR8aaWKt8K1Auq4M1BK4av
+PU2IH7gxsdMFImNd8ZSMRG2b+nwQcysHz8004FPCoYk4KoAu0dzh8EzlQs5
WOrNUj7zMXBQ8t80/Fzc009BEDzpHaGHbfN+X/U9D75V352C/v4mCd+RBYus
7MxFSXqU+16qgN935SQjzpbYrzt1wTy88Xa4kXlf/zlzcHT2xQys5JtRauMI
7ksXzMGTE4dCs73Br7/IRWO3c4VGfSHg6uEtoUihgGZFMY4wyU+4NQtx7PCP
GkqHeHkgXTZad/h8WO0G+MXuxjA0PKZ972kZ+bxVHOG47HynrHYN2M58TzYO
KhJ8Od4Czmo8moW1d95w1OsCzyskBuOTztRb3w6B/1MejkTbX/hkGo+DG8pF
s/99//3E934K+mnImM1AdSWa7RZfIN7/290Xxe5+pDm7Al77dScWm7qe+my7
AdbxL87GYhN5AV93HIT51num430Su+ic94GtKfY649lSr9Jl5oPw8y24Nwk9
2PNBzIMT4q8cQ3JQhrv6k58nwEUnDNKQ46sHZr4i4IIEBkUkK3Vi7Y8EWPHd
mVR8+HZOXJACOPrc4xy8speKfYsm+Aj9jmQ84OlxP8wA/LrFzxEVvZm+vMMK
TNEilYF8ZFTfRjtDP5dt9+Ug1fI2V2pfiF8+ciQa8dDx7UgMBWvrPgnGm95Z
ufviwRyXc7Lw83fbBdIywJ8l4jJxlZxbJ2MBmKdrmzcOr5zUyb4NNp4/H4/0
6ZW/HqoFa/HHJqPTfi3B+a3gZYPBJLRrmoeRvZt8Xh5pVzQtn3Gn+AnYNrU0
HDfd3XqRewL8pDk9BScxujwtmwa/zS2KwdYBb6345sHVx7dqooszin8qV8nr
pR7FI0bFpiSBTbCn1dtk9PUeN1ctFTNhBlNHEupkSms6Qwdm4/jkj/OC/lNu
PATeXhGajN0+Ok6LcYHfVuQlYIUrrz3bToIng7WNMUfd5d0SouAHmiHRaJ25
4cYjScIkmiSnFDQczCksqwjxHA9SOLo1m9zbown+Y8/phgNVNvUVDMGkhoUk
rF1v/23QCnzld3USPsHyMlzFBRz2scUZbwu7xDzqC86coYpEr+fqqjTDoN4f
kZ8pqFaNQ/pFPMQ/5qZEoZjGxBfXMsGNlKEO2OTIX7vXBWDzd2+SsGiELYXR
HfDRaulkTPv1RdpULZj6ppYr/qQhe9y8DczEvCMS4eaato/d4Pn0lhSUwc6m
bjMMpmHiiEQOUfEfv0yAx6VHXbDM4i9fx/fkeqzrSdhHPo334Tx4OVA7CVcV
nni5/wc5v8vOBr//1R1tuQkekZqOQkyaxueaqA4RPu6tl4KuVK7P7qYDpzz8
GYpCKFOzDA+BRUv9vXGDEb/8PU6wf6t7Mp5v7Pq59SS4hGsqHrPTGd3SFgEX
ZKbLYG27Ne3bEmCGXwxxKLYzmfLPZbBOqXUyamfhq1fWAA/OX/VHq56dFoX6
4Ok2l2DMO2zAsGJB7qcqPBkbHv/ZKecEph7fGoVTQ5Lcs73BMgs0Nqj31XHO
+WDwJSueRPRHuOMpigU3nGBMQIIJ+qHJaeBt5j/NkOWnVaGZ6+T6tVRROFci
cfrsLbDPm3tJeDibJyW6GpynqhOEt39/KPm6iTyP01sDkZiS3reTHYRJ3IHL
Scjp5kpB8CDEj1F+ikIlG/GqY8/I8zCvNsMTV49RHHsHrpeNSMA099rv+syC
c1zCE7D0Ll2jwW9gWqNRM+xt9p3myG+w1/P8KFTZGoddth0m6lE/yk1C0wzc
jp17DsPPF6OEHzrg9IDlwAHwr2nLYKzUq/PYhg1c9KM8CQezL/u3Hge7V2eH
4XrfWP69p8GiD4Ld0JennK9NxME6SXaJiO0Ejq2TBf98nBiNtCKunt+hAm7v
0VPHMe+W5q7pkNezbInDD0RjcipMwNzs9+PwSvJRhU1bMIVWrRE+/qV1Xc0d
fA+ZRCFDGe3bJQHgqlvBCSj1+qLOzwiwBNMxV9T7I4pKIQnsGhIYhv+qcDTm
ZYOz6sUTsdDtFqvFInDdhXBfbLVF64BUBdjmZTkJ5ektdKfdJ/dbspGARuoi
PT9hMI/yNAlR0rBzi/WCC+iQDz5v1fwsboTc/4PTCdi5XSP83Uswf9aLUHzz
4FdhoRlyvb2azuila8RM2FdwwHbhOLR38Ejaix9gZ2WdCCTD1STNS8FCeNI8
WA/7BKp/998J3tX9LApXvfhS9IQOzFqyIwq/FwhX5zgMphi+QIuZYli3eHCB
VzQfRSKl9w33ek6CN9ZjolCwuJoJsyhYYteZS0jeMH9ZRArM9kE8CtOQvoRq
KYETGJfC8bNCUQY3bbD52TfmKK8jvDTJGHzzD4pBZh9GRapswd2nekiIdwdb
34A72P3NCy/8jcdB93MgOC85OwY3KjR/oYwGz8aaueMg+x0BnKngi4x/g5Fc
giaN1HXwud9pUWhPdeENo1tg5yMyGmhsZEEg4B5YprcuAud+P/8opwUc2Pgr
DJsyRGs0doHHmNOt0HGR5zPPnoCLXnDFoCWdo57fJ8DWvaGBqMHXece+GTC9
SYA/Dsxryzq5APatnIvBsngXr9IaeO3VDztMPXm1xWYLK+HClCfh6Ol/N5Ui
qcGeyxeiUM7R5TcljGBVlhBdbCx70ekRG1j0vlQsPmYVRzHJC64/8DcYL0RN
JP8VBrtuPxWA6u5wHz10EXyZ6UAC8ht0qxO9DGY75OiEpBbaZbU1wNMUS1F4
Jy3NCzcDsGGPSCweFtSzTrYCW1fRmaFMjbL1KhdwUgRnEjL0WI0Z9ANrOzCE
Iq5MqcNz4eT1P/RC//1+TqzckQTezlmWhGtfvkZcOWCd2Jum2PfP8WGpEvCH
XIsEJMnqZWJcBT41GB6DqCQ6lwMawfy+P7zwkMm+sNxH4Aw7i2ScHmrI0DQI
Lvjl4431b5aXPn8OZhpnikEcPWsiK5Pg5oTv8ejzrGzfvi/gqAQWK1y9K1X3
1Co4OeVhEvbin/yitAmO0zQnYaR8IsB25xE47223CLTd2Zcmaj+4l1E4EQ0m
99y4yQJur81Uwqm19IIdx8CirUaJWPeZyaNJQbCM+ulQzP6zSmPjPPjaUaoQ
NMv0Z+aQHNjnQ1ksuit22fOcKrj1ia0Z8tTP2HFVF3z2iF4UFg98n+VuDlZq
agrFWwsEeFMcwbsCzb1R/8OAlrve4D0f/sSgpPf9So9DwBSS4Sbo6namt3Nx
4DKdvkjMeszCiSoT7Hn3bAj+IF9DwV0I/sXo4oMqbDeTpcvB1wcjwpBbnNJR
k/vkefTIayKxquy6wAfgtcXHIVjmxdDfhV5wQZW/H1am2HbJaJQ8rwvtLkjn
+LmkJ6/A65eaQ5GZuuPExQ/gsMw5U+ToV8xRvQCuCZIgYe+ScTu2NTB1h3AQ
fvgxQreXgo2wvg+rJZLzYw8ibQePGR8ORQN7W4tFd4ELmt3tkWqJdu8SDXg4
7Y8ffi76bb5sP3ih+iAJ6z2O3WfCBNYRPXMVTZpwnz3IApa+/iEYWf5o1x1h
BxubU7qiLzF6QdHc4OrrMt7Y+ciPYkk+sHeYaDBerU3qXT8FppAXvoh85fm+
3hMGl6odDUEUb7r22Z4Db/Mq9EDhLsZnORCYzWPSE++i/K37Ugqs6X0mBCfl
pAelXCLvJ2G02cZwSqBEQQl8rsciBOV09PduUQPb5oR5oSM6Fl+btcB1Lx09
ccn85j43XXCr3GII5g3OOctnRN7P/txxfJfhjN57M/CH7KUQJHznSVCuNfm8
JoteqBnZlmg4gNcOvffCF59u69vtSj5Pi3Io7rS68bXDk9y/1S0hdPnPOTp/
P3CG4GwoGkoaOytMAkcFCXkiTS4nvfkwMO1tez880bSTVBJNnp8hbyg2VC4p
0U8ATzLGX0Uz06iPPhU82MwSjmy8Jr4OZpL7Ge1wQQu73enC88DCBl4k7FZA
I3KhEHynjzkErwnf1lu9Sd7/Eb8dCuyTJlXeAX8SoIlAWw3flljcBc849Jih
qGXvPpY6cL1Vcyimidy/8KyRvP5ZfyBOPVRFl9AGdudd90JM1fIico/AD22b
wtF1mfd6G91gkvwpccwxEUCqHwB7CoVE4DIHppuOw+T70DjggU9sqe3jfgY+
P6cbjGoyriy8nQD7yD8KQaJ8s3SZb8n5umrOuO1BiIjKe/BLpByBpTRZ9HfM
kud5d14d98w2kB7Mk+9f5HUYUgpQv+n1DSxe0O6FRvd97Tv1g5y/Tz0QXy2N
XPj0C0yzYhiCX4tx7C/YBI/PfbVHpk9aRXS2sRMeRVzh6JPZVX3aneCk1SlZ
ZL/2jdS7B+xbZBGGxVwsGT/SgSlM7jlhqrmX5VuZwC+7X4Si56YqkuwsYNtu
YW9081XHc8QB1n4mE4LdNUXt9Y+Brd9TBWGpxxX/+fKDBebsghCtHHtmpiD4
6kXLEPQWp/PfPwvOK2/1wRUiux6Nngc/8hEPw77VgVeXJMCmlPpuSP749/k9
cuB1f+1wxFhkFcKnCG6XtLPFM8yvD1xWBZsrTobjmlTVSkstsHHLMwNEou6S
CtMFG6o8DUcq4efGC43AJE8BWcy6UenwwBxsf84/HM97cmx9YwOW6BP69+fV
YkbWL0cwVfJ/4SjKevdJJnfyerPzGkh7KqjjjA9YjM8/DHPqruhoBIKHi231
8fKo9YJzKJjr3L+/j9oV34QmRIHZ+P79fk/oVDtYEU+e74WIUKx/obuqLwWc
1f7NHPPWi8l8yiTfJ11aKFo/eXdi23Vwdccda9R766gTRxGY6d3tUJzBlrVN
4hb5Plws7LB5NnWOQQVY5PpIKBKiCz7ldw88O37YAVHErnZm1YNX0hnD8NBW
W936FnBBy6IDzvN/u/i0HWzFIBWG7FbVw791kdcL5TsiMcce5r0D4KUHKmGY
6tP5av5hsPz3z3b4uVG1rMIzsMnePWGoZJzzldVLsH65jDVyVct2Dn9Hnlfm
WCiW6N9DWTxDPj9ruhmmkQ7Jbf8MTt9MDUVvWn4IvF0A0+6W00cVwnbdv7+D
/b2sQrFv5Tu9g+tg1WRrVSzPrfnt7AbYWWIqFDHe6I3Q3MoB9ztszIdmDlw4
7EoFNsQXwnBN0r17iXvAk6e05BFpJ/elSjpwaoxNGFIJyXndfwBcMG5miFl/
07jOHgaHfecJw/NuoTsoOcACd5ANap7/mXf0GLiiLjgURVnYC0nyg/0v7nLF
2m8newwFwc68BiGY86qWgf9Z8DBnthdaftK3nH0efOXYDAm1y6OoBgmwzvLu
AJzwsIblmSxYfHthANYXO1a7rABuYT0djHhrc+VpVcHz+494o3U+2rcntMD5
vimh+Md15uDTuuTzpHq74pW9XJznjMDnmTnC0bfgUz3IHHzY6YcNWvh+zlbG
BizMpRmBv1jI7FFwBBsPheni2RfK1Spu4Pr+kgj04fI1DS1vMKkmUQBPt5j9
0A0A01hshON3JxyzjUPI8zBrMkGvb3iLW0aS++MoDkMT+0Lf2cWR69/yd8bP
Q+NDXJLJ93OrOgQ/Xc3k8soAj13U80bDVkW9/rlg+h3OJPR4osIupIA8n+W3
QbhfsYEm6ib5fp4p++Ketof34u+A96wLhqLOU4OaqXfBjFtqXdDDwuc/s+rA
ZehGOMb7p3Lym8BJh+b1cUv4lwslGGz+81MEavy5Onm7A1yt0q6O79tQhN3t
BSt0lkXgmle7jt1/DP43FRd09wpDf/Mo2H7u33krHhxxaH8Bnv3RHYBvC/LS
dr8Gs06uknBpsXDtwBS4ttgzDBUzXNQe+Qi+Q9nliQoiL68//wKmu+gdha+v
a+S9XiL3L3TcGOfYGV6cXgWHHxCLQZlvrKc//SK/v1dKpjhNxS386yZYf2lP
NE5+GMDzfdtRwq8rf/qghNNRA2s7wa18XmEo9maK4wYNWLm0PxRHHbi+bxs9
uEI3xQ+HR9+q23kQnKT31xOF/L53dS8r+CP7sDcKcmj9RX8UnKfJ7Ib933Vf
Z+YBO7/vcMY+aiMSbCfArtxnfJBnx6v3XELggsxH15DbmY8RfCLgkkUJf+x8
a+m4oDi40SheEzke/D14VhIcMRDti+xitzuLy5HrfUh3xtZ/9+6XUgT3TuS4
YUsn5vpLquAZOXUfZDbFee2KFngb51YTZKxx6o+6LvjwiGsANug6d0PHCGz8
xk0d6YrISBmag7ecb/dDV28rfzCzIcdfRrhgzUPXomwcwZPZi25YLd6Mz8kN
rN15yQ8pbzoMuXuDlyJOXkOKLt4uvgFgeVwTiOXfh9CTQsAktM8UyWrFN4RH
gp87lfgiqZ5M3dg48rxlX3jii+eK/iYlg2kX9ByxeHlFQUYG+OXd00HoFVv5
Ddlc8jyNpeWQb8bt/JUb4JhyERJmoi67XlwCFkh6o4cagkvz1G+D6TfiA5H2
z5Lc/6rI85tUdMYr9sU51TXgsj80vjh1ujDbqAG8LB3kjYR0CrJoWsnvSbvL
BY08zs9sawcrTX4KwM7S1zPsu8jnT+kwwHubctMP9YPDkp8EoaqTOWn9Q2AJ
f9Mr+EpJVqrPU3AddVIAnj+YmcIzTj5PbI09iklMT37xGuypO+eFjm9PS4qY
Ir/fqVFP3OubknjmI3ittMsBWy4lJczMga1TKf3RdsvE+NRF8n1NWCujklfx
cVIr5PusmPPH0mpxsd/WwFnfRw3RdHdMTMFfcMq3EW8ULB4drbKFk/w+3rhg
tprIqA1KspmoXPCDYxGRlbvB/GV0PsjweliEPi1YgrZRF/2hCw3fzQBu537o
h3OjgsOaD4Jnl0q1kdhGUKgNK3hpwMobjbsFhjAdBTuf8HDGXp/9g3uOgf/s
4nLGjEZ+JE9+8DYvMy90f8wniEsQPD7xQR1pKngHjp0Bi9JOeuPvDzwDQsXA
tJNSBijljIe/0EVy/6RQdyRY7uY3JU3ul47BBQ+zufomyYOrZ+sssWOGs8/F
K2Bq+WOeaA+1k/eCGphC+gA9rgh28LquTTZbkAdW+GnnqaQHnqzrtkKf7W09
fhuBrW0/OqKoaWv3O+bk83Gku+NjOlZu12zI/QUyqOHuxxauVI7gZgZ6L2Qh
be7S4Eqe154VY7ytydTZ0gu8IjrmiotPmjgx+IN19/91RVIlRo6dJHBvpagR
mjxo6OAWDk7j++mJgxL17TliwEzJmZqIdbue3UgCuIZC3R21+l6zJaWCK8wv
uWC9pas2p7LI5zl/zhz/stC2fpsHnpkL8ELZrzSt4gvJ5/lWrYpF1TQsxUvB
wpd3euAX3WoWX+6AC35LuyBPcVXznLvkeN8lC8RQo2x2uQ5c5sHpjeuOXTFd
awQnjTeoIfXriia32sj9mt/0QN/oFIy1H4GjQnVd8bg9x7BtD3l+tmY6uL37
18WgQfAcKd0blbE9vZs6AuaReO6Ck3zLj5Q9J98/jY8B9h4LTWx9BeY988Mb
GZ/U3xyeJL8fHuSC5aOEnT58IO9/mssIC0xTv1ufA+edO+eDmMQ/KNMsgeXP
n3PBFBltmGMVzFb31RjPLqafFPkFrpcW8kVPLjvmK26Cx44wueL6Yjka421c
8P5GLIxw/l/WQPed4DmeSF8UcfXn1ygacJ1NtRt2vPfE4Pp+MCm8/CrW3l32
+B4TeMN83gchC9KFbhYwp8W/98j9QKfyJQd4cusuJbznoCDL4jFynDHaB624
7ozfegI8HNTuhV8PTv05IASm6HM/gDu5m+35RcAlKn7eqIKU8lpCHOy/gHxx
2ktbJS1J8nrWIyrIX1i61UYO3Omq44nMEw7xByqCWztq/bHi7PfcFFXwinSe
KRKSGtx9Swv8a7HSFTHnlfi16ILNn5gG4i0//L88MSLnX/73fX1ORUtvxpzc
P/W4LRq9fWJgzQbsTnsmEDdvpTy/xwl89riCByoyeHuH3R1cIO2iiaIb6pnP
+oDlR+t9sfO+xBiFQPDodzVfpGNn9cswlHyeo1pqWKLroq1bFFj8d5kH5jnC
9DIyHsy6LBaIaH2WLuelgHudLOzx2mhvU3UmeX5UcnZ4kr/weFcemLbifSDq
jfDJnigEK6EkL1w9qbZzoRTMpm0mhbPEeH22VIB1RP71Q0rb8pnxHnl/uw8B
2GrhpQ5fPbj97mdzpCxf23uxBZyf5OOCzhbFimq2g8u2HiZh1j9mZdZd4EDi
/19RaoszBfSDRQfy1dHCXfqo5Cdgb0lff/x859efN8fAjHpKQQibdVk1T4Cd
uUcscGnb9RdDb8nz/jbkghMOeF56/x7c6PqNhDxdlBt+zpLvX/amDzYc4D5G
vUDuV437NJbl2sxg+w4uVYryQ/xBLyjPrIEfHTMPxvQTdz0v/yW/F48GF/RH
KOqjwRZuqKfSZYVm4oy1XXeAcdwkCTvO8XMIUIOZNr8GoJ+X1r9+pQUX0Oac
Q6SbXU3lDOBZrr0kvGtrSrgNM7gk7wMJpRkbqh07ApboddbALJiX5cNRsDjV
B39ceujnbBEPmKurOAQJ+HTUGZ8Arz09bYObnyeSWIXAfwoFvbC0sL7S67Pg
0XrrUDSYzMOUcx7cq9LpjrUXV95flQCTWM454Umlh3cZZMGtVVWhyPZOvN/T
y+B2KqcAvLJD91KyMniplOkaDrDg3q+iAQ44PBiCKDuW31LrkM/TURmCk9ge
3OnXB8vb7ddGzIGxnlEmYH3npaB/n/9XpeQsyS6YCMcnz3HSbLMDhzS4uKGG
jKWJh07gsPhqDySx0nozyB181jEpAverRbtc8CHXoxsLQpp3tS78DgBTGGRp
ojfUHDubQsBRVYHe2NJ2YcwzErywUeKNlnqaC4TjwMbBhTrYlyvSfjkJzN/k
5oy3hmqIVqeDX35U8kVxk0e2OeaAG+nU/33+o/knfDfI9yteqY0LchtzPxeT
47cK/30/Wg+zulUGpq3q98I12mqnLSrJ9ysQrYvE61g2OWrA3itPHFD3vrn+
yXqw/7MyH6zqVJ+R3wLOeq3ril4Ohpjqt4MF2F1kkRmvyknmLrAOs4Qnno88
9OtFH5hysenf9/sPn7rSh8j3SyFniSmk65I1npLrKwVb4JgCksG+cfBbkSpv
RL+hdPzJazDV4r/f19f1Dq7GTZHr9Q0pI+6mD+0KH8H0XB5OqJqxJo7qC/k9
1Ud4YzH3QJ3uRXCC2SkX1DGiwBm2Qn4/FRxnkdKpA0uS6+Sfnycabvh53PuW
zb9gU4Omf593c3cj27Ycg/f1+48d/nzJX8NvB9l99DrY9ab8kXPU4JwkG0/0
ZwvDlx+0YM7lSm8cYTxVX8cAnpQ/ZYn24soQV2Zw1AMFM5R1yFdZ4Ai41e+H
F+bwkWNeOAo2fvDCC1U8p/tYzgOu/k/VFJ8VfnfP5gS48c0xC9yeXB5wTIhc
fzbTC11e9Lr84Sy4fbXaEx8WZI2gEgeHafLZogXXzkd8kuS4dgkHelhnu6ks
B6Z9p2CH037QirsqgiOaJz2QpWiDd7oqOK7/qSc+52twv1ELrMu/5IyoW7cu
v9Il9xf6+ip++/f2yU0jMNub47q4+qKqHYcFeT9+ERcUGvzjlqwt2HxwpyfW
7sibsXYi92el6o54tkuzx7mDRbPHbfAvuc8Gd33I/Y7vlEKPoxJzRgPBBars
Jqig/8yL1VBwhVqgM3alfr3/YDR5f8kfbkhGOURVPIHcj22TCz6QxBNvlAp2
Dm+wRHMjQ30hWeT9d527iFv3e1CWXgfPevEZ4wStQ9J9ReDOHZeckUnmw6D5
W+T839HuWHjCqnVvJbg+edANUR6iWReqAVO0qNrjcf26M9oN5H6f0mii8nxd
V59WMNPbGi0UOElxN+8hOT5u44BVOW59edANltGockcc5ld43g+ANRU3PfDq
ze/mlCNg3xlLV9T7Kbvw+HNwma6PBc45LvFW6RW5/rwnF7K3+8jsPAmuK1M2
Qxcr466mfgAfTqJ3xXSLQmn1c2Bvy0+eaEZgYnhiESzux++F612D9vxdIb/f
d1OuKLqOS4HtF5jH/N/nnf6PgQjpTbBEzNbj6KSoa4flNh7C9lyiZojCl4ki
ZidYR9LQFT9tweKVNGAxqm9eqPSvuc/wfnBjpakP9r64u/47E5gnxM8TKQbf
W2ZkBdNqJjlh1o6rp8SOgnuj066hpW0bdgY84PEDuqqoQ66kjHQCTCFuYo8z
ohQ+FAuBudOjPZB1/xJ7jwhYNSrWB5+nzjScEwcX9Zj6IhrlC7l7pMjrNT94
4snE9y8ELoF9KZWcUe1INL2mErmfhDBDHLFfQM1LjZz/LV8M62g9j8/RBsu7
7bBAvJn+/W165Py2NRf8d5xjx5QxOOTMlCcaZu6T3mYJLull9sFF+k6kY3Zg
bcdeN+Sez9Cm4Ew+3/dtdvjSZMu6gwf5/G72JmjejMqtLohc/8A3WbyQL9P2
IAws0G1ighYnSDsGosmW0rXFS/Rtas8TwAXoihNaVlnPnUoFZw3sdMbfY858
nM8i7y9yzx6tdLkIrF0Hr9kvWOAfFFW+W4vJ+8la6qKf5+c6acrI9akjTuM1
T+69zJVg0mizAv51z/QaVw15HlFfDdHv+fxigQYw23+1VvjPsVdfz7eS6/F/
tkcbpgdELz0Ety9rOeHN6xoh6t3k9V15johiInHQYIDcv8NrW7yFfpDRZhis
lBFrjrapUJm4PyPHo39dxdtjZMqDXoIltgsJIMou0mrMO3L9UXVVREXRdjFj
hlxP5ZYJ3nV+PbrwM1gmWssG7fY8M1axQH4v7647Yup7LqyN38nvVe6mM6KZ
r7TuWAN7R1Y5Y9pjczVDf8n7yZ1yQvtMuf9ObDkOPz8Mr2wx3XXTSx92gOUb
Is0R/Xh+8hI12HmeSgcz7H/16vc+sPHfelHEqHyAe8cBcFLawUuIKVrDme4w
uPpxsz4+2JnYzMIO5lTcZ4mYNwe2HecGU9zTtceHxahUhPnAUkMVzojFQyb7
ogA4yuSsK2atJr1XOANWutnsiti+tJ7QFgPTpp1xxezc614mF8GmXi3OiMPk
zCN7GfAa15g95sxzofa+DKbn67BE3C8qtUOVyeuXegzxMbq5ggQN8vm23b2C
eK5wf8nWAZNCt9Mi3ijTMzcNyOdl7VbB/B35QdWmYLZrRgboxMbLvhYrcNaM
lvm/72MH6Hvsyectf26NBNw1DEddyPt3L9hhobuJZW88wfx7Xjqi03MDy7N+
4LLOKWcszEV1YYUEtvzA9u/vAWOZyM1wsP/HF85YJJc0siuWfD9ZR52R6PPW
Q4xJ4GEqBUcstm/dgj0dTJ2Sbo/OK52p5s8BCyyq22LxSJdfIjfAsx6eVgg9
qpSRLiG7EJnji38/JyjfBptvJBsjCVHuiWtV5P39XutgKTfToxa1ZKsJqSLp
qnwH50awRJ+VJJb5/LLBr408v52c7EiO88CWyEfk+273OoE+m14qO99Dnmd/
nDaOK/RSXhogzyem3AwJTN5aKRkm389/lTb4Ket4zrVnYGvKCw7I04BKkuYl
ePzyVwfMnCf66dFbsOqVo/ao7aV1vNd7sLftNytsfDD7NP8sWHhLmSnaqtM3
MTlPfp91X3RwacZ6UPo38vttOnAJXX52nFvhB7l/wWxONL9fd3DjF7lfR3ZV
nKge41q7CeY5vE0fCSU3M1lv44X3IHbVFD9/MocP7wR3fhi0QD40hyxG9oDb
O6hs8OErirsj6MD/s1zecTm+XxwvpDIqtCTtpdLe4/S0e9p7b+1C0VSSSpIk
hEQpq4mERHWVkGRFIQkhSagQQvLzu873z/frrM8Z9/3cT9Ujlyho35l6Tk8A
7ecyo8ia7lqPiRWUhX/wRcB8zsE/x8UoC/LWh5Bqy0UnPKUpOw4M+IFtjoH1
YnmsH3nInuydW3ogUR3znVE2Bk2TuwYKOpRVzu5wJf0Zf16/NKCcOxMYAGlt
q3cUGVNmYXcJIaKzfspMC8onNrNHQIdBwaM/1pQzln+PImGpJLXBAe2RDTHA
eWVcPNwV89morSV10yJdK7woc1hvjgEHbYd1PX6U68cvRJEvCVt4twVT5n37
PhwOXDh7RTcc+7uqEEJ0v74MHI9G/WFdATCoysN+PBb5JbsHyYhlnPZIoMyQ
SLKFzk/lP9vTUZ9WnQqJVHxwNCEL+414yYRF0awW8rkYX8DrRs5Wq358kY/9
5l58Z+g8GrR33x6sv3K5O3yT2atjdQD9lzPtSXFox4uZErT3SnqBwYkv2eeO
Ui4UdHUmL19LKISdwH00/bSATHGXB0LVqI+nVI3IBGYl3T+N+kSXS5NbZedX
ZjfgPGK2mELM8zfXdC5R7vG+4ki4hXmjPjVTTg4x9YAGbzOeY+2o59J6P+J2
KL7R/Qblj3Z/g2D6yQnfhd1Y7y5rCDnM/2hO+z3KisXhoQBubNXxvXhvNdvD
yOt9mg6r+nF/vc7hsO1h6Lfng5QDcxkRRG7JgcN7X2H97bci4I5Dp7HlCGW5
Pd8jyPqC7+9+j6G9/W0ELL0rU1A/gftOXBZJZidUTnZPUU7jkQ+HsaX6LcM/
MX+JQyh5rGneOztLOVY7IBg6PB3GBOcpULsolx85k+rFqs5JuT/5gwuUlK0R
tOOiXF6qYkY2DidZbBWkzOMUaQmB7Jl+h1dSzvD9dx+28vnxFyUo5+5sCgQd
uwM778ui/y3lUCIVW37svSLlnkSWCODZV3N5rhr6a3lHkpmLF3pWalMelZwb
CaP95J22AWXGlGw46fvdNetkTHmewM410C7SyxdjQXmIp9mX1Bk/V8yxoRwh
5+8ExSHvTMsdUd9YnybZtv2z9xU35FWnDciGmt9xfd5Yv+SWC/jfZdsxHkB5
kt8jgFhPcpdzhKJdRzMEtJYJXZKIolz1WCScSGhJ3TNYT1lQRjUCuLyU3rrH
U66f0Agnv1J1ZmJTKCfr84XASJnJsp3p2M/Wr37k4VVb+ZNZlNutkh2BDLsb
t+VSZpFgW0Bq2IM8n+5CvaaT9uSgfPT6r3ux35Rr/pBtl5CzuBjndfR0KImN
3VIqW0p5ZqojEnz37bhgfAzzX+SOJlaN+277VFLui9KNBI2npa8T6nBeZ/79
/ojNVP7cfQ77fyfhBYtEG3hqGjFe+7I2mTZukb3ejPXdou3IcEgnvGinbKDE
HwQ923vcpm9gvMKjCNJSMxCz9DblQVPrtVB9dzhLsQf7165bSw5MjpdYPKJs
Zno4EjKX/TwXOEBZbtWmILJOa+6tTS9xHt96rcDba/FQ0TBlsd/yTLBIE/hx
5j3eq8pYEFE7Ks51axzzvVKLBpEOBek3XylPt0yvJwveahr8mabcsvTBOvjO
znARmMX9rX8RTl7LW0epzlWk/ixGnnDPznWrDQfljPv+ytAc618cuphyYc8d
P1K1L+LslqWUOUqdIqCocUPnIQHKTa8XriUZT9OenxdGfl4XAzEzOVN3xTH+
wIYw4im6Z+GoDGW5nbWuYGZyWGKOIuV2g0YjUAk9qSusSjlZ9FIgEc4966il
Rdn3Bk8k1Jw5fe2nHubv/ff9qPOoVqvVCPMpCkZD5+/q6gwzyv1zQ6KIq0SV
sBmTsuLvReHw2urUbnZ7ylWimsEkdv2JObedKdeb7fCE2f3HEgo8KDO+XLMj
+S3lo06+lIdWvNQEoTdlPnxByNZ5hlDFWXqvP5RyuR2nC9FSOWx8JIpyT3CK
L1x3P3QhYD3Ot3FbEHHefFBWMh7nq8e7BoaO7y8ZSaasEvUymKzr3re4ZjPl
j0kqQfB7ck/G2kzKsTOdviRXoPCrynas9+iPC/BDQdjUTtQjuNKEnAjJf3qp
EPN/MZcmajvzbFP34/xfSNpB+7ncNihBfc+CvYh9f47anKNYf3QiEAZns0/e
OI7znMxaQ6KkswR3VOH8frGGwLTN1p22pzH+llkwydmwZZa7AfOf9/QD3kOb
43obkd9+cCLH2lKHDzRTZlnBKgMqIyke3u3YD2eeNZBFyd0rb1CeLFTwJbbq
iYavbuF9uamsgQGv+PoT9yhbncwOJREZGyQjevFe1laHwPdTsQcU+il73mkO
JNl313FODFLODXjgCkunYtIaXuE+w79qkHKh6ImEEdTD3G5BlIwjg3U/4L2d
kPKClvDwRzMTaA84GkisC0Kt2qdQ39DWIOi/sKY56yfOa/cafxL2LEjJchb1
nHvhAlOsgRUL5q6mDCf0SaacP+89dsoZ+gf1CY+D7/Y9iyg7Tgw4Q1mC9y/X
JWjfbupFFI94rhXkpyznk+QPlzvch54JUS70mvQhFu9dXY6KYv7cMhfo43bp
DJZC/pllQIK1nHRlVmE+pTYNMunrUPd+NeXy7XOdID3LTvS0GuX6yWVeZFGN
zd5Ybcq5Pct8oKSHyaZhgP6/N3sSuR+WyT8YqHfFB1toXGnx4Yo5ZRZDaX5i
Zmbmn25Necj1khV5GGXywNiBMo90iQcE7mGYsblSju1U9yPjl+BSlyflyaYH
PpD2wkA+349y4OBhF7KATb/UIRjrezzTgWIFXZ5l4ZTF+jJMwM3mbiGJRv0/
tdzI0uigJVGxyFJafnAv79sevgTUsykxgOys2bH0agrlCL8UH7DqXrkvJh31
RZ1yIvPGzi0TzMJ+jh1WhKucFkXXtqPe98WWkL5qgHd9PuWewUueRJ+5br/Q
HsrJKQqBMB0xh79zP2WOA+mB5ELugQNxJah/VNob4qrkBVYexfyr/zKJUhc5
2HUc+WLIajL2zlkwvgr7l552gUr2d8Wip3GfheKBJEQ2dfntc5RnhK2CQdyS
uySxEfuVjAsgL8KOC0k0U+7/2eIEJTnah++2Yf6wqWXgcer2ipTr6J+z3JXw
dgYckbqF8/cV+vf79farcM9dysUC19eQXWy5pakPsd+A5UFgLS0sIvsE5/lQ
3oWwm9eXPXyG+WtAmFwPMRNNH6LcVPnUHbZm9x9d9Rb7v/EtmMCJGLFH7ylb
8a4Ihd/XWCoyxinrfP8SSJreFIkrfsV5zzy1g/i5q449+YHxF7NMQFWyVSJr
Bu9v1x1/Mm7idFyJVYnet2BQKNQEv5UcYKPcrmQaQsIzU05sW0BZ7lyzN0gd
Wyytyk2Z5ctLDfLqasXJwWWUC51uOpKyV5oyuYKUfXt5g8CHtfuU+krKVbZv
1hBBcX/Zl+KUm9jyA+AR40tlngxlRsAZC7I3MEdOSwH1LNlrR+wzhKpfKVNW
lI8KhoXlZ1bt0kD/7TlhpKvNpEZHl3LLya4gyH75WH7YkLKYsKgVMf4bVbvb
BPXWqjiQWZG/CvqWlM2OZwVDM+yrG7GhPHqELYwk+8uu3utIedHFikDQSG8+
behGOXDyEIN8LnVQeu+F+vq/u5IzrW/OFPlTFlz+PASinicpM9ZQ5ilODiOy
fxbWfwhHf7GrPjAsXK5yMAZZ03glVBhonDOJQ//+J77E37dLdTyBMu+c5lAQ
SvNtOLSJ8pDPj2Dy5PCkmvkW9J9SsoOi5uzzk1morz3QARyfCWocycV+BbPX
kMW/6y5Y7qJ8fTY4DLqFjDW/7sH9lmb7kR6RszLzDmJ+oX/zfiyxUpDvCM67
giMMBmV2cspUUHbUvetLXsn//KV1CvPPybEjI0rhHy1rKRetTQiFj2qPnnvW
U44te+BNvmiZ3o+8SLl8+LMDmdY7177pCuWIGw4hMAuiDTvbKPc4ebmTeaa7
jh+5jv622v/eX5a/i07fQv2X1EOA2yYyh9xDPV6JzoTX4UnS/V7U4yrvSYRc
zCOH+jE/7/UQEPM47/35OfabOGVNZHzEbee8wfwW3P5EMWC34bJRyp53qteA
2po/SlKf8L6uTqoRnfBoMc0vlJM/lQYSw+inSyx+oN7PagFgst5yrscM7tOK
SxOsNl6cCmdVpvr45gQR+yTJkeT5lLv88zzANXXPkx0LKaswjRzAe8vfrhIe
ykODMsEkMGvtlVo+yvVnhqwhbPuz2hYhyjp+XD4QvZNZeleUstjXf98/sbsv
FbyQosxyKYqPJO6TzphYRbmnXSwY0g7ui2NRpsyIVvEmmYdZ1yzRQLtMkBPJ
PbreVUKX8sxxlhAoOP7cXB0ol48etiRFlTbaZqaUY/OtAsmh2styblaUOQT6
gqDsrKxQmB3lDGE/Bpw4v39hkjNlwRGDUFJzae6f7R6Uq75buEF9c9x4sS/l
aSlxX2hse/myOgjz93UGk5Zrdg+uhGG+nYeUSMfN5o7b0ZR5XNvWwM3bqy4M
xqL/i3RXcuf+wZOfEtBud92bPOxlOzi7iXLdRPe/74snG3O5M3C+55s14MWz
Vyli21C/XmAwGX7pEK2ah/VsWe1h7E2rr8lu3M9Jd2+YfKdg71KE9VxM/Mi3
D4eMQg5RbrfdYUZ+TbCrJpRhvZ8CgcAylSCRcxztp+R1yfzpN8sOVuF+bhV5
k0UzTmxVpyk3xWQ6w1KW9u9NDbifggInEJynNHrr0n/3s8SHiHAceTrQgvkc
DqsTyUULbn+4SrlwTMMf5HiSW2Y6Mb4sxIQo8Y6cXnwH6y185E00BF2PijzA
+P1FbqAn3FGo/JiyVZasM7yWlHrxfgD7VZcLJDsUchROvMR83JnWoKI+muw/
jPcYY+kK/XrWnYLvKXs+Oh1IMkzqlvV+Qj2V2RYgZ80VtOsL3uufQx7Q4xR7
xvIH9rP8ZyBJ8nr4m3UG93H1sSHsVimR8mdR+T/n9iT5wBoNG5vmOZQ5xmID
ibbOTJwgG+WMb2UrYaHB6eIEdspWs0/84IWRf9tDTsr1PL7epMGUe0R5Efpf
qdUlOZbti3ZxUa566BMA3jZx6mM8lBky21yJkoOEt+Uy9I+ysyNzXHozTvBR
9uR5GAiP3bMrWQXRP26fNan21rznL0S5UOCAB0nzH5lqFqacXbItEByDD65Y
Lor5jqmtIlJhViaJ4pQDC8v9yXTkz4heScpNncFecGdtzW4VGcqOL6LNoTzO
p3GXHOXyD02BJD5h0fMxecoqCeM2YJnSOtdqNdqfhXuA0OZ18ieVUc/J5AAy
niHqNEeNMsuJ859bO7J7kgI0KA89swyEA7lby1q0cF7h2zxIVL7ajeW6yIXi
TgQK33xI1EfeJxsMS4uKlvYZYv+3PAzI24PmuqoMyjynXwWQpsPfAwpMKAsO
//tezD9amfPBjHLPCm0mBB73PG1lifoHX64hGpWcfSeZlGOtXG2Ao/bKrzm2
WG/XgD8MnokWD7T/b77dAaS+Qdiq1RHrj4abk6zGu+uEXCh3SbKuAfcr6fuT
3HDemcJWRJ4ot/R5oL8aWyCZvTr0WtWb8mSpXQA8vLGHc7cv6nn/3RZO3TJR
+eiP8/z1eg3ZdPerOzMI5+VdC2D/4MTmU2so8z6oCQTxR24n5oZh/6OanmSq
f/7twAj0bzRzI12Dlz63RuF+68oC4MhQhOCKtWjfNlcDYoeXGyWvx/q8vwOI
2Wh36KM43P+4nAUIfkzNV4unXNxt6wUfJxTP705EfccdPEjb1+dPPyZjvnuS
9mTvjwIW61TsL2FJAIT9NpKt3IzzqObgBb2/k3bzMrAeTAUQrrnH4oMyMT5f
1wrm/2xz+ZyN9+If6A+z48/Vtm5H9jz33vD78O8lS/Ioi70o9iMTA8s/l+ej
niWhFmS0R7tHZTfuf+rf+3Ko0+1s+x6cv+p1N+hv2VjgWIT3373BmfQ07Fk7
dADzWQb7ka6qs7axh5B/yulAe9ldBZYjlPtngvyhqejDgsIyvIdGfmM4l8c5
JlqB9a0rPUlNhuyts8exv581zuRYonmV0Smc50CWA5TErNl+vwqf57AjnrA3
eGtYQC32JzezlOR5HjWfOI332mThQTLtW6W21GN+8QYrssns2Vzu8+i/nd8W
Nur9fF12EecXo+wGMSoCHUpNOO/uDWIkREazglzBfGU+HsRX2CXDvhX7+/jK
grgujQt40Yb6mlc5gS3HbljXgfpcCtzBbLZu5ex1rLfZU4EYTHXP7LqJ/qmL
vIjm2Oizld1Y76qjFVEamt98+g7ldgNJZ5B5LFVieB/nwbPCE0TumKTcfYD+
rzjkCH9HoKdfH+Yv7vYmXE3p2p8eIz8etSPzzxzh3/yUcsQGbyeYPX7l26JB
tJ+N84Efh/r7jrzAfGJXBGFy9/fziq+wvxJ5HzK6jXdfyxvc92SwGxlKVdtg
O4L6My2toD/O0WlwFPMLKgVAT/g6lZgPeL8n8yygyy+fe+YT6l+0xIO0u9SM
75zE94Mrnx+5zOy6u+Ir6skwYYEGo5G62m/ov0XZF2o05+XrTyMPV7nBMQWJ
6Nu/UN8ZdRNSIs6w9vmD91myyJ/sFfBf9eEv3pdRmCPJW5zGkTpHlT5/6aud
IHNuybsFbJSb5vz7vUn9eamzhJ2yo0CwKcRPPDopv4By/SYlNxLz9mv2lUWU
Wdav9iMhz5aEWHNTbm9rUCe+D5RNB5ZQFiShXuB6004iihf5i4kv2LZGs/7i
x3jZ6MVgdn7H0I7lmD/pgxcxrK5sWy6M7OrsQbSO3iirFqHMcF6vCEr732zW
Facs5yvpCzI7Wf1uSVKePtzz7x62ihp4yaC/ib8KObORQ+K5HNYbKPAnEPaZ
PUiBck+Vhzu55znwaXg1+r9JsQQ/m2u9ESqU83sCA+GjYd3lj2oY/3qFE6Sp
7D8aq0l5cq64C1kkmb5tShvrh64NIkf4wqOT9Shn2N+3IIocjk4zBjjf0jB3
aP6lo51hhJx/NwCsP4mvnGeC9YNbAAZeLpiba4b5q9d7kaiHX0cXWlLmWasf
SH5dH7y3m4l6mvo1SN6lGxeW2VIOzHzgBctrzpQctMd553sHQNWRgxkrnNCu
Pq0BOrszwo66IHN5eZOurZG2ku6UOa7pBBLPeGe1Sk/UkzlHh4yG6Qsq+GC9
cBsfSPKSmj3jR1nqs2EQzLddPKwWiPNUbTOGA/D9VmMwxr8840lkVF+e1Qul
nKvfE0QaJbv2k3CsP8xrTSz4z6WaRFG2+uvuDo84SoI6YzD/t+vBEPI709J6
Pea7f90Zpj5Fr74Xh/cmvN2eZA+5LnOOp5w8ZB1EeHsNfz5KxPyGAR7kxA2Z
l14pqH++qAGoN3HfeJ6K8Ze7fKGjZromKB3z16d5g3Ppq8K3Gbg/7VlheL27
OzEyC5+H40c9yIbM876ftmH+G4f8yJyEIyZxuZTLLbbZkD3h2+S+5eH+9nZZ
gZj3Oq6UXdi/dJs31Nt6TM3sxnmVNbgBw4gxkLEX9QVue9vao7qqfd5+rPfD
1p0ESi09lXuQcqwZ+JIJ/t87F5VgfYmzTJLOORxXeISyWHe+NXDN3PHgPUq5
q6fHD8rGLxoWV1Cu2l7mCUqvyiSFT2B/uTNyQHq3c5afQr06oc7ErjN2QrIa
9THP+ZDBJq9HlbWUVe56upCYWpNmhTOoV6FHEmZKFSrO1uO9XbXxgPxC3u3q
5/H5vKnrB8JZf2IuXcT9zFVyhNqEEWf9JoznfAdEL+K+TtsV1OO824d0ezeJ
mLbifpb1+hJvu4p5N9vQ/8U4k4wZ5Y1Zd+C+pkQZsEltY8+961h/bKcHcEr7
NjrfxHr1R70garmRde0tzDcjLwfdiyVezL2D8/XzcSMKc9g2+N7DfALzXEj+
93dsF3tQT0KLFnwc6z60uBf3d33CE+xenl4d9gjvNbXaEc70Fl4lT3D/x15Z
Eq6ujW4CA8h6Wr5kXYv7+/WDqD83zprcr9fd3PUC56v50A5UTgovEX9FuXCh
sA8UHvp7IuUN5aHefDOY3PVa5+FbzPdJ25k4Zd64Iz+K78eAYh/SkFgVmDWG
+X9dA7I0eufUs494D2P//g9tCFiXqzGBvOmSL/S6OAnv+oz5nQc0QcNKo/7t
V9zvBlF3UmQgYAbfcT4nrnmTbyq/nhyYxvxiDHXiLv08euIXvi+yl7pD4/L2
v5Z/8PfktoIPCHAd31f+F/N/LtKC5Dk5sj9Z1eh9NQ26kf7vEc1O8yi3px3x
JbofbBxq5lNmSRs2ICUvld7M4aSce1zHFX71LknyWUi5KZzFF3y6phZcWEy5
8OYmM2hpeVK2iIfyULaXPRE+d0UtdCllxuRHL5J2srSzlZdyhkC6LXl+KMOb
X4ByOetuc4CCNePrllPuSuz3hrJMi8ybKyiLMSJdYDZxFb+YCOpTuqRJAqIX
1SSLYb54A2/SHjBh+EAC++Gs8SRirg8frJJGu/plMZJhdTE0UxbrRTa4wyuD
4p8DqyjHFjn7golq6i51RdR7OtMSjkn7i+crIeeFM8lcIeOLwyron8b0JiFc
UkxDdZznvifO5Poc9uf7NbFe2qwgSP94HzuujfEe5S6Q8+HOPEs9nGdfjgeM
vDxbfNQA/TfLmIJl317FaUBu+2NJqroS2h2Nke/3ehKOVk/XalOc7/UvziTy
nP4oqwXOw8+bn3SfFEnztqKcXFvlCPIlrDznrXGergIekFcwfHyhHWXHXUeZ
8CHzpnaIA8anMDSIbVLN7RYnyiqmvs6kLnpXAJ8rzv81jxtZFBj7da07zveY
nwlZ6+qyvdMT5/H5mzHcs9JaIeqD/gpr3UDJcPnZJD/KcuJjznBeMvL3nEDs
J4TYgM6Cy5YFwZR5bj5jQOskR9HyUNTjNk8UTJ54Dp0IR87rUiU3W6sUVaJw
fzvMzIjtienk5hhk62Y78iDP6obFeso9m1Y4E/e44iUP41Df2AUX8sxj1M8v
Hvdxda0LCQSdmtFEyoEcik7krVTu940pqH9nnjWJWthv8jcV5313I4NMfJbd
nZeO+u1WSJD4/qRnfFtxHq8qleEXuSlbkYX2gKumsOWkQLxiDj4fqyrsYF5+
ePulXLSX/nCGvA2XFpnuRLvqZzfg9mL3urcL91N7ygOKjDxOehVS1nnz0wOW
y1R+Ht6L9Trq3KFs0Q/D2P3Y7+YVriD51SLv90HMp/PTEaqeHnicU4L9WRYx
YXX7iMTSUuyfsc0QGk5prS89ivMlD38aau/KaZY7hlxQrkZaNj5mv3AC5zvU
ZEyMvWVcjSpR/+F9TNLJSCzvrkZ/Pk9HYiPb+dGtDutHb3chPYv5dV+dwX50
wJ24TYVuizmHej8s9SQDAxcf/DiP96b93pMEXGUTyWpEPmrtSYYr3aK4LiMX
MjxJZMHJxkPNuM9TTR5kPP7bHGmC9zPt4E42+pg71Lej/c5bVzJtvP+w/jV8
PnPlXMhmubfvOm/gPj2uOpI53Joazl3YH6PJhmz/lp3xvBt5600Lsmiw707E
Xew3JVKP7OmQWj51H/uVDtIk/NXxoVse4jz3lKuQI7uvn1vwCP0bvooR8UTe
2f1P0J/l1+XWU74h1uIDyDmfVoKi6YUDdYPob3JbFs6tmvdG+yXaf/OpgRaP
q/K1V7g/4Ufa0Pz9eKr9MNY7u8IQGM+/3nw6gv1UfWGAdc2+wMkPyD5a5nC/
8E1d6jj6j0tYgWuS+s/5n3H+p/Ws4alflvner1jPSZAJ/ma9e1Z+x3pcpZbw
Rl7yRdU0zjOjxQIilmyU1/iN+00psoBPPzoS2/5gvYwZc9jwYuk1axZ1+vxc
YDeHrk7f1po5lCeXgiuInD11aQEb5UCvGi+IPzh5LoqdcpeCpA90b9Gr6+ak
PJoq4gViEdmn5BchB5x3gUTHe+V5XJSHrp2zgjs6gofHeChndIorg4R48H7r
ZZTbl82okmTOut01fOj/iodJ7n3+tmOBIPrXsTsTqQGj7CghtHt9dyObOnak
dwuj3u8snqSnpjdZXhT7sd3qQWT2rdyYJ065fvlOV5KWGr52TBLrfU22Jw/W
nAu3lqHM0PRlEBnb30E1cpRZuNS5SJqGue8CBWQ9XV14KLzbPWo15dhQJ2uQ
Y3vq2K1MWfA2lwukf5KwkVej7NixzQP6HsWY52lQ7tmo7g3ypNFoTAvtIpNe
kHGKRc9aF+O57D3hcYG1Ro0+2vW13UAxqUhpAeD8971zhMyAF3JRDMqFvjX/
/i9bykl2m6C+2JuGoKSyYaW8Oc4rR3YlZAu2CORZIqd6KRGV9w6LrG2x3zRJ
G5Lz4ND8GnvMXynoTAYvv2FZ4ITzC/rlRtSOrf4d6UK5XOq5B8nNS/p2yw05
JsWNvNhwdWKVJ3KvnhvR8Fk4tsMb+y2ocSV5pm7D731x/kedXMiQwtEXzACs
b3vbiWjxvu+vDsJ6vTP2JH9GrZczBPdDWpjk9XDa3cgw3LdOuinRudt581YE
2sM36pKCizwdq6Kxf+0WGTJc6t2yYy2yEicnFK4br2duwP7iP+vDiLtObXU8
ZZ6jl83AwCjzJGcSsnCfFeyVvXM0MgX1rv9gC6Pc/CW3UilX9Z1wBJgOKFqV
jv6hJ52haKi6YEcG5Qjt9a4w1vU1930mZav4in//T84ZZjG3UfbcMuAOBw5t
31y9HeeTuNwTPm59kMSZh/vUE/YCk6gVGyLzsX7KVy8odg6NuVWA9z045g3j
emfDVu1B+zMBHzCT/Bm4Yx/e42cfbyhZaOrzfj/W787ygomv+W7MYpzH73JP
GOyvcC8toZy85ZUHdLc2enw+gvNNUPKAS8due5ofpdwk+9ENTmwf8jpUgfu5
+t0F9sZ88/50HOv/LXaCLU4LfI1PoX725XbgvULD/30Nzmf9v/ebFQszwPA0
zp/Jpgmab/0C95xFPfoHREGie0PQ23PIPe8/tfKc3R6sewHvdXq+LPmz78ia
XY3Ix6w1yVjyuZBXTZjve60x6ffrDNVsRv2PNczIDZNnYTta0b94kyVpkJ0M
f96G+k/vtybli9giVTvwXoXHbMmuz8ujtl3H+AtdDmTTY6Xop52oXzTeiUQ0
m8asvoXM+u970a3cc+3W23i/V5a7EpNta9c9uktZZQXDjahEZa5f1YP1W0Pd
iYjDwdjND9G/a5k7WahRF/egD++X55QbmRa8ukH6CcZfVnIjI38ebUx5ivps
kl1J7+ux+LvP8H3wrNGFtN/8myD+Av1zrZ3ImTrepIQhnD93hBM5vGdV8q3X
eF8jtY4kNxFSVr7Fevd8HEiij8umuHc4vzdSDmQNIyL1xnvUN2ZkRxylN6ct
/4j6eS1sCCzYu3ntOLKChw1RmDiVfnUS/ZcHWBPBvuYtfF+RFx60IvMv92RE
fsN93n1mTqZK325t/YGcvtGUvMr8lbnkF+ab4TAm98K5s0Nn0D6PzYi02Ept
uzyLfCDdkFSr6uYsZtWg+cNcdckBfvvtQXMps2y+qUmyfwfnXmRDe22ZKokb
StrByUE5I+HaKuJ/Iz/PbwH6H+cXIbY1FTvPLUJeVP6jVXd3Yz4bN/q7VvGC
TPztXV5L0P7riBzweg0VnF5GObDgqzqwwrfdrPyUy73mGsAgu+jeaiHKPNZ6
FtD9UX3fH2HKPVq61nDpgVWRkyjmz5qxgxONfvtPilOuyv73/3fv4Q0HfkpS
brrE5gxbMrYftJPBfOdnnCEm9EhxhRxlzyUpLuBtfe7QN3nK/eZRLmCp3FnC
XE15qLLRCTznW7n2KGO9z9MGEPX81mIPNcrth7w0SdoFm5vPNbAfzpWOpGDn
3YwQbazH+tyJlAc76H3Qxf6FvE1Jg+6Dr3EGmL/tkCpc53E5PQ2UHTP/6X/8
ri9sizHl2M4rLjBK3MXmm+E+fnpbwK/9/U/zLTDfkKcaWbTWe98yJuVJF1dn
stJs0LbEBv3j/z0/Siv854vbIxvkmxPGl5dtlY4Y/3FUH5xvBaUouVAWu6fi
AiHlb9QuuqG9KPzf90ZS6Ed9T+z/Q68e5Nq/O9nhjfbgBlNSIh0ZwPTD+Mf/
/l/UzYwJ9gTgPN7OtyOkN+ahezD6lzmyQk/N+M7nIZRVZPfYwuutseYh4Rh/
XdwFvnp+mR2LpFyo3msK81Tim+JicN61zwwIP/v3uOl1qCdppwuRe5GksCUO
+/PMdiR6F38Os8VjPbnAucQ2P7UsPxHvK6rBAfzX/PFYloL7EelygVi9LUtK
UlHvvRiAzCWst8XSUc/CLgtSNJqZXZmB+7nJ6U5Otc0DpSy0Dx6zJk0Hcn5c
2Ib5LzJ0oXstxzn9XLw/bw0XGDTLi+rIw3oKCXYwvmKRFHMX6uO9LEVYvu56
fn837juXxYks6eY+6L4X+yFH7IlExR7H50XoL3FsMdFIXrYg5CDO51qMLVg4
7L82dgj91TscwFNGYHPcEeT7lhIQ9adYa7oM9R3utCFpfUKT6RXY77FT/+61
9kg12wmcZ8AjOVKeKbIm/xT6D+5hQoNXufCyarwvrX/P23UViceHalFPV/1K
eMx+YrfYGeTDQlZk9IU0s7Ie6z/4xCS/LlbOUTqPdrH6B62Ldq1quXAR5zcw
aw0iIbUJ+k2op/QLE5T1Vyt3XEH/1noRwlh6dtSqFfM9u2FPnN+rHLvfhvFe
alYkpL3Bx70D7SfbNCDxoAbf8+t4L9kOTpC7rvHempv4vK3fawol5jq5Y7eQ
j281JXXCV4zj7qC/XJoLIV/1f/+4h/W3LdciFXcuBbs8QH37h4wg+6R695le
fF8s/OgEYelnVRc8Rv/3O1yB6aFwKLQf9/mhwgYUVSpZrg6gfSpw3JCLUzJC
+Pl/8zpnSz6/Kruf9BLv486wO+m7IqTd+wr59ClXcmnfgTKlYdTnFccgJTFL
5+eN4L7k5xhAmnnB2rej+H40EnaEAJEFjxgfKBdzcruAyY9tBkc+Ua4/zmYN
Uj2sJ35MYH0tgUWEvXrzQpcv2N/tN3ZkbOvPDWem8L7ObHIld70TBjh/YP0z
1fakXv2zcehPjE9fyk32Llpb3f4b74UtwRYS3o7yCM9S5rh3yxU8SUhyEovm
/7kr8qYj6B0cevlwDuWMLZzSsDLW11KJjfIQU8OasDD7z+xgp1yosNWFvBF3
5X/Lif4XOWxJ56/7mxmLKLOUG3OSql6bt4e5KKu8OcmEnXU3bX/wUK7ir3SG
ddtMLzgvw3xMNUtw9G9bcYYP461HJYm6tn4WpyDl9sxcG8LPc2ksRAjtWuvt
yc9RNed2YbR/eaJHBq+eubxClHL59q/6QErkxZPEUd+SNY5QsfFU7kNJjO//
bgvZthKTq2WQfzTzQZh0mccOOfTnLbQkzNnlbcPymG+dmj1RfLJfhrGaMsOf
T49w1y8pOKyM/jqDevAld9e376poH4qwhb4gTj9nDdTnfNgcLultu35aC+u1
91cYlixjVeTUpRzY72JG0j6m7QvRR9b/akECbkz/ajP8L7/damJSFh+8gkFZ
jE8eQDpp8laiCdo5mpjA4Rij+tAM43VcAMbkRotXW2I93XpVcpc1hGUHE+Nj
vKxJ/cDL8GEb3O9QhTnZe97nvpE95ssjyyAh/4nWYUfK9X5ZTPAMdSn77oz2
BbnWoA/32ZzdkFVkhEBEwGbtaQ/Mt0vKirBMdvZxeOP89uvYkzddJgYhvug/
cFyZdFaQ423+lHnW8VlC1Sa9hSuCsN7YfkfY6dK4IXEN6g9gasE6RbWBB6E4
37OLLUnCD6FfARHY765DTJLWMVdoPArrs275t99dH3XT1qL98AYz2On5yGtB
LOo5sMyR7JUkKcUbUE/crC4pGT91SCYB56Ou7wwVl3dfvpCE9edHSEFVdvJT
k014r9eaXchZh6CfPWlo77onB41C1ssDtuC+7eOcgLxV0/20Fe22W4zJjfoV
XqnZmF+BaUPupM5L4dyO+j6ctoY+i0/FB3cgT0qawrMlj5uk87Gfg7udyOtB
0n++APMFS8mT95WV08Z7KE82lbrA5IZCwZ59aH/Rq0qmDVN0/A9Q7vE+40z+
cgR7fixG+4VGS5jfZ5286TA+n277mMB1VL2Yo4yy48RuZ8IXJdx0oBz7MclX
JcKabP1Sx/F98fa9M0iyjP9oOIn5yvo0iPztxwLGVbif4yV2RO1Am/b9Guwn
fKcN6AZVefidxvmHnTEEhuKepA9ncf6Pup2I1Y+UgykN/92ToBQ4dARfYr9I
OeK+tBO477J5sv8S5hf6yyR+nho/JK9gvsFjJiREcqVAQwu+X2Sy/n1PjrNp
M9pQ34ClNNl4edz93lVkCQknsin7SaLvdZzffEk7yHRoPzDWifvRIwA7hKob
k29hvfmOrqTw7Z7H8+8gG7zQgYP1m74X3cP5VR+1g7LUNfySDyjHLpJ0JKcs
bLXO9f53v89Eyeklmu5Gj3F+wRud4MLgysS7/ZjPwcectFTOP+DzDPv51M4g
1zZMXHz/nHLx5/WO0G3Y/yhpCPfhIqFJHnBc/cb2Bu/j1EMz0t9bzVf0Fvtp
22EDQ2V7NSVGsX7MfD7yLjLVrX4M/e12W5NxjZAE+IT6B2aZ8P2v7f47E+i/
Mp8P/nRrXvT+gvpWNdiQeQdEHo1O4f1n3zGDhUHs3xJ/oL9TiRQsVZzkZfuF
/ttzLMjyH/0a+2ZQ78olxiDWcdVV/C/6Pw+UBdldNfFnWbXofRz8Yk6UPPcV
Gc6jLPZuFwO0JNMu3J5POWNPnhwYjof0eXGif3SJJeFvtjzWspAyY/1rORjf
Lh8rykW53XrECjpdF0MmD2WWw+pypEx8cuHbpZSH+gWtSeL4w6eWfJh/naE8
2DdfrKwRwPqRSjYgk1ucsFgI4y2Dlcmsa6pprDDm1+S3JY/F/Zf0imD8jd/q
cGac8VJTHHmy2hZymiVPF0ui/4yIHvHPnZ/6W5py+a16W6Ll9t7KXw7tKkuN
gUviDv9VecqFPCo2MDJ+ZlhyNeqVO2ZK2pr3NOQoo74rpUxSnBuf8V4V7fej
LCHWzcPeVgPnMRxrDlYSesJntZArG22I2ITw2BJd7Meg35BMN/+9FK+PdtZ3
dtCT+3rbE0PkpStUoMrthoseA/uJzrIjGRJV4qUmGJ8kwgKeE3kTf81Qz/ot
9qDSsrY12BL9g9nUCccOx503mMg5snZkyE3dS86Wcs/V9SbQJMEvu9Me+307
YgGFE9NTnxxxHhs9mSSi5VmHowvq+cCjS4x3kMLzbpQdrybagZB7hT+/J+p5
psQFXySyFVO8UY/0WQfSPRH265kv2k0TNOFYC7MLAlBPwoQ1bNqheKAiCO2x
N8yJszt3yLwQrGexjkHkJb+ohoehf1+yPcyZ7Pt7KwLZ6PpSGGi5dFcxmrLK
iQJH0rCj5PDutbhfuYOGkOe+OfLLerzXrlYmBEsGarttQH2aLTZEb9KErSn+
v33EaJGlrdK9QkmYb+SsE4zt4KjYnPLf/MKUyTX3D+uGUjG/9TE7ckTynoFp
OuY70seE+Mn6BacyMN8bZSOwbd3Xz5GF/hnLnIlUXuKp6G3YnyCPPMy4e8Xf
2475L79zgD5JAxPVPIw/f96G1E2K8BTlI99JMCTZrawvvhdgvd9jzuCbN1zr
tQf3xZ6rQTQ8bqa07PvvPmJsySKpGkvRA9j/j6O2MDyZz5dZjPbeaAVoaV3/
ZrgE6281cSJFec7nLEsp19c+NIEYD80tNUfxXloEzMFcStBu8TGM39LnSC58
uiEecgJZaO8cInVp4/crp9A/h9MOijLEby+pRrtatR6ZZ33/aEQt6m9jNSfx
yzbHt53G58dm2BLeDMoz+etRzy3d1eB8qn/l2gbsj+e0FelYn/Pl2gWc34ry
1aCmq3FT6BLad/uaQMWc14fjLmM+ttsmhOfO7tiuZqwvd0GJZOw3NBcluI+5
elYw6f9heWI71utskScBcofG73RgvmWa5uTeZ4trkjfw+ZBbbwbQPHVw002M
j16gBmeyj8U8uIX9zHG1ISvtHY3l7qDd954q5AvM8m25h/l5FS1hZqh27FEP
6tv7ikliarzaFHtRn+ZyBfJsI3tR1iOM//PAFqwNL0YMPMH4Ew1ArsxfY6g6
gPYdkSZEvodnae4g6pXusYVDh8jIixf/5UsTIBxrYpo1X6Gd+9/znKwoVJj/
BvWOX7KA0W83Q968RbuEnQJ4tCXo6o2ivo22TNKZK8m1Z+y/96+PAWg5P3j9
7iPO/+85HTi1YsslmED/27UWhO+tYv7+z5jPe70qZJ8ZCPz4FeMr1HRgKilX
0/Q73mNn8L/vBWOtBSXTaL+iwAe9C4ZfTP7CfrlZ9MGkb895yz/IUv1AGkqN
csv+/rfP618NJcI/+X5j1aa8jc8I9qgcVrWdh+x9FwjLL6v5x+cj+8uwk9hr
3wd+clBuH8wyhqH8E2cdFyJvSzMiju7O2ZWL0b/vDy9pF2XxmuWmHLtWxBSU
359e7baU8pDMDQYpa/CZU8eL/sXZfIQrjfPJHAHKGfm+ZpBufqnWa/l/9c6a
kHGu0Iz6FejPcY+N+PcvdWMXoVz/isMc7la0r/IXoyx2ItGcGESvm70ggf4/
3nNBnYZw70Jp1JNaYALCs7cqg2UpB/KLW5GdN5PSLq/C+nOblOBXobQTjyJl
Fd5VDIjy7pUOV0L9crI2ZEBy669WFYyPVjAE5iel+7zqlMulj2hBU+Pg8WhN
9A8ctyFyGXnJHdpY/0izGbTon2Sz1UO9qtHGxPFH295HBli/tkIXhhsGRAOM
kM1YVpPkdd/qRo2xn6oH7LBInkdvgxnyg7OiUP5W/uZvC+QLX1WJRoW56zYm
6in304cu38BXXLaoZ3WcCfEVTF1XbI/zHTptDpO9+3+LO6EefhlLkr27PrfW
hbJjvbslCNrc5tN0R//QXxakbv7IMeJJmRGeZAWMDhYVKx+cR6qfJenbvKL1
gR/O70epJUToaln7BKI/8bUiM1OOT4aDcR6S562gsD46ZF0o9ivTb0mkYnI+
/whH/fJCFtAkW5G+NQr1szlYENs3zQsXrsV+DyRa/PtefFxctB7rT5VZkHjv
z9IiG/673w4L4OBfdL4yHnn5VQty5IEMQzWJcs9LdgtQ2WV890oK5udsNCPX
rXy9zdKw/3wTU/Ccl/TubjrGn7MxIR/b9sR7bEV7kpEJZKTWsb7KwvnUq5oQ
Xu2bBVE52L/vFxOo/vJqxVQuxgelmRI4M1O1eSfG/yg0hYeRAlrsBVif8d6U
hEmrXSssxHm8CrCAX0O2jkL7cD9qXZak4Ej48+P7Md7emQkSnplRq4vRvv02
kzQuK/3RWIIc0GwN1vcvZTNKkVnqbciLvIdLuo/ifFeqWcMGi09lLsdQv7aW
FZk/h0Px+Qmcz8dJcyhplbgcVol6asxMiVKKocVkNc47uJwBHRqevSl1aL9X
C8R9ckPg3LOYz+m5HozV7vqUfw73vyNXm6SHV23iv4DzGHJWh6WS19jLG5EF
NRXJqRfPi1ZdxnzL2kVBr2Ra/Hwz2pN3f2i957bsrAFBTlUVJsFLlAw62zF/
8LgS5OWucX96g/KkQyQDRMzS3wR3oX1doBlp+Fsc+7Eb53Gs0xIsms//SbiL
9dyNrclA4r28v/eR96bZwDq19wI7HmK9eA0bMmd87smljzD/rkgrOFAtonbk
Cc7T+IopkQ/VbZMewP4vLNSH3RL2v7IGcb/sIqZk6mWw5usXqEf6iiV4lSbF
Ml4h78yzIsQ7v7bsDe63YtwcJAUrRmbeYv1xJwbJfXRR3GcU/bVeaMCnvd2+
l8fQPjF/OXF2fHlQ4NN/7z9BSXJp8dTDhAnk/H4dEL7NwdX3GfuX+mtMtuau
ZKpN/Zd/tQWMmKtlF35HvVnfrYjNXMu28WnUE1XIhPp2n1+2vzGeIW1BeNNj
NWv/oL1b3RhS9LfFcrLo0Hyu09rkxfSh2vA5lBkW5WJg0nhm5MY8tE9uY4XK
jdfEpdgpZ2y1USSLVPt9MzkpDyn26kHc+MeDQwspt+uFmZDHtay9wEW559gB
M9CP5Ocq5UG7sJ4FKZdRYP5eSrl8cNQS2IaNsr34sF5wqhWJqnBtuySA8QXP
reC+f+QvPiH0H2mwIBrC6ZrxwpQdx9+bwqGne2MfilAWazrEILMHKmtVxLFe
zTZdWOPaMlIgifoTxpRJ15IH4p+ksZ7yfH5Yff+tr40ccqcKB+zN/3WwWh55
7KUs8WWX4gpTxvjaNfrk6nUd5nVVyipX+UxAJtMuW0ID6w+9sSB5RsFtGVro
n36RCRMzib9e6KD+a63WxPXKTk1DffR3WGIDTUnlsYcN0b96nzVZqXmx9qcR
5je5zoTML7dGPExwP8NxTPLu7AvxRjPKk3/ircF27VdfXkvst53bmpyT5yje
wET7rrtWwD8q3Ntjg/2M1FuR1JOqXMr2lGO7z//7Px9swdzliPoCOGyIuZhP
9gdnjNcSt4Wa5+vbmG6UA4cEbAj34exflR5Yz2vs3/8Dz0Oa870xXjveijzl
OxMb4ovxnRxWAL0dtR3+WD9S15IcL3wyIhZEub6kzxI47D+Kb1mD8whIsyJr
F7L6PQ+lXLjsBhMedvEV60dgvWt6TKKdI997KArtB85ZwRFTI67pGKzvcoNJ
WFhdme7rkR9zW0Moici+EIfzvVnEJONrx5LM4ynzmHGYQPLKmOjHiahvbZEA
sN795B+egv5aV/7tM22983Qq5isVtQFexc/mO9JxH55bNEnpsw26QluRz0no
EpmdU4q1Wdj/OysbqNdLFDPIwedlh6IZ0Rv7sexuLtbby7qUXDuUwu6/E/sx
jTMHW+bvX+O7cB5u3Jbk8XTa+JZCzH95WBYCq2Zf8ezD+7/MYQzvPTIeVexH
fWZ9TLKBfc4ttWL0T+LQgZnGrJZrJWjfma4BOWFs9a6laNfeY064+bcff3sU
9ah16EHxDY6DicfQ7m+iDBIJeXnsJ/97H/yxILVSi9KLK3F/1voM0OjbFbeq
Bv17x2WAZHGHXqlD/RZvTYml+h5Pm7No97M2hJ7XS20Hz+F8p82kwXtvkdHa
C//NQ9ycvDHmV59txHn1WhtBzOeDMrsvo12rRAG+ly8XEmvBeNa/5mSL4+HF
5wjmd32nBxwsK1lNriIHRGrC3rNlUw+vYf+qlVZEOEBsdE0n3rNnhjac5Dr2
bKoL74vTjAFKRPL+ttvIearWpGntyQ7+e1hfSkcWjFfKNlb2YHyCnyl036mq
1unF/HefmxLXNPnSW4/QfyqThzxXqCv07ke9+/eZQ9iz1dkfBtAee9iATOad
TUp7jnrfndEkKXqq0YuHMJ+fqiXMGWvwL3uN/koN8iT/kIaz8lucj+uUCeFj
Npq3v0M95dymUDatres0hvUqd8qDXNVlxdcfsZ/GREvS4KEvtnEC7bpTyqDP
3rps3hfcV/AmE7jeCOz7p7DeHE8zYh/W/kv6B/pfOiRP+vlMxht/Yj3DDVYQ
dOPaK8sZ9G/tkidj8eaP+mex3pZhExIvdbMrklWX3vdvLQbM9lq1/JpLuf2K
kiZsz+o+u3M+ZbHdEuaER932uDAnZRbF2K+tJa/vHji9kHJs7n0zkNzrkAdc
aGfXVSF1xg823+ehHPh1zJhofXaOC1xG2dEQjKGtvC/kMx/loVInbRiyFQ9I
FMR6z5ssCcvPtV6/hTDfeIAMiJ+84pKxEu2vg8zAxIndnk2Mcrl6mhlZ88fF
Kk+CckaDkCzJri434ZbGev3XLeGk2yeDIlnMdzhKnXSy6mkvl8f6ay8yyLvT
OaplipTrR1NNgcO7V0FSGfP9VFkOcvPFZKpUKTOWlZoRZkOM2GoNnJc9uxpE
+V8WatBCPWn3APIWzOfT1kX7MyUTUtvozN2ij/VPicmQO8FHOY0B5y/21AI+
cX2c28lAu2DKKsLVrDNrbYrxCutNiXL4tun75pQnv7w2BsdlD7+4WqGeIyMa
ENcm8umpNfr/4bAge6Oj3/nbYT7fhG+tDQJNr944UFb5eMwUeq/NG4xwRvtL
ATkytd7p8SdX3FeAAIPwCpf1bPDAebPv0wHNrrHuH15oT0/TAfd47Rtpvhh/
QNaIJIllt7EG4Lw+88uR4js9l3OCcL5WiUZwOXnlhYUh6M94tAgGpKLOFIZh
/iJhY/K7p7GKLxLtqdOCILx57vGSaJyPk58xGKxyLBVdh/bCjcrE79GRgydi
sd/FRxkkfev7Pas24vyPmetA2Wqt/DMJqEfQD6DtaWaOejLOq8+eQYa23c9o
2oT2Iwd1CauacKrhZso8h68yQOJFRELHFsy34d/3tmnexfWWmdgPRJmQEK05
UXeyMT40QpVse20f4rQd410NzOBUwWH/xztwXjt4VKBTb9TTJx/zDeuakXcj
Gi5DBdiPcpgy4di31S50D/YTVm4Ockb3LMf2YX6rOFVgfhAyWX8A9WvrmpKo
g+EGU8UYr5KhTnaaXtBKOYzzbNxiCnUTLKqzpWhfs00b7h62U8gqx/rzfE3J
uGWJNMdxzG/gq0u4p0ZEd53E/NFrAFTK1YWWVqFd/RaAo20G78Ea1Ofork/i
pu9wCZ/G/r5zm5C9J5ZzVpzFenOMNKDBMWyuTANyvasZ9M40/Km5gOy3Sp5M
Vf39oXwJ9XzOMSMj7hblOy6jPUZdD/rn7bJ604x6WhMlobuhd9KAoP++ABPS
HCh06EA7svZhgDquIOPJDozvNPlmWNZS+Z55A/WKrNcnhVHje47fxHxzjXQh
U1BT788t9M/Q+dUa35n62v0O2nPTdUhYfEde/T2cp06hAXhKcKoveID+d7QW
EmaPw7M1vTifwmFdopd+IKv1Edp1whmgqPhcQaAf+eMAHxEZkOyLHUD/yWoD
wpMbldY9iPYNrwHmaJ2TknqJ/FCRhUy9+XFn8ytksbeGZGQPJDx5g3pKdhvB
E6NtK1VH0K73cdKw69PtG3mj/z0fN43JlcNL1w2PYT8PQo2gjunFD5+wfned
AJT9OEoOTuD+KqUYpPDkSNjnz2h3iNSGTJfV3DZTGM8/owDxrPGXTnzHedat
ZpDQs1cCZqf/m4eDArj7sXJ4/kbOeqoFVgut6s/9wfiJjwyid7nAcyGLHrX/
VVoMiuGPWELnUB4KO/Tv/yafcDWZRzljnwEQnmvBToLsyM80pMmcuOqfcZyU
VY4JG8NXkcmK2wsxH/ufVWT4jpa1NBfl9lxLTfJ40+Yv6TyUA1+xa0GX3PWS
/qXoP6EuAlceLzBV40P/de/0SV2204edAsjx22WgTK1439vlyE3/4guHXugb
CaOexKt6ZGuB9HCxCObj6BAgGwxi8r+IUeZZsooBIWMNGraSaN/Rq0Dci38O
npTGfEt/6RIrC8a2v7LIxi4AelM5q73k0X+uvBQoHrv7qEER57NZ3ISIOPKm
L1LG+kdOKAD3rLdMmCrlSSdnY2Cpq7jXpv7ffF2NyBev0cTlWshu7GpkmF1Z
dKMO5VjGL1N4fDHh5h09tPOyjBt2rWlZL2OIel5NmJLLS+YKZhghr/6hDDVt
zPanxpQdv700hiNrCyPUzTDecp0hKVjxhGeXBfLqXh2ScWvl5REr1BthxYAN
SSFBDBu0ZzSvgjXStZwldph/yx8TsumGf5SMI2UxA7F/9xi69HaDM/qncPGS
U2ydCkZu6P9FQh9aTqbk3/bA/u8ss4CH5qs/eXjjvmeSjWH07ZDdsC/Gl33n
htltRWdiA5C3ZADhlbHi/hOEvELWish3/l6/IwTrv+8zIYywsz184Wi/wyZK
3OevUT0Wif1wm+nA2lP8e5ViKDPK6i0g26L7y5V1yE/WmUPJyGYXyzj0//pC
FepzVC/0bkSeOKREOmXe8gYmYr39O83IYGdxwsdkrHejy5J8CbN9nJyK/dqm
GBEOdhZttnS0tzTOI6KV5w/uycB+RZS0QcsyfHplFs4jPcsEbN8JedVsw31P
xBpD8PZ7l7Vysd79QA1Ils0UupaH+dqtegwLbmqmOuxC/aqBmuRE+Ptnz3ZT
Lr/OY0KusJcaROxF/fEapuRBpWPpVBHqO8ujT0Yt581mHPzvnk7zk9l3l/wX
l6D981o14M2Nbjt0BOvv2MgAeTlRMZmjWM9VywQYXQ8zGiow/4Y6I3CPyHkF
J5BvfF4NMRx6JrdPYX49UT6SVfXpmEf1f/e3QYOUWFXMHa5F/94cfVI/6hoS
ewbtAiP6pDOX48ZMPbLBG20yKNciveM86tvFp0K+dK3P4WtEO0sED+GIlHxX
0YT2fmNxEOF8YqnUjPbcu+qgWZ1XdaUVOeiawb//h8Bp2Y79TDcaQfD7z5G9
HWi/kqQLyTtOdgfcQPv75WpQsMpL4eNN1BuWLwUnbi3KT+5Gf+vsuXAlsv3j
vLvId0sFSA9nvN2e+8g1xxTJu2rZMysfYnzUOw0yy3zGVdOH+fsu6BDesYL1
Wk9Q//RqXSKfZ9LT8RTjk5lahCH/XcVhEOO7olSIe3f1nmcvkCVTxEhMlN+X
8FfoL9j41TBzwRKXqTfIO/9KQ3HN9fMZI1gvgl8Dzlgn8y5+j/coelAfro8p
JBz6gO8vkX/7Hsh7+Uh6HO/R6YIxfJbfp9UwifW+P2FA/x2G+bKvyFMWEtC+
btwl/hvWC8zRJZU8R4If/UAuyjcmBQ3MOK1fyJ6nREmC648tB2cw/jPTAHy/
nyiYnqXcUxdjDKbFzqVerPrUvqxRDOT1WOquzKXc7v9HkywZPH1lxXzKLC84
gExv9rmVxoH+c+OkyUtRzv7nCygzTlloQOfVxhFYTLmH+ZUBp9eEfDvKjXaN
aWUoYls6j3Up5tt3X56kVrYtDeZFe1CKAQlmrhW/xo/1/dzVyb/vOxWp5egf
vXIxqOzqgm0rsP4RWX0QUE60G1lJeeh/LZd3PNWNF8eLUkIJSZFRRva8RtzD
zSZcaSIjW8NIKE9FSTxRsmlJEo9fRUOIg/Z6JKMh9UiSkVWSpp/X9/Tn+/U5
53PG99x7v3d6hxH8blrmbi1L8ZfihOF9+NPg4qXk9y1ACx+L7dvFr0D1RucZ
4dUKtcRgJfLruqmKxze0Zz1SJt6ZKQv7vx86p6ZGvPalEQSfYF1N0WDYa5GV
ITjDu5tDWlTPUHEeGHamPnXSpXi+a3oosx86y1hUP3vq+4pP/uPQfEPiux90
cfBO7q/wFRQvaSsJrQHWgq0m5OfmYAw3+L8sZplSv3uzAApKC5SzOKRX1KlC
kgPX8Ks5caumAoYO/7LaYEXxqplsXH+sdG2VDfnrrgIE3Y2+i+0p3oSjjIpt
fDtiHKgf3nIlEIq6GtfhRPMNSLNhTGJzKns17VdCFqCjet7pU2vIL/2NGtxy
r70wuY78XtYr4D+/g2u8NpLeImWCx/IlHjW4kY6FZhi98u7LpR7UX8wFPfTs
3tF7wIv0tLW/2FYJcl+7N1M/rTJ6oL78yUwrP4ZlYyxNQezhX2LnA6gf0X+N
4ccWlWWzg8nPb0AeuoReaAdtJb+mMhV8cOmg2cPt5MfKnfr+c9Z1Ug2jfLep
/0c5nzs3Je+g+Bu/DXFf5pGtgzuJQ0dE0N/AJMYxmvJ1xHTA8WVf0qXdNB9n
6v2RFZOdI7yH4XzrMFOQWmJ5Pmwf6Tf79IC37tO15jjyu3thgt3vlX9bN/6P
X6EuPuVxbMlIoP75bDlYWfjj7ZdE2v95iZWobx7x1e4w+elkaeO1tx8F81OI
n7DkQC/Wb+mXo+Qv9dYYLku/MbBLI7/cpqn/K7XrHE5nUPw2M3W45PZk81gW
xQfMkUON79bRtrnUzzY/A/xfTn3KqeOU73nUAFUMjM5+Pkn5c+zUsKStvNIm
n/LLWh6zl0eoNJ4soPjGeDUoEjn77lMh9T//AwvkyyW/WZ+nfXuMaMNZp4y5
J0so31dfGJYOCcp/KiXOLFXG/OSDRtYXyS9W1BClVX87niij+iP3DPDkg0jf
0cvEPiZKKBU4vMvqGuWvvSwJeXyBR49fp3nS7AxA4lxn4UgV3U/zYzZkm2+s
tqyh/COyBiDe9fRJHhLfHRSHjFi798P1xBZRGigic+u7xa0/uicbj9UaC+fd
IfYWNUNh96sKw/eI/35hgEe+qxlbPKR+Lm4UR6Hcc9zcxzSPrLYGJBtI+w81
ks67yhTmPMuKMX9KLG3BgaSIecdyWqjfuhFjmC2aWDTYRvr9bwqQUD6tZuUL
4gPzFXEmd9fT7Haa9+YZE4wfGu352EH9nNrCQZ6U4J+c/8hPcIcZxqm+m5/9
luITS1k47aGb0sd35PdJcA7uDWw14fRQ/jJ+HfjJ57A6q5eeZ2g8QMy5OwED
/QynhoRxYOqVeY/ZIPnNuMWG6K6KtMxhqqf6XA/GYzWL+0fJf3J8CeyUKa41
HSM2OiKDY7WyLRnjlL/gIwvD3XN7+yZI52qb4cj3+b/hB+mLujgYkvu3aMYv
2ienEXDIgFe5b5L0uAYWbn0WM/Wn0YTJP2gmhf0RYy7pMxiONY6SgCDRbUG9
fAx7NRhrQ2/5+71sfuKp92jw53pkpAlQPL+5GXQPPSv5IMSwbOojU/BJcaoz
ESaOlTGELtX7rcdEGM7fNlMLvB6a9feIUf2zETLwJrBq0nghcU1UF3vTLJ0F
xxYRSyuKY8e5f1R6JKmeHq8iulosMzOWJt6+XxV/tc6ee0uW4j21VTDfb+iV
3TLi+i1Pas3HW0qaFRiuz0lUhp6EqijX5TRPaaweJC08bdmlQv1WWemAWnG8
aLA65a/ZKQFPDIPfjmpSvUNf5TH8gdOlXTrEjYoGuMCVtWc6i/yLi/Wxsn+x
fZIB6fZZcugWM23R/BXEmbsV4LdAT0+OCcNmI4H6cObEo6uyplTv2mUtsFAv
31/MIY40+8T+UJvF1bKg/PoVqvi341/SlVaU3yekh+r/eX80taV4UTNVbAqx
rr5nTyzfKwA7pqknOjnSfN9+6ID4MZF1z7mkl/LoQ5XcxDJPF+JWHllwv/x6
tGct8dVwFZxceatu+waa73DACixoKU4ZdyW2ENBFS98jbns3UX/XnMWgd2yH
Mp8X9ccOXwGHD278mrKZ9GopE9AQN72zwI/8z9fNh6dF8uknAyh+7AELIwzm
eCsEk64iBLjw/rDGha3EDcoqWL2h7adeCNW/q6oNm/qqH9aEMdwZtNwMpu3O
z7GIIL/GEF04OyfB/3Ek5fs0KaHV8S16a3aRvlARsE/VmacjhnTD7bqYXKPf
5LOX9A8NiqDpIHVqIJb6X9BiBM2vp2/dcYD0jwvUYef2D0Y/DpLe4qKEEpOP
Zx1IJH39oDHeOHq5bc5h8g8QVUMP2ZyzaSnUf/ZtTZhevidscSrdY0EYGwo5
PqYFaZQv/GAZWDfbCKlkEvOZ62D/Zo1X5dnEgeeNMOWzaIlRHvlftOZHrfhv
kQ0nyL9SyQhaxP6zsD1Nn7/2ViOIPHdb5OkZis+XE8dF+v90biikeAMBY6y5
e/RiZxHp7RfU0XP9zr8CS2i+ki5t4Ol1tRspJZZaCnAu2kwi+iLFL3ISBht+
xZ7JMvIzvcbGgVyBq4eukK6paIRHVEbj5lUQZ/YpgfaNZ07ZlXSf3Rc40Gpf
s0TmBunxegoQ3XFmoKiW2OUnoOS2Q1Ua9VR/C+/U+/ykP+vwTdJXTaxAnjSr
8g+3Sa9y1sRIeUV1i3ukx46dYPdXzCzJf0D1LCO1wMP2vfyvR3/0qfeD5le3
8zc2Mhx62NICrLYXSlU0MZwqnmwD1dPic0Ra/txjui1opPuIhbRR/OlWKyhQ
ME999JzqF3FNQbxyqeDydtrHPlsl+NuOJzG+g/Qvg/L4u+Mt79s39DzTu00x
PKRhH/st3bPevzbYM/3Mj9x3dB9Zzx3QNSM2avz9n+/DDHtsVPT6vLqX+rns
boErq0xDLvUTq+boYYW9zIDAIHESzAOVN7/9A4fJT+KCMZwKfdN1e5Tm26tg
DSK86CE3xjDXucIeEjJPtu8Zp/mk+23gm9Kede0TDAvPaOLA1mr3Zv0fNF/Q
uBx0rjJxTP9F89QM6+Ka/yQfDk9Sv497rPF+2A/LVTxspp/Xplw0mfGqoXgG
w/X/tjphWVY1e+Yshs1ePbFAeeW8Km9+hmPb+mQx58YuFgowLBv5fgUIOm4s
XzyX4U65dfYQ22moHiVM/qaNXBgLlyhpEWE49NI2BwicOSGvtYDieQ6YQEf2
8/zkheT/xUoVuSrXpfoWEUvG2OPtmqwcSynKtzvnggZOkWIF0lR/Selq/Oft
2tTfsuR3vdsCpSNYgm7LqP/ZassgjW9B4nUF0oWEHIEvd4xXbDnDEk9gHexW
bd0XqsKw4dCZNTBUe+XHYzWKHzhjAZu56VHKmuSnnWCAz7rCPx/UZjhV7uAa
tNu5OqRLl+ERlHNDnKUzAPoUDzFrUSdvfsBxQ9qHZ4QuFqmNdn1dwbDwxAlH
WFzX5LGGTX5L1NzhiHNZe5kpw716vO7A0310ndBK8nNUtIXIyJDmIAuaf/Y9
M+yf7eR414phL969G9HjuMbDpbYMN9mVbMJm9blW++wp/7WLM1rVDza8cqD9
hiYZQPXqf9mGXIYTeaa7gsb7/1VlrKb+Du7ygIKoZNboGoaj86KcYcGcreUO
62meDU2GWGi+Z/fIRvLf4+OMOnuOmKe7M1wm/skD6itOC+p70nzi3m7oOFLW
9sKb9vV5Jgc6lG+eivElPUrLAYJ9WgKkA+gedSY8cOJEt1ZDENXLm/SEhGdf
vvlspfnDhJxRTHjWLb4Q0kPdp34fbSWSS8IYrnTpcgOtA8prV0UwzLVO24x1
NSukhyMZnojr3ASO4/Yfju2ifQTqm2OH5qYyvb9ongdZjhgctH3X870U32Hi
DRMF+1bujqP59hlvxoSOVIEl8RS/o8cVxMQLWusSqJ+4RMACpysnNyf9+Xzc
c0CtpNv+M5MZ9k039wK82aZZfIThF12VPrjqZ8+E3THaf99+L2hnTTQMppN/
Ui4Xg0L4D6dmUb93DrNwonjxGt1chu+zgl0hoUt1ybPjf/ar4ItiUuye6FN0
H8tt/aBgreMlyTMMbzCv9UKto57ReJb27bCcC3g/lONdRP4rR1iwimf/nBkl
NC/X1hXbjdNbikppn3rXfSFwZ+EJ24sM55wIDMDxi9f8PpYx/HN+vh/E997V
OHqFnle3pweKLH3xVbuC+rH0t4Z8t7761krSBXlXgkbm96SoG+QflueONY0C
LouRPq9Kr/3AfvYSqdp62lfPcBC2czTee95iuMZ+XTAExphe5LlL939l2lQ/
V7lR5+4z3KoS5AXxQ95mNo9on/KujiiyfAf/wL80b6GMNuZ7xzenNNH3wWGb
9aBxPPO4Vgvdf9RLH6xpLfJtaaN7eDgSBHZzK9UjX1D+85pt+ML6wbjEK/If
bd4O/nHtdTde033P2LANx6oHEj06GS78nh0E+8d+Ok9/R/vLm+uLwhpzJQvf
M5wvlOgKpwJkuq16ya+IxxrVz2hd6Oun57VusRbWtHMikwepHwddF7ATczHV
HGHYRvKQF75w8J3d/Ilh+YkEf/A/tPNpxBe6T6XULThWn5C3cILhj/ERIbD/
e7ZP9Xe6n1qlMBTWK1Hb9IvuV/ZlGJzaVv1lcpLhiGbdcPw/67+20Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=0.01\"", TraditionalForm], {15, 8.*^-6}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff.\"", TraditionalForm]},
  PlotRange->{{0., 30.}, {-0.00001, 0.00001}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.569321132125867*^9, 3.5693212376460166`*^9}, {
   3.5693246455230064`*^9, 3.5693246557540207`*^9}, 3.5693253560000076`*^9, 
   3.5693254140290895`*^9, {3.5697558521860647`*^9, 3.569755886592113*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "0.1", ",", "0.24"}], "]"}], 
       "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", ".1", ",", 
         "Ns"}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "30."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff.\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=0.1\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "0.008"}], "}"}]}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.569321242437023*^9, 3.569321293284095*^9}, {
   3.569324661555029*^9, 3.5693246624150305`*^9}, 3.569325318633955*^9, {
   3.5693254216900997`*^9, 3.5693254232001023`*^9}, {3.5697558940931234`*^9, 
   3.569755906525141*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
PBO6YGV24xQs9+XkOj0DcFTzbhqKe5G7pvwEuJqbGoaG7o4wcRqB7WVup2KF
y3v+uJmAB0X0/BGVFvTzySnwy8tn6eid373pXRbgBgopCSueXjuRYAWe9FPz
wbTDp0a/WMN6a22KT0XDuy+907WFuPrxbSSszPtl4NpZsPvX2/GYvqTQy+EI
3rLVjIE+joY/c3Mm5o+m9qMDz9oeP3EFf6pLYeDk29z3d3kQ9fm1Ig6NXrRq
SvACp5z/SEKqccV1X84R+/PhTCpmeE9V6/qBH3oq+KAxswMV1/zBCs866Ej9
ILmEIwist/iejtN2dl5yCwFrsg174/ENfHlPwsBqOSgVoQXbjF2R4ILfV6Nx
xvC15AQSeK7MOhZPtP+gfiGDq7beYiDNmxoxurHgwqAt1jgrNz7iWjx4yvtm
Mp6MfhHEQQP3CeTTkJb7Nj83Ojjuzq4AlGPs5PkkGXxsQjMVT6lWOe9KBdc9
MYpCR8R+2yWkE/F/gSu/T9cePv0lE3xleOX38PQP+indHGI+E/LmaGigyOxi
HjH+45XvwY7mOvPZfPCCex8V119+anH0ElHv136G4uL4YcvcIthPipFiKkrz
/Gn17QrEyzbvDMRRRpzWh66C5QQMadhTeceZzDLwiRMcychqm6LNl3LieTK/
PdJh0rXVuE6s55NiBlb6dMYutQrsc7gxBol2+J39dBMcKHGTjLir4u1VasHZ
NMzAf9PzHZLqwDllIa5oIvim44c74DG+V3Q0cKbNSakRLG2TnIgfab1xTmgm
6s9A1wfX7JxxedsC8zl7vZeBCtexusnfh3jPOeNonDS71T32IRhzulFwaL+s
x+s2eP7BVicGcm087LnnCXF+wu7Z41OFFl7RT4l6dRdMwlqxXt4vn4FpGvKJ
SM6dfG5XN/jdxzU+SOhktk9ED9iAuZSB1ypW+r7oAzePL0WjBf57fhKviP7W
isSgsb8vz4e8BjOk4hm49+OE/7M3xHpH/PRArY//BYi8I+5PJqtEdKOSNyhg
GJyf20bHF1J3BT/5CGZ3kzqLqYEoZPsnor0oHwMFnjYJ9f0MvkHPisUOmq5h
j74Q9wneFYENJSLCt04S6/n5NgMhzrQIrykwZdQxBO+evhp5b4Z4H0R/icP8
fY1Rm38Q+88cnILW3O0muf0k3jeFMRZ47uKn6OZ5cKf+IB1/IC+SNy6Cj97a
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
35lXX0T+D9B235Q=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=0.1\"", TraditionalForm], {15, 0.008}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff.\"", TraditionalForm]},
  PlotRange->{{0., 30.}, {-0.01, 0.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.5693212594690475`*^9, 3.5693212941840963`*^9}, 
   3.5693246640050325`*^9, 3.5693254246201043`*^9, {3.5697558975131283`*^9, 
   3.569755908546144*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"100", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"Happrox", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "1", ",", "0.24"}], "]"}], 
       "/", 
       RowBox[{"Hsol", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          FractionBox["1", 
           RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", "1", ",", "Ns"}],
         "]"}]}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0.", ",", "30."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<z\>\"", ",", "\"\<% diff.\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<b=1\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", "3"}], "}"}]}], "]"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5693212796010756`*^9, 3.5693213407701616`*^9}, {
   3.5693246726080446`*^9, 3.5693246768790507`*^9}, 3.5693253204149575`*^9, {
   3.5693254263401065`*^9, 3.569325428210109*^9}, {3.5697559167871556`*^9, 
   3.5697559227281637`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwk13c8lW0YB3CRmaRIXkWSyAxJSPd9kiSEyk6SbLKSPU42IXvvvVeye5yS
kZCokD2SlSRZGe85d3/5fD+/67ru8TyO45ShzW1jcjIyMh86MjLSz7XRd2+5
n2UDduX9FzVbqHGfUlldrgx4w0dpTMLvpKlxuKMfDFkHIqGnd4DxoSIqnKNa
YT/FQCa8RmPA8NWdEnd46VjkZn8l1F2lffltnhznn5bvti72EvrTYdyWMuS4
bTUp4z+hNTDslwmfTvA+3OwLXclfVxsh/fKIPe4EGW6sUcVmtf8NLIU6OnuX
tmDi0WNGjynfQk+XRs1jFRtQ3XpMe0WsBSooCzLc5FqHHSdtZZdD26Ci8sex
2q3fsNo74uji1U6YTej9LMixAOW550d+9fdCPA2T/KUD2TBbTUW7wroPkkUP
BQnuK2va51HZa0v5CeJUZAwTbd42NX52bfsp9hmKqNB+SWz+0iQacKDiR2g/
tP07Zjob+b0p7IWNQAn3AFQ72iWkFTjftDjWl2PVMADxXXWzmo9/NOVKJicu
zA5CvLczvj3qV9OJeUHfuavDsNH58Yry9lqTK0vEbv7XYejuHnX70LWNpn7Z
P85mdiOwmHDFWc9/syky6dWj76mjkExE3T7319+m5bZTs7kXxuB4gbS/6PGd
ppurfoYmnWOwavX9QSOZ3SZfnryiFfdxOMyewe4hRkaolBk0u90+DvXEeC/u
qyYjTNw+wFPJNAEZ0yfid8T3EYCXTbpd4QSUPDfax3SGnPAoJuPexz8T8KwT
U+WBWHJCclEfm+iVSbgc4bl0kZyCsNl/MWa5fxKSvbUV23pPQagVozHI45uC
9X1359lF9xMcQwf49d2mIAjgr7cI308Qn83/w9w1BScrqj/1z+0nrMi6EN5z
TEP7F+9C9C9TEspTbjzztp2GPLPxilvBlATrjf80pd5Mw6Xj7mH5vZQEwTvz
nMtM36D6F+MFM2YqwnxJ/UKu8TeY/LRsR0aNipBP86z6Xs03SL/Fa3XWn4pg
8vDuU2baGdhB5ftVpJqKwI0JKL/XnYGdpXFT98apCFOs2yzexTPQaNaXqW4/
NSHzceeE5O4MLDdS7b95mppg0J1c/FP1O6yMcHTmk6EmcPA9csrN+A5bxQoO
3VWlJgz7XJa99/s7VP+05/Bbj5qQOHrwIPO1WWjrpC9JaUxN0JYa7e+InYXK
Z3SeZ5tSE1iiSzOfzs7CLzWRN74bURM+L3k+kpSeg/XW7oRpYn/0DVXJn8/m
4Iz229aXxPm3s09S5I7MQaOAl4kOl6kJjHs/u/TOzUOsp+GjDA81oVuHEM/0
dB6yhg4rCtBRE0Kqwh929M5D/UlnNv05KoLioQfCT7kXIH99n/NqMxWBxkJ0
86LjAnR+cL6CIZGK0PZ239ultgW4wcZK321JRfA/2RuW898iPFF0maAuRUWQ
c83U0bNchPwx9CMt5FQEwrmrP98x/IASiZc114MoCZ7BTPV4gx9wWLrQcJ8C
JUHm25Tvxcof0CBmjSGInJJQl+jLlqOxBDWXSw0KH+0nVFK2XsMn/4T1VZfe
OnJSEOwMYhkvLv2EtkM/d4payQnx9178WDu5DAOryXzjLMgJmrU+tSV2y5BA
J39EuHgfofcRt8rxo78gg5CUdiIbGUE0KeTF2uVfkH5gKtXbeK8pvH2Vtdfk
FyQw15BlRe02qZxumQqs/QWN/qwdc5/fbuoYMHZZu7sC27N6yi8GbzY1X83L
/pj5GwrmprmsvVtpEgkrm1tv/w2t6h5l396/0pQ6UCPM8fM3zF5yNj+O+9Xk
/Ki91uLSKjRrbS1gcPnZJBw310nxaRVy/u6rWomfa0qe+HWYf2sV1hqNN64I
zDbRCm5pqnH+geFUey87mmeapgl0E8lWf2D50Q8fWsinmxLnBf5coFyDjHDF
U9lvpInmgri0nsAaJNBqfDUhH2p64iXj5X2LmP9RBYXPBprUmG/Sfkgh5pGc
7Z7NfU2UwJrdTGId4i4OXRpKaGmyD3Q0DNMjWvTE9f8MXjeN93rmVXmvQ0IP
t2XH0/qmetPnovs+rEOyza6PVxVzmmwjyq8lmm5AXKHtoFlEJRwdqg0mhG7A
9Jvu78x06qASz+sPMy824Phtlctyi02Qp+GjznmyTdhz7pRrn1QrjKL8mqrD
swnLCUe+mom/g2Rqk1NeypswXMvhD9PRTjg0vfKoM34T4o4/Hm992wMVzv2t
XME2oe04Xe8Phl5Y7UKxwfptE87eU2hKUe6D4QzM3saiW1DBqV5SJOsz3NU+
0fZMawuynsPMHzZ+gZZZ3PSVHlvwLIVUGuFdP5SXvBC7+24LqpkyTpS8HoRV
3peHuJeJecpZ+aTir/BU1zVOJZa/cDlq+5J1yBDcfqBZGGdIdDWbUojACDQv
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
sA8m9XvMYMkSWY7tZwQ2LMpInWWLPGaZG4/hbXElWk+QwxolU7DTZbZ36F2R
uW4JpmGtP9I3CZ7I5UXaqZi54Me0Jz7I24daEjF6y33y/IHIuT9aorGyAtHF
0RDkXen8IOz27IPIqAhkxpNOj7A/PJGSCrHIKzdLnEC88ZvR7UTkh3MCYUAm
e8W3Ig3dxyVD8jgwNsklYJKN3PRxNxl4n7rzka2AZIJBpkQ64DHwcfpQgvpj
WPzSwbvUF+y+lcgl2i9SgdXIVLNkDeqnKk5LAIdOMFv8aEC+lyZF/H9JV44x
k4Dqkx3veQONBIdqzRZkgwc617GN/my9Ax3IvZ4CflgSy2dyQjdyzTmXKAxo
UBY49CFP8qYlYpNRF1T5BpC7zl5Lw/x6jf+MDKP1FAL807Gzh2OTIidQ7rdZ
nYZ1qrZeuT6DfIfvYRJmE7b2/e88svTco2jsSBdPWPlPZKD01x/b/SmS07H6
73lbsUJs/silxulNZNEmMz/w5cK1vt3df+8jXVc0eKOtOs+6X4Dk3+RvkkGp
m86+87Qkk30q6UwHiakPWW8yoNxF0zAD+L9+dM6UiWSCUTdjOng87ST/lBXV
N9HOJAADau97SezI4mUt4UCZP8ThJReyCHOXI5C8GfvsAy+y3PAxZ4zbNj1z
ThA56OuJCIwxqrCOQgxZVUgjEdt+WdXDfhGtb88tm47NDmDfL8og+9R6Z2Cf
/rbv3rqCzO/QmI4ROPqOWsmj/lI28mSs+MqIoL8Scq6vdBQWb/T9aroacv7y
eTzmF/BLt14D2b1F2hbYF/61+6SLbL4w/hzod1EGLd1HFls8mAgUlw+l0xgj
Ww+kpgMJJrYaLgt0H/3umpmAS4K7W8YG5VV0cxmAQUf4m6YD2h/Xencq2HKT
3LZ1QXafOxULZlJlmZ55ovps/nw/0PtamT/HB5nTxu8ehk1rXmkKRHZcbAzB
CqkfaA+GIkfl8SVgcfyWNr8jkcuEiO+P780n/gfj0fzscvtMzNbWK4U3BVm3
lTsT04sKqrqSiepFm2XSMIXqqPd385DPr+vGYuKDKZNPipHt1e77YZzbeZvP
K5BXH48ZAvqTlYyF1ciSDnZhYONKI+/bBuTkbzqJYNqoFYwS0Honh0UzQE9A
j8ZGC8m4Wl7BLNBY+NXqyHtUf/TQQCYo6Jr2EexB+YaaeDqIXV5KlP+M+idF
OOKAN9NmhcFXVM+n+cMPWEtQvHMdQ47/UG6E6eocHI+eRpaYxT/H5N2PrZfO
/TuP/89ETCztFMO7JWSre3oZGMcbgTNTv5FHb9NnYXTfLsjsbKD1OmjUM7E1
atydY7sor6+IT8Um+RUtRCkESZaHmdFY9031p0o0yOXPdr2wBlv9eOODyBZx
5Y4gP8qszOsIyfis+cxIEF1t35pwDJn1kXwKwA+6j7w4gXyD4kQmsNr2X+06
hZyaJJ8FtE9GHJjlQdb+tpEB5GSTuMgFkdskXyUDEeMcqROiyFp7ryPAicAy
NQkJtP6W2IYdKCwtad6URsZJ/8Bjkp+LJF5BZMD+NBpr/VtQgJdDzg2/koqp
c+WfkLuBzKdyIxObVMh9Tq2C5n/QvpeF2dpkk7+/jXLeX1KZ2G5M5pMwLeS/
hcspWEhj+uwtPeQdgYUojG0q9e7RB//WVzrqieXTpnQPGP+7vzxrJyAhknQl
2QLNH/QqjARvNROq7tugPNPGNAXc9ojjPe1AMkGw2SITjGfFJM44o3pMmzYb
WHdEHSz0IBn3dP1WFvi7HIF/5I3qx6K00kHgsfDfIgGonjz9ayxgAWEmq8/Q
fCMzF1+QbRQyWBOOPFuaa4WJPQtWdotBPpdxKAIjVAQ2gUTk9znhyZjKgL8Y
eRoyWZ5GJja865vTkoXMxCCVjVmc8WENykcmPC7NwjaUnj5TLkF2WGlKx/zt
vXYPVSJHDYfEYcwJHnZ91cgyqdf9sMwmt+nYBuSej1yPgMiMi5YuAbkdlxgB
MHrnDvYWdJ5DSdEpQPm84+WJd+j8/dm7meCrjkN5djfKDXkXsoEZ3v60WR/K
9xhuZoO1XNtYgQF0P6WawhnAt8ua9ucwmj9x41scOLJq5V45gVwx1+UL0tks
fz6ZQd72zrDDhK+YG0otII/hqiKxRlPTz9s/kd3utaViimHGCoRV5Kxg7yxs
oOphg8/mv+drL5aDmQw9EL6+i/JjApeysdV9Bhl0FEKknAmrSMe8z+ozd1OT
TDaVeiQWY1TVC4igRx6/aOSFpT7R3VI/jKw7PusBBJO1H7GyoP6fGrMxoO6N
5vgQG8pnmb6mA/k59TtpJ5GNnmVkg0+H7rQaciNfO9WRAwwlbknx8JFMMIkU
ygbLeqrFc0IoX5j6kQY8fW6eLBFDduOzjAL0hUqRtheR7X0M7UBizw1KcRnk
SZECf+zs+nXndRxyckxsAlbNLr9Qfw1ZblwpE5OTk9P3VEQ+dNYpB+u1kP14
RRXtn/bWSA5mEIGTo1RH/q/tYRa2VANq2rX/7ZehNhlzH5XhD7mH3P7SIxSj
o7yUomqIvFEppwHiBaQYmUxRf9DZOxFAQ6krHLP8t7+Jb6ngiOWDwxa2yJES
GtmgO/hPxNEnyL65hbngWWHQkdcuyGksZ3KBQgd7lJUnyTjBkz2ZYP98BROr
D5ovqcGRCF7Tykc3B6D6T9+N/IEn31dmmxBk+vCfDtilG9YxbBHI7FHHYrAN
M3KW1hjUX9crlIFVBcbG2iUik/Nk5GB2+fzH2NOQ32jdyMOE27G49izkeY0f
Odj899usDvloHllwWQaWR/09/mQJsqMHRyxmxOv23/sKZLONECfs1PVDiY7V
yAI6gf5g1CSLjasBWWhqXxJI9L+Y1NWE5tvaZWUBrdz3x13eovchV0UyDzC3
3k/mfofOL+/XnAd6vv0+0dOFckxOMAeEUgamuPX+ex+4PNOA4pkTHLz9yH02
D8IB9bXy1N4hZII6hSr21kjupOc4sqWJdiT21Hcgje8b8szR1HQMZFtxfp5D
rpgYzMH+NpNl4JeQD/Lz5WO1U9GnBH+j/YakS+RhDhR8mf3ryBW441mY6OlX
XD7bqP6/qDfx2JLsrSzhfcLo9+eFixdWaPjt9FdK5JpYE19g6u2S7UeHXFRN
mQS4Mw+eET1EMmFLiy8bTLzOyBlmQhZzOZEPUicu8ASyIg9UtueDu/s6cs+z
o/7dacZcwHpKn3fsFMpv3lVMB59xK3nBPCTjh0M0w0Gkgf9ZCQFUT3bR1hBT
wbMVTJxDftzUGY0dSC/lCxVHxkdeyMTam2QLJaX+7R/nn4f5jn3hn76MPPU5
ogC7smdR9FwWzaeRpc3Hdjn2BC5dR+4rOJGFNYCo4hklVM94ZiEWc9bnFYpU
Q94YPGaHiXs2lFzWQFZikQ4Dv1JUhed0kP3oZNNB6aup0mh9knGzI/W5wGLE
6RzuIXLxLfpCwLtzoHzBFNVnFVcVgOkT6SJxVuj8elbFOSBDRrxC1g7lqpd/
JAN9vXbRpSfI1UVevoDNXa8ywRV5SUvIF+tPWha75oXcabyejEU3+L5Y9kF2
OU78fFAbYhVPDkR+l3y8EDv4t7jqeig67yHOmEKsg+3Khd8RyOSfRfOwHo4y
nv1xqP7WH8M07AsXO+vRZGQquTI/bJjnGS1PBjK/bmwAmODf3JLIRecb57ic
DmaETRevF6G8e/NTHlgU+zyiXY7yO/KaRWBF4uoH85doPTqeE4VgQ7qC4FqP
ctHcW9lgF5ysfNaE+o80TcSA/VdDs5LfIhuok93A6K7/jS55h2zM+TAOO6Rk
7o91I7dP7GVjzKr9Th/60PxJssJCjO3ONfPxAZQnHywowji1Xuj+GkG2fvE6
D+O5e0qZfAr562m+NEzw/vPLTLPImevQGxN7uCPM/QP5pqdhKJA0teS8sIL8
fWI7A1y2HDwsv46en3WeSwGQtblOobWN1i+csi0GCo9frpruO0c6X/eISiFQ
cTo940yF/MPUJAuou0X0Bx04h95Xoy8RQNdrrz2REXl/9LQLZuDzqL7oKLIZ
5YcUzCRgqKiRjWS85NpgHmb57EZK10mUf1L3LMZsn9eEjXIjf65cKcIco87g
f/Kh+pvH5HMx97goO7JzKKdZ+B2PeSfte3hYHDn9u/Y1LDDNRp1LCtXvuz4a
B8KyRq6dByQTzPWYckF0ntJFuauonv6XRDFIKKo7q6GA7FEvVAJSy3jZTG6i
/u6fNfkg+0XMAafbyHVZImmgsIZiJ0AL1WuGzbiB8ga7pXg95JOWpZFYddPY
WMEDVP+fj0s21th882O9Ccqf1/YVYW/aGt68t0T26doqwdre81UN2yK/f+lc
iHV+iMv58QT13zk8k4H19lHG7bqiXC7lZgA20P848BAeOeXNcigYHZpw4fRD
55NyM8sC02OqlqLBKI9XelkE5qde6ck+R8+rt6m5FCx/F1C5E43qld4vFYE/
CwnQKAGtt4krywJbP6lFn6Sifh5zqTBAtvqEyz/r3/OVtQnEqDammOLyUb3h
ZmYmRr99izK/BOWlY5FF2BEywlptJXIeGX8ZxrpfePZdDaoXFi8qxjhokge/
NiLT/fbPxk7T071feP2v/3xMOHaW0blxuxVZITTJHwgzz5Qc7ESmvhmcCcRZ
1dM4PiID8s4iIH3iTfi5L8hcYhFlYPI09+jcV+TiYtsSECTgL5A9htZTLDuf
C0TOzzrrT6M8KlUkFgxIK7ayziHbzvDbYHjZYqa+H8hlsrop2FlFhgehK6i/
/cNkPtZzy7b0+jrKDY6+LsWcdHr/7ttGeflxkTLsuUgitz6ZCMnSsiyF2ENx
JaUGchH0ebOkno5dlNy2Y6VE3m+c64EdkCmJf0KN6u/+vhYFRqF+Uy8tyYQv
Cyo5oPLqoZlz9KheE4qXAP/rBPpQBpJxdx9OlAFdJbvz84yo3qVnoBgIq3Lp
XmdCuRwgfv8jv9OHzz6K+ivfa0WAL5q+eftYkWuvBvhgBboXuvXZ0PoSDTEZ
mLv+zGrDCZTXMXAVYWqGccf/O4nsPPGmDOM2UZB1PIXqJeUjS7EN802zvtPI
Hb7teVjno8LnIjyoftJdLQFLt7tbHXoWWfKDlA5weEI/Ms+PXH4PJoPrLq8o
FITQ/h0Of88HbB7W/DnnUF5Sc6IMLOFP3iIXQ+d5/S6uDLzx7XG6L47qX8hd
KQSxgU9TGyVQfXvaoXRgESLW8p8U8vCJ/U4AhE8tOF5C9ghtjMGOREcf+XQZ
OSclORf7FndNShSH9v/XnK8Uq01aux8mi3K5MwzlWEhanv+CHPIVpiPFmEGW
donCdeTZ5rpMTDyP9lPOjX/1FiIBGE1R/Ra5MpoXkRwbDoZLLU8ZqCCnH/ie
DcorTyi8UkP7zx3JKwE+1V3WbHfQ+cz0bcuBZr1njJMGMq3TtxLAj51r/KSF
nBMmkgN2X49PiuqiefYWReGgtyWC9rkeWj/7KF0QlvtOVmRRH/n+tbz/STjv
cCzfKI7TEJIQKkl2JYSMkm4yQgmpjJJklKSSjPyU7BCyN9l773l77c1rS5QK
IbOEtH6e05+f65zzPd9z7vt5PO91dZWI/+v8pq16C/IVnC5nY/WepGcpxhAv
oi/Kw1wDV5O23v7n99OeXLwyTNVuaAZMe7s0BbeMli5Xm0M+ubkwCEePm+07
cB+4afiEG7Kc2C/75CHkM9JtS0SK022mA4+AZXI0stG+OQcfMWuCOaX71/LQ
3KJg4StbmH/LoZVcVPNt7M3ck3/3KaQwFQWu+VGcdwD9xBNPQtDtn7KHU5/9
m8+j3BlL/126uM0JmNqlJwHTb02wvuUCjNO9sjHVj5rLy26gn556IR//WRgT
c34B+oM3E3Lx6sRPRkZvyPe5LJ+MF0f2L8f5AJuPib3A02QpssgrYDt35VA0
3nQ1lxQA9bYN3ulouOqxn2YwnAfv4N88RC4IuD8eSnAcWy/KRy1puWqWEZB/
WXooA5FiO49RRP/b/66gCFQW/IXWPxb0mR+8csb53jSzh+KBeQfjknCG0+HW
3ETIZ3+xnosTbJXSZFMgzjL0Lh9HWhi/6E6DeNWrnzk40Mj59s1M4HP1dQnY
W/e10mI25DvtpnyIXdSreZ/nAe+XWopF/ym+3bq7ELgz4EQ2eiz942NsMZwP
9c31fGQhsrdOuAzm+3t2cz4Tfol4XAH5N55u/h7QZ7/spF4N3CFf74euMD26
+a4GOOxCUjBWo36FHtT98+vxIR0r/sk6+KcB/ElJhuVjmZW2X77NwNEbK/lY
Ynb67cE24PnhtkwsPE5Vmd0B9ca6thGYf5A38kw3sM6Xox6Io0PevrMHOGvC
KQWx1hnq3ugn2PBj1K88RF/mKDU/CMxH8ipAVDnRrM/eQP7h6O856E9ixXe6
0X/P671d8WgtYrg/+t2/99HDamO89Gq1UPADcJznuUQ87c4cVPUJ7tPlaYU8
PO4gZqU2Bbz/00ABHn6keWl0GvJ9FTPyMPnOAxGLLzBP18rzJNxyw2f3r3mI
m/l3WGHS5YyFl0uw3/kGvzhUrtrSeeAbxEV9lXJRgexUVuZ3gseFynYVogyJ
bT6n1+F8/IZe56OEY9z32jdA/4C4ZiqK5JI7f/031P9l5XRHgXsNjn75C/zp
6uNo7L3rKbXDFlEi3+m/AznYZWvkZ9rtBJNcMX8hdvhR2hS5g2CKy2+0CrD1
4kCyAC3k61fapmOLyW9uFXQQj3YR9MMmbxlNzu+GuDPpVzjS7zmuMMIIHNuv
m42uNF/kNmcmWI7/pGohUqu+R7nBCvXcnSMFSLHQa9xrP/TnezOTgc6kp9bs
Z4d4YchUAJJ83RibzgF86fDvUCwc8unZKS7Qvz30Kwvzv6S80coD+hfm7xZi
DudDMnr8wMpaooU45zE199gRyK898isTo9vLO24dA70Wk6hg3KU7Mj8hBOy/
ejUY3bhQ32cmAvlV4fuy0NyZrPI5MYinc9wuRE9FQl5bSoC+M0dVIaLjcXRf
kQL/fknvs1E0y517T6ShfkSwLxwJUmte+iUD9c+L3vjjyo2TUk6ywM6SRzLx
+Xmug9vkQS9I8XYhHnlPu9VTEeI2lHxF2Lz32/ROZdA7ck44F280jHa9UoX4
UJNPFPYubSzaowYcWOHhi/Zn5ESGqYMfR9m0DJQWHeZ04BLBcW2P7AvRyVdO
t19fhn7B12yLUIvzXTUebeCa8Y1cpGutJZaqC3rf1z5Eo+nbp/cduw687int
s/l9w/sn5wb4UTxWn4Gp1HZNiBlCPYdmViEORautJUbQP0Arrwjzi77PlTaF
OL3WwTxcwtMSgu+AnnJGWDQ+x5rvIG8OzNhm7ocGqCNvNVlA/XEj30xk8tNF
+fxDqDdZ2lmEVubvCXU9gv7ZjO+KkNv4lT1a1hCfyfqei5j7zvwYsAW9Q+VV
kSipkf+9nj2wu/uvAHyibHfjmAPUT6b8yMJ1GesZtxyB/TU8irBWzAf/SSfo
L6YxW4Q/vmqzvesK9b/Vt+ZiK5dC/Xl34HJTqjC8xSZa/pEn1FMXR4eigDvu
R757Q5xPjDUXcV57QG/vS7ChviFHMcpT01n59QryBxu6i5CcrNyIU+C/51Fh
83khix4lbQuB+vEAuwBkyMuU4hkGzPx3Ohovsv58SRcJ+Xz8XXnYkWbikX80
xI+wZhVj+l8dOsyv/+2D51ERjl0oPhMeD/ER+v4MLPwhloc96Z8ei6Abxn0v
aOJSQO/oTpUEdLHJcpEnHfyuUJ0sQKNlegOpmaCnSMlRgiwy5SuP5cB+ll7k
FKJfMcfic/Og/vMATyry8Wd+caIQ9DW1588idtffFqXFwFNSsSk402ZK63QZ
1N/7/bQQS5t1n6ypAH0ZM+YS3HatjEOhGvK3+mgU4GsX47c114B+DNvm+3dW
1nv2fB3EW+mOuaL/xB6TuxqAeeKzMhENn36JVjP4PxUmU4zM98uez2yF++/w
PLgEte3ifre1A/qlKnAXoGNbtlvpdwHvfP4zHvmsft5eTAY9Aa0zbnhuti1i
Vx/0Z/q6nIEvvs8Wuj0A7KY7X4Rz+vxr8RDUFxpuLcX0LY+v7h0Bbq3dfJ8+
qNKeeTgKeqIlIUm4O+/Us5Z3//Yjt98GiSSzM3J9gPy1GbV05B/xN8n+E8Hj
++xKi9CS78eTvZOQP1xkWoouuTR2CEzD/nwd1wpRgW2aoess+El+452CmO69
XHk7B/ki5lo3sNXNB57iixCv5lVMw32XL7H7LkO/I1RxRVhcRTxv8hvo1Y/n
leJgmb2KaBXybd46FuHvIhtDoevAvIKFqVibb+ze4gboO81H70Ml+0l/lX9D
PdXwt1S0lz4xKO4vxGnjyovQky0eh39Qim0y5/uMtVI0vGpWeWkbwePV28hF
6NSXCxoZVAQ7XXrDnIYi3wt/2kJDMAXFtwwuvNHHaHd9J3A1pXYavt6yQlu0
C1gDURfjqqqhWDoGguUMrqMyzJ5fIWbKBHrlCV+K8NPkmKZqZsifGGpOxWMR
TtdY9wIfOfJcHyE/44UH+wkmze15lI5iXc65NB8Avyqu/sXoj+1RVk4O8Htt
yKsM3bxHl/GEE+o/pm4+v6Sbi2d6uIHragpSEOeV3p6jfMDTUYnW2Eml2NTl
MLCHjkIm/iAT/mPkKDD/hkwJlhd18D0hCH6nD5WX4QQ+Ay4fYYg7nzMswlvZ
zhZPiEC8NKskCZvQ86qeOQFxTtVt7qhhy46xEAmYv1F+Nhvxrc1YLkgBc3pw
liKPLx3blKWh/tvsWBmaep8b/loG4pWCKYVIuT9QcB3B/OeSGuNRWosNSfMs
6Ld2dQVg6mrdK+kKUD/hFZiH7+afnqY8B/Gq4zvLcFsyx9NrKqDHzFJThgUi
KRkKz0O8pciyAHv7TSTuvAj8QOJxFP7i0ixlogF6uSo/IpGaXUZ71SWot3r5
pABl3fO9yXIFOPHt9zJEZ2j57b42wXFFP3TK0P0rl1806QIvauI81KUieeDQ
ddDnfcwZgITP7M+1uwHszfs7ARfy3P25xRDme8utVIxP0pYr+xlB/G34ZDmu
XqIO3m8K8fDzrcVYfkh3POkO+JsV9krCzdVpgiLmwGull4OQWtL6k0oL4APb
bhSgHm+VxnMPgc+SMsqR9qNwxt5H4I+b5UwZeqszfeOGNfSrYPqdhQzRyYxp
23/3W81eC0/yeq4+tof6Gb/N7zHzncPyfx0gLro/qwwvLh9+5e0I/u797CzH
1sN2b1mcIe72YXsB3sDNh+NdgVmtw17h58l7rQU9YH+10yKpaJvPHVKpJ9zn
V7xHS5G3VSmdwkvIJ1/MqUC79XbodfkCv+mcKELBsjrJev7A/gcpX6P9/KnL
E4HAG/a6cTiWbu2MZQjot6YoFmOeb+e8f4aBP8Wv8xU47U3ooEck5EtkHyrF
QqQpbqYYmO/xY6kUXJAi+TDmNTC/e3gQkvL1qDySAM9X4Zx4Iap6PLijKAn0
yp2rKtDZa/xXZFOhX4ZjRRlqkrONa0uHetOj7ZnowuGmuatZ0I9u7L4LJu9i
PfUhB+IvpR7m46srpu4W+aAnMKVZgUdGinvWCv/pB9eX45u12zlcSyD/VehI
Lp5IvWpOXw56lq5Rl/Bdv+SSiErgmFXeXLRg/X0LHybYUMiqsxw9vq6kkUcC
/+PuBRVo/WxI1Ol6yBc++jEfPTsy+bmpEfjz5GdXtGW3hLhWC/CATnsmfvHd
zWmsDVirSaoc0432d5h1wrxn9lypxAF1vPtXusFvdcDm9y1rurXp817IN2IU
CcDRrxryaQcgn7tsJQ1x2TL/CRkCf493FpahFH2T81wjwBWunZVIUKEoNGsU
/I6WxRSh/KPbPkm9h/kloqZDkSTDleP1H0B/T1NXCq5cTXRQn4C4caVOGZYb
+9b8Zgr4vMbJKtxYr8BsOgP5Cjx+xfh8RpDh0hdgm7eMUbjb/1OWwwKw6Tnd
ZHTF7sQPqmXw6+Z/tAy9ueGqFPgN7qe5X3gVMlDsCzi4Cv6uc58uQZ8EeN6l
rUO/lszwGGTG+FhA/CfozRbmJ+H5tTrbmt8QT9gnXoat3jHVn6c4QfC18vEq
3NKkX52x5QTcb5bzpZgjN6WUdjswH2NlIrYOW8o33wH5cWHNUajtuXRWGw3B
htjZrhhxmrmlCNARHCfn3lmFbDW74rzpT8C+a20rUMfJfVGzDASTMv/q5yBu
LqOQ83tAf5v+rDV+QpP1KoMF8rv9LfJx1/J3L9p9kB89mVmJeUdk3czZoL/J
La8q/F+dl2MbO+RHluYWYnJG3xOBQ6D3wlHVH/MHHXzszQX1N/TpMtBThzv3
Z3kgf/ZjcTnqMc6/c56f4PFSxehqxK/281bGEYI5Mce1UvRUXEmf9hjoDe+h
S0C97K+0zYWg/4nWrfH4yPY3mm3HQc/q3OFS7DjPfUFADPopvO+pxv0DFkre
4sBjr45VYAFcIjsrCfXfsocysFMKhfT5U8CXP+v7o0G/8+IZp2F/dU9RERK0
CxamRcBf1G9UI5eb746YywEz3JCtQsPKR3ja5MG/FqtMPhIWsToooAR+KbSf
nURu+6r2eisDz1/mz8cjFFRMs6rQr8jwThUWmdGgO68G8WS51Grs0RNBlaEO
fs8GWBTh0fJPFLSXIM5Ko/oKiyUI/bx7GeK9VXxZyNPb7nvrVZj/R/S+SvTO
qnbxqC7EVZicMBK/vnPW6xr4ZTOn3XyfKlydmNEHPeOnsjFo/Njrd6o3wU/e
snQKlmSeGU6/BXGXzMhy7PNLrI/GBPjbzCLGHyeedt69Dfq0q3zl+GRnU3Or
GdRH6b9Iwn7FDHVH74GfIL6GODQRc63K6z7037bEWIakPZJKZh7CvnQ/stQg
/wcLeapWcH/7HQYq0JT2ycx0a6hvNY9MRzKyLsk0dtA/c7E7DAce7nh91x7i
GiURJXh6N2tkqwP4Se6nrcFo/WbwUUfIZzThqcLB4+l+Xk7AQrwt2Xi25Zvn
jAuwnxTdKySXf8ZV1R38uShcLEahES+epb8AfwEG8xjNOffY0XhDv+zkw9VI
3vyA1V0fyCclhuShcC1Ti1Y/0GM7E+aMF6Rzbx8NAD+VErJFWJHnh6FXENQn
PO7BOHKnwvWZEIjL3pyrxovffK6qhsP+jlYP5ePR4XjtmEjQ82kJN0Jt1SU6
y9Gwn9MfxwpQaUK7rtJrqHfYehujpBfjehHxUK8T+h2jQIvv1+YT4flhFbxY
hJ5fotU/mwJ6C7cmnJGF5KEbIWng5+1YUR6+dkDcYCYD2OlXTDVWoVC9eSYb
+IBIfQ2WmLxhGJALHBBxqQRzt1ndmswHPXJEXiBmyH1hdKoI+g8IOGWj30HR
xr4lwMHPuqrQ7JN8kw9lwFVdfCQ0fKPJVKIS9N4MfyhFjfJvb3tVQzzt5/NI
VHB46c5YDXCm2dEMHEe3/a5oHcwbVDBXiX2X95u7N0D94Iw0Cf83KHzvTRPE
tWK2lWOzSgULodZ/z9OFwTh8NU73vnM7cO/1o6lI3v3+g4FOOL+rWsqVSMTc
5eFRMsEi93rNSIhDI8zyWS+cv6EmfQXaKZ71qKcf9CX37ExE6/tqrfiGwN/o
7Y5kPPV74LH9G/AzoUhdifs+zlp3voW4h64zCZOa/9pwvYM4Wcm7AudkMdvZ
jEPc+tGPRBwVcPRJ60dgjS3DScjTFtkfnAR/AaGLFcj2+uX/Hn2G8+wTjiMh
Yzkzh8YZ0FORmqlAmnzPnu6fA9YJ805CiDbw2f0F0HM9vPn9fWwxxbF2Cfw7
Y9ZKvK+/8jnLN5ivilxNwlTlZKe736G+nIuqEq/ETDpXr0H9wyrVJPzBZcOF
cQP2Zyp4Pxl13dntZvoL7mP+kReVqEqN1738D/g1d/tIQumipzx2UYoT8Uqm
bxUolFX9xa2tBFNo0ygnIrefRp7F2wl2KtH7k4Ifjdt50VCLw/4M5aqwQaOP
9w1aguNic6hqsVpG/Mt8OognLgdW4FOvSny274Z6vkyteMxv3e6rxwg8pOyZ
jpj1xv2y9wCfcD9djSjR91eUrASP29Jw1qIFbtqAq/sI5jTObCpHozsOBaaz
Qf6do9eiUdvciaDf7OCX0ng+C5f2qARfOgRxf/drGCeV3AhJ5gJ/Oj6HanFg
lFXoDx7w52PgXYafO70Iu8gP9d/EBIKxhWl0ePwR2MfMV+88dO18fsR3AWDJ
gcAapHy8KVJVCPJzPChqkS6VyhXycfD3Te5aMTIfa92lIwZxuq8bNvhp0YXm
MXHo993cqxT7vex0MpEimJSXrVOL44w0pL+cAr8FVo7VuOBUz7dHMlCvNJeR
hBsYLmevI6hXVQ7NRIOf+28/Pwt8M8a2Bk1jbU4qRYLzniodrEUbIcNvfM6B
/nuWsiJEd/9a0B5V0PPQf++ODyqOqkVegH5vZVfLsPABAyouddiPQk5CLZb7
+r4mVRP0e/VyqrBW6y174cuQvxITEIdN4j6JFV+FeX9RCOUhWzvTudO6UB9n
aEtCnuqfk+uuEaypPjNDQpF8d2+q3oD+c6HXN39//ZrdR74JfLbtfDjGfRa9
2kbgd3IgqXLze2Th5ZgJnL++15da/NHZUsnkDuTHt4VV4G+6X//M3gUWKL4Q
gLeJWJc9sgDWG+UtQqw7Vh+tPwA/NcXmtejIO7tjzx8RLPKKSYaEpIt/TGy3
hvxGd5SF1HwcYn1sYb5vHx1TsIHxb5099uDnSitfDbaUfs4Y6QDnzzIxUotd
GCnbOR1hP8KjsSU4eNrFLdUJ9Do80xxQSs02JOwK+ekeauWoLNRjrcgd5vGV
EqhDbfep8097gr9oQeVqNKrobV7n/c/PkHosWjhAx6vqCxze/jsfU3zzHet+
BfvmX9esxYxtu8O0A6G/hcE6CXPHB2iOBUO+sJZwHhZ/sofWJAzmcRqMT0Tn
NELqZyOgPmbiG0a6/HufPYqG/oFf5eqQ+e9wyfVYyKeRD9n8futnW3KMB73p
z3022C8zOn17EvBgUkk5jnPhMPZJgf20c76owwV6cex70sHPIqtnNW4Q4R6M
yIT89HteUXhwR9IrzhyIM7MYFqLpd3yqqXmwn13GU5v3tTh1i3Ah+Is3+0pC
dL5Hq4qKwc+XNoZsxGGSaXO6DPT8+trT8PHTQsfrKiC+N8aVhOWYcqdVqkF/
NkurDmvNiCR01wCHVqkUYxNSwXXtOsg//6Q2GNmGibOMNUD/FSXGauT5oKTL
uJngJRP55ToUqXTSc7YV+h2J+lGBstgrzj7qAFbfw/gc4W+nf651AZtaHC/D
8R2lRpd74Hw5GwvrsFvyibacPuDyA1UkfNsxV5R2EPIfbJPNwqo6xyJMh8HP
gaSIVCQokkpROwLP7wD7cRKip+ExYx+D58dT/08dWv4Q2233HvTuFv8tR/0V
bFJ9H/69n0/aOqLSoNBY4Qk4j5vi/KU40oKJynsK4gYxNXX4qZLf/clp2K94
j1gtvslBOyD3BeIfou1ysPyau0z0POxry2HZFMRLpkxaW4T46UBBEtqR/mzn
5a+gT74oWY9mnX9Y5ayAf45r1hWo85rNCM0a5Kd51j9HeSeWz5r+AD2ODadS
HEh3P530E+7bf0y/6rDN5DQD+x9gGYmztVgXmzyxo5Ag6mmeX8vG0mHj73u3
ECyXWWqUhg5a6isLb5eA8wrLJiEK1eEcrx3AGvN69egT1xXWSRrgcu2IctS0
0f1Mjg70ND9ZX0BpfRcmo+gJdhrtu16OX2Y1q60xEEzqGrxfjx+4KxRp7QFm
3nhHwpoGNQdyWKCeO7YuDZ+QOu1Ksw84IoImB7EylM6asBHMGcaVUIt+TItp
kdgJjrt4QakejdbmlB84RPC4gsixUoQjBbjsuKCeYXX5JY5/nOLZywN++tZ9
qrCbGveSED/oyTJ/rse3+WJ1vI5AfpZ+UQ1W/bO/ZkIAuOS3ZBwWHArhlxOC
eb9t9ypEu/MY/aKOE8xQN/O2Dn319P2+Kgr9d7tW1qH+WzQ3tMSB12j6N79H
pd0bsiVB75iwbAKO3EMpSHPq337f6JDw07mnQSanYf+ukywN+Gbj+kbNGdjP
06j+Siwfa210QA7q1Uhj/2E+u6VWW3nQT/huXI6oNS1EexUJ1rwUtL55X45M
hwspEyxS66hdizopTSi8VEH/yR7pNJQ38v7OxAXYhzGXfx4OLLzeLasO/aJb
PDbvi8+QZJQm9NNZ96zHuqaXY1e1IM559kUxPo26t2tdhXgAu0sU4th74X62
DvhpypurQRRLTf3U1wj276t/1oA+tcjLmOhDfjn7nWrUFI8Tawz+1Zc8eYHS
/pPeeeAW+LkkwbV5Xy6XWNkaw36yjBUb8ANBsZEeU8jnCy2uxTZrbBs3zYA3
evMS8dO6rWwL5sBpyZnFyM137tTT+zDvi1nxBvRSd0CP1hL8CfcH1qJAHmwf
bgXzJB/tjUeRCykR/DbAjxTrS3B8+avyIjvQc5ewasBpbk/eyP8Hem/4ztXi
XI1bP8hPId5rR4rBJWzn9998DvUNH1EZwpNip+adgbPelzagxrwDeg5ucF8W
GwZIqMNhmz3NC5i3wp82FPWfmw8P8wK9PSz7KvBbxsEyPh+43297fjXgj6N4
uNAP/I9vP0HCM6mp62cDID/8prMnXrLy30cOAr1ny5u/t9fP2J80CIV+Oxcl
GtFfaiPduXDwH/tfHkZU/eef/BcF9XLvRk8i+tcnwqljwe/n8AyMWczZy0Lj
4PlwVtNpxOwS24d5E0F/x4BVFeahWFgrSIb67zJcL5FA++Des2lw//JtNr+/
xUJrpLozIE4xqNmITt1K07mRDfUrU7HlSE4wwO5LLsRvXjWMwSpr9mH2BTBv
Rvbm94dGnVHpjuJ/97F2VyPW9r0wFFIK+aal3CX4hq74Gk8FzGNq8yAVmfAc
3FtQRTDZ9JZQPbJY2C4lVwP377OWUwN6XL6g3VUL9ylieSYf/ec2ZKvfAPVt
Ri/ysIsGKXS2CfpTkrUbsBdbesmTVsinFImux/6TAYNUHdC/rWghHYfl/bca
3AXsdim+GMU6GLPy9EB/SouLjSjlnJpkfh/Es11V61A2o4S27CDMP+GyGo2K
Rg/adg4Dz050VOCqVKrQ62+hv/zb2UZcb7VYPDMG8RDOxyTcdmZ4wG783/vM
buYe7qGu/b79E9wHl9SBGjTcl84SPAnPO5fFniY0HhsowT0N+TdkWarQ57sO
V/NmgQudIsPxgriJDZoHfdN++Tq8+lctpGMRzpuCP6cR/26TKL72Ffb/9dnm
vreFcgxMr0B9f8P2TLTz1o7vtmuQT2kn24CYBJeYt28QnPetK6oB7V8bFg/6
BfXf/Q/nIM662itcf2Hfe8L/FuHDvhnWuZSShP9L+8obsbBuUPCZbQQb+jNX
1mFJnqdF7VQEU7yad4jCZxZM+vVoCCZVZ+tWIdZK5YSqnVB/dbdZE1p4IWB5
iJ7gPFPOnFrUdGUXcmGAeqYUkxAUy7W0c5KJYDnFe+OV2Hah940yC9TfVXrW
hNUri1Mz9hIcV3DqWy3m9wy32cUG9dHt6mH4zxUHBUt26J/YX1OJBrkMGPs4
wO9DhtAmlLMg916CC+q5nzDVIY9KnuxwHqg/xmQYhgw8qRx+8kH9/do/lVjy
6oyKwRHoX5hd0oTpuTtYawUI5mw0oK/DUws5EzxCUN/gVRGCayoDCjyOQz/O
c/5VKNzT2mlGlGCn+ZixJmR5VUddTZxgsnv051qkwi3NnisJ9WY8ioGIc5F9
lvEU5NO1ulTj9cq/pdanQU+VibYZkz0/ug+dAf/69qG1OO1q42VpOah3E3rl
hZ2407hi5MGv0p72ze/ZRe/Fv4oELwnaizcjkar71UbKMJ/ovr21iNpL82Wj
KtR3nU20QeNXT+gdUYN+t9jESLiMm/XwS3XQcza50oz9F9dX5jWhHt+9RcJm
VW/rNC9DvaHBHkt01gv7F14lWOQRH08tYtOON2DVhXk4ttxrRl+53QTtr0F+
H9Xm93bb4u2Nt/rAAmFtfjihSrUF3YT+T7ZK1OH/vARD42/BvJEK5s1YS3u3
yTYT6D+rklSFBXi+it65DfqJU/HRaMtS/99WM4hreOvUo5Gq0k7BewRrhkoo
NaMCr8ioV/dhnli/1nLkrf3s7teHUD8TPpaMjXgMpa5aQb3qS9cGLL0kv73M
GvhDxlwTZqrm62Ozg/vJ8FSjBM96Ucc/s4d6tQ/KOahe+8uDcQfgKOq0RhTN
0yWj4AjzyIxqNSHrpTzaFCeIf9svXIDUqoOGqV1Bb6tSeSHm9bZNuecO/qzD
i5vwL209664XwJ9PmzTifh4ZeVFvqF/dk5eBs5Y4GIJ9YD+5JoFlyK2a8t2q
H9wvI1JIM9L3nsjUC4D+YerMDUhcp9m+Kgj2fcVS8TWi481QPhQK87V/D6zG
E0s+LC7h//wFibTgquqHnyYi4b7TRmvU4WBvrXzlGKjX1RmyxxY6Es8zXgOz
ayvVIiXefRd3JUC97leLFlQ038hlkgRxTXldEuItfbxakQKMj3zywcFOXO2M
6dC/xe5zHd52vvu1WSbMK89o1oKt9zyzrsmG+GHLqmr8aVRAlTUP6q/S7nmN
tFKGD94vgH7ZTGoNqO6hx9f6IvDrdPB4CxI7Jd7MVgp6QicOV6D4LR+jHpVD
/ovfLWmYoeOVZUsl7IfhdHYjdgo5o3QIQ/3ul3nNeMngy35bEuSXpIwU45tH
IhY66kAvhe1ePupaPlfP0wjvM2Om700IVa6E/ddMsH+Nw+jm+8YtwaKnFfTy
y3vz0EF1zbNHOsD/Wee6Euyz9w/L8y44/8Xfu1vwr/HM2QEy6Dv1RTdiiwy9
GsE+yJ+p3JWC3z7eEew6AH6P7ZCvQufPFJuNDEH+N75PLaiCyviM6Aj0W4yf
rEcCZAYmz1Gof32ULhBFROCpd+/+PS+3PpIwtbFFpcQH2G8Hy+VW/ESQzd/n
07/3A3tSLZ7+3mzyaRLq18LU3JFOjc0p6WmYzznerR41efLQB8zCfVumUWhF
klo9Hz/PQb1va0I1SjnwvBQtQr/ajbIkzDIp6BOy/M+P2ubfT7ecEcO5bxAP
Sg9qwSt2nhIKq7APn1NtJdjkrCRt5Drwa0ejAtRHO/FuaQP2HXt5qhnJ9wcU
Kv+G5/ui/rHN5ztG1jP2L+jnF0RnI+478/rfKaUIPwWrthU4QCRKVG0bwYbO
BpdaMcWGClUiFcFxDdVLDdiyfnXkBzXBFKs3D4XhcZ+kXM2dBDM06B+sRZra
Wm6pu0CvL2ujFZEOUej92U2wZe3acC06PpMtdJUJ6jkZTvrj2ILrW7KYIX+3
YUIDpn9KM7RlL8FOCTMlrdhRqTRTbz/EKe0qKvECvalT3gGC5a6s52Uhg2Gm
qzs4CPY/s/VlM+qMJx014CR4acH6VguSuffgTxE3zPO2koP4/8DZ+3byQf1Z
lswyzP6nNdXoMPSLzwxtxS+b7Z6WH4X8lktvGvGGP98lBkHwe1VPPRqbX+vj
uyMM9RcWxWrRCI/zRrUIweS/j5zakOq8cDfzCdjXtu9761BZyWjiPQmoT3Zv
D8JHnLyf1EnBPC8KrBpx1enk7WrSEGeyDmvFmms1gQMy4Cdp3bAQTxSMHLop
C36q5Rsr0ZMH37Omz0L/6Y8xbYhOgEHaShH2G+DyoA7FTQo0/zwHevnSqvFY
PF7pirsqweNFnVXNuEXf8AO9GvR/Hv2wBevvc3gQrg75Ez94UvFSX8hPrkvg
X2jSoxa5vcrzzLwM9THcf9rQvgvtLBLa4G9RYxtGWVRTCVgX6plzfuRjuToK
EZXr4K/x06dW3P/sQHXPDdCjtOFpwmanJM9fN4R8hnBKG/xrRXNowgj0Lt2y
aET+efdMHpgSnDcwbtiGeC08ltfuQL6AxLkiVHY43tHZHJjrWF4VVvtUuXPn
fdhPYdzldjweOxge/BDiViaKddj62jIfhxX4Wde7nYKoWekKU62B1Vu3tKLo
Hn45UTvILy7YfB+K+J7trLAHP4wNUTGoQUX/muJTmN9tdmzz9+M2u8+djtBv
Q0ezHc/VBFjrOEN+lfqvMuzkkEX5wZVgzm3DIuWIWarZz9wD4o1fbNtR+tcP
B1Y84b5O6YzWI5TzK+3ZS+hP26cbh3vv7pXc4Qf1umm1LZu/58Xq/f2BL3Gw
tuKNcTVNtiDQo/82nYD9ou+MJYYQLLJlOrIeceu6mAuFg7+K4s52VLInZq0k
EurF7/8qR+e7S93kYmB+yu7L5fiddy9j22vgYx8/tGOrc/OxlxPgvLaML9Vj
qi3UgmNJ0I+uyj8BRVZzl99OhfvWUvSoFQnbnzm3lA73yXaIthXViev22WfB
PC+XdGKQ9pKV4dZc0K/RfdeAZzN9533yIZ/i6nI7dryT9h9rEbBVMFMpZuKp
3xFXAv6bluU334/vxoKPlsN8ZjmeHUg6cp2rsBL8nHa/VYe6ru7JlcHQ79VB
s2xsxCgs00T613/kaxte7VBp1agHPW7Bzfvv7Wms/aYR4ktXXt7GHIqOn4xa
QC/bz2zz/fg33HKuDfyysF1sR+cqC3/bdEL8hElyLhqx7fL+2w33QSboUh1+
IDaz16sXeMfzxQ68ZWFrMtMAzBMV+Koah6ZziEUPQdzrkmgZEjA9VcM3Au/L
c1apHegVt/qG6yjk+66/b0Qr740kPr4Df4HPhDyxXoydpdwHqM+vHGzG+JpP
ZuwniFfWM3dgnn3xU78mwe9N5qli7DlQzHV9Gs5vPfVoNZoPbNMvn4W4xQ2G
TqSl+T5s7zzBmh9f3GhEpbtWem0WQS97y2AIZm+npu9fhnm3jvW0YGfPg6pi
K3B/WoIn2vGUkpib/yro7VagLcQXtirXLKyDPzwkQ0J5pOsbaj+hvrDHpxMx
O1pKZP6GecNt9zQg+9PuljQUJ4m4h/twIn63HpF5ZwvBFLtET7Vh+ZKcqcZt
BMtJDIu149TH9Vy8OyC/clU+C9OJDuu70BC8xHEtpg49WpgLG99JsP+G3PtO
NJhJ2YfoIV/z6HgtOn2XlT6GgWCS8oJ0Ho7jP6b6k4lgQ/2YgXa8fULWTY8F
uLurqxWbx1+pKd0LflRorKNxt8HdDRY2gvN+Br9sROLsjhLW7ASL/LVq7kQR
bwItezkgf71JrBr9CU3NFOEC/8m75Mqw8ZWqKT8egjn15PU6cQtjD9c8H+TP
MZo1Y6HuSf0LR4Cfiex2RoE+G2HpAtBvOr2sBa2p7u7bIQRxsTpyB9LfwUt/
+zjBcVK1dEWotuGkaoMo9PN72EjC/C4X3bjFYf6LuVJd2FvWqMZJEua/G5pe
jxd/2W68Owlx/sMeGehKxUuJM6eBS1bz21GZXZxl1BnYJ9XTuDZ0UKI484cs
6G+Ra45DLl9bp3TkIb+6O6MRf859x1WiCPuL1DjahdXuf9NnVoa4d1tzFc4X
oA63UgW/zgq7KhDrNHsf+QLk12du7UIOyaL0x9Wh37hxw+bvfaNzqr6aMC+V
lGcYVuK87vZFC/LF9uu24YyxhzWqV4HPD5t34N1RbhupOpDvWhSaja11IySo
rsH90F4uq0dvWHIsTfQJJvv7vulCqK8us84A8kU1+kgo0X9oivMW7EcrlrIE
U6vPcT03hvOS2D3Xie/vpLwxZgr5rLf0W3BvC0v4aTNgtjR9VyTlIdAXYQ77
iQof3/x7oiBLv24B/rSK1DsRBeUVVe2HkN98UzAfmWIzt6JHEN/Zp1qPF+7P
2ilZQz93vwPd+MlBi3uDtqA3cvxsBabsnDe4Yw/7KeZxr0XeTx9qrTtA/XPH
u92IWXBZycsR9p2WJoxRzFurU2zOUK9KU1CD+V+uCGa6wnzUzQHdOE/allPG
A/LbR9tJWHp2bU+n5799vwupQvUR9jsMXgIXG8V1IzXVnxsLvuBvJlmlDg2u
P1147g/6nM2d5dgw7c8HhiDQf/AgphvP6DgNxIdAfb+DZz222rGlVSwc8jMj
rpSiXyWuVfWRwFUpvt3I4/b2vCsxwBn6IQ1oN+uLxMnX4I8+R7YYhzdSh9km
gP7eB0+7MbeNt/eOZPDjy2PeiDN56RzDU/89r2UBhUi83/fR0QyCxxcc7ncj
7LrbtCKLYEsBN8YmpHwiQPdCLuRHqGoXYPJHJrXR/H/PA/XdbnwtMFj2fhHo
m3/1bsKfzrKe+FMC/c10n+Yji+Uw/lfl8HzmCFh2o9W4/WycVXAeL6LeNaHn
mlG78jHotb3iyMfUFAcp5WtB7/Ubz24cmBu70lsP/R982NKM2W9yThs3gd8u
5eP5KJk+4e1KC8QvzOZ2I2HM0+3eDpz0H2UzKrufXMfaBfoiyxX5+OzBwyWp
ZKgXtJ/qxm0daekn+6Dfe/qOJnzlqUBM6wA8fxGJFQVo7FiW/7VhuE+eh5jI
6PZbIbcvI+D/4sbdJrTknWv3dAz0U26LFmF7adF7u8aBT/2QIuMtswUGsR8h
n2TW34h9IsS1jk9C3Ch2XwliUS1RIn2G5032nSEZxa5Lnbo0C+cbcom2ER1J
Kxf8OAfzHP9iV4YLdE5zPl4Ef7LmL8j49I7qPdu+gp4S/d963FCCdoSsQPwu
hWolUr9N2uBbI5jhXVQmGQ2zyC+U/IDzQGkVdehWY/0H5V9wXvIxLhjPWisN
DP+BfpbqzWRszdvccpfyFDxvLcdq8Z8+laqNrQTn1Q5ur0UvXNtyX1JBPCqs
lYwYTqglstMQHDeSmINR5MfO0OydBJNaTpHrME+ghjeih/ode5vIOOtsz7Nu
BoiLNsZXYMllrUeGewge/6vxqQHVxPWbLLMQPG32fNP/uBrXTdt90E9VZXsp
ovhxX+8nG8FOwzJ7mjBXcsVlp4MEL3GIp5Kx/KUd6ts5QX+6R7sYG/++rOLN
DVw1NNOE3NLj5HfzQb2BShQZJV+dlwk+DPpBLuKFqIlSWmq/AMRD2Keb8eds
D9FYQYIpsLUTGVNf6zvGcxzieiSfPHyEipM/TZRgTb+xHa1ItcCCU0icYIbH
89pkZG5QzlYgCf3tD1ZmIG9aKhapUwTL6UaqtuHMEq3dVadBT4VtLxl3GL2m
OYuAee9JJeJ5+rmtTXIEk8f74toRfeXJP+cVCPbniHHqRsfvuK93K4E/q32G
IUhzT+/XKyrQ74sjdSd+VMMx/+Y88O1DoV048N69zwYXId+s/qYhLthb9uGT
BszPYP6wC/XVbxs104J+sTImnWjl4aXB+SuQL11pHoSZ2WPJVjqQf+ddWzeW
aJltW9MDfYGgN+1Y21qq8ak+5KuL/peM7DjdaihvwvkaG7iRUXgHudzjFuTT
ia22ovInB4t2msA+7KoY8/EIr3mO/23Yn3/Urh78k1ySxnIX7pcrS/Lm++DZ
1sTIe7AfB422UiRzVDPm0AOChyXHbHrQjYHosCRL0N/RP9mAHJ1nAo4+Bv2R
LX0YxwpJ+uTYQDz6XUEPrnnj4nHiCegZ7c+qxePu3U5l/0H+sYT1OkQpxu5w
5hnBKkH3SnoQ9zszm7rnELft/lGJFLyLHyq7gF7oilsTNpHcYt7hBuczqW3X
g90/qptcegH6yS2JhTjFL8pg0Avuy4UbX1tRk/S07nUfgvdJX5ojo89T4pfH
/UD/y8MvSYg6yPmiaQDsU9aIpxMfke1Sng0i2NDYeTsZq35hk38YCnFNynQD
bB52R2YlnGCRpK65bvRSoUjSPgr8ZbU/7URZixSif2IgP7pIMgl3Rl085hoH
zydb4t4evKAcyUedCPk5l1jb8O6VqUO+yZDfv0JdjETiTrAxpRH8hN33bQ/S
VHNiDssg2DI6d6wRPVrvoGfPhnxPk60kHJi0nyY+F86z9pB4Ly7QvL2VvwDi
9mY9JNz3q+B3RhHs49lXnc3v+7S/a8dLCaaOvEvbi6a0z8V5lUM+VdfRSjS8
zVflUyXcJ/nAU024raBvSQbDfeTwlOzFlYZsEaEk8L/tFifGWfS3zi7VAU+m
72tEsVWpM6qN4Jfmh04v8jdfCEhshrh48RUSctknIf27FfZr0sDVgK2bHD5q
d8A+d+lZ9uLb1nXeeV1wnqJnr9diXW6aE7Q98LxEDF6qR6pkjbfGfTCvhY1r
L5J2DHWtHoD8A6lCdUhQcOzY3mE4X/+EkjrMMcLTbzkC+tbHA3sxg6f507ZR
mIfvQlMd3iKZz8v7HvazcudcHVr5tNbx7APBZWws8Zv7CUA2Q5/A/+C8SD0a
knU/KDoFHHmBoQ63zLc3ek/DfaT6L7cXV0QxPZiYBf2D3rfqcZaqHiuah/0q
fqepQ7Frr3HYIsGe3tM1m/tJnrq9vAzv15T7pvXI5bLQ7gsrkB/KJFeHrSmt
S5NWgb1dyb3YNLfi5p91eF7rjwvWY+0blNS6PyEu455Uh1R2quTl/4bzFZYb
39xPuZ/uTgppIk5RVbe5nzsDFKZbCCbRrCnWYw4W9nS8jWBLO+mFzf3UG13a
t4PgOE6uA5v7eZT+4xENwXLlC0wN6BvHUnz7ToLLsql+9KKJDsnzfPSQH/BC
uhYN/vfsqyMDwZwaJLZG3HKkIXKYCeJiIb839zNIqyDGQrCTM2k/CWe5Xfry
ci+wXM2FJhQrFh40uR/yu2R+bu5n/N1pWXaCx+/fdKhGzn58E+EcoC8sltOM
rWQsfL5yErzkRz/Xi01mC8TVeGC+3bfFKrB2+I/RZD6CRX7XibUilXNy7n8P
Q34Cb8fmflY8hPQEQI/S+XoJEkzoHCgQhH11zY+1YQ5NZke647Af5syQXrz7
zzX+26Kwj5Zvy/mYIiu+q+YEwQwLAREd6KvetO1+SdBzNTi3uZ8dxw89Pgl+
0mSW0tFgsU1zhzTUR4+ZdeEW46qH/GfAz93M/h5czrh1n5Ms9P8wHxKDM2pU
SW/OEqxJsYuNjKLv+5udUIR84QeoB/kdGGLwPQf5JTNi1sip9WD5lArE9T1+
k7GVncktuQuwP8ZRBzI25sukibwI+TLUmSHov0YDc35N8JOg9N/mvk2Z2gu0
YB4O77NtKGV70zHZq1Bf7ORKwlXJ9j7tOgTnUYRF9uFeJaF5nWtwfrrkP5V4
enL84oQ+xHVtzDvQH/fgHMubBFM/daDrRcz8Krt/34L+2w6KPcICTT8feplA
/gXRi71Y7nYumeUOwYZvD+Vv/r2jMhZNuAv6jsvlGN1PYQ0UtgC9/s7WPuR2
ru1rxQPY90OryWoUOfXssvIjmId69kwHzvMQLep7DPuT8lHoxU38k8yGttBf
f/7TfTTaFG4z94Tg6e0zNr3o6221wScOcN6BTH7tiHoHhdR2R/BDp8VNwodS
C8MCnEC/dm26D0sq31k/6Ap6OvdyKrHaZza9DHdg8sfnncjoRVe5pCf4TRDY
3oueHHZhq/eG+HRrUDD2a5Zw0PAl2N/wC1UfTroz8/btK4jLaXW04oodMTJm
gTAf+cJ8HepJ1YxZCYZ5Tt5a70PTytv+OIVB/r50+WL053Opwa5I4C/3WMmY
2fNeTUQ05O9QEO3BAkcOcfK/Bv9Ntd6ZSK6l16kgnmDP8RcNfUjbzOMDSoK4
otvBJmRBLS3fngIcvte2GbumzSfopMN5cA8m9+FIlfitE5nQ78pVxyScN33F
xDKHYJUHAoM9qMmTuvFXHszH/m1bNxo9UsXnVfhvX0sJFfhry0MPlhKIKwRf
78fUd3k+x5fB80Jv/KMGc9AMKQtXwnlQtV3qRBLp3mkV1cCR27x6N38fIhpl
EugJf/4cio1mlu/21YFfYfuoPvzEK7ntZiPcX7/oXa3Y76jesblmeL/sjHjW
iJJa6XyetBEcHssr2o8q7pLmtnWCntUGVxYi01hfDOgGvZG4hh78Of1wzsFe
eL40blOT8R/Vt/QZ/aD32Zi7AjHP+j2UHII4xcf0fiTgLU+uewN6z5jia5Cc
wKqIxiiw4d/N51+7LT3g7TuCyY/ynXuxhfmNr3c+wH6ff6RIRC60jJdXPsH5
/XEW70fhGQ2FTlOgb5N2vBnlnH/CvGsG8i3rPVtww+wxm4gvkB8YSt+PR7zf
D/AtQL8Xc5lheFkgSLJgCfr59O7tQ8Mdckp7vsF+blKZdSPSg4XL1t9h3usn
LpThVIZoo4E1qI/gbe3HfgWqjyQ3oB8Dk1oTtrmy9jzsF9xP8zGRZqS/muS3
/gfyqSYa+pFCuFaMHuVp4vkZZmcqQQLSFFkVWwkmRWqrkDHjaHbFASqCOfkN
Znrx+rPrrU+pCaawrZj3RO8P0QyP0UK9xN/wPtRUWzKFdkH+Mw2PLpRtbPL9
9W7QU6wrrcLB25m2UTIBl7byD2CH1BomI2bI1yra2YCNVO9z1bMSLHdPc28b
2vy+E+HdT3De/GxiPxLxbUHuB6B/VdChbLT3uO3FqYME+3Pewj34D5lHX5mT
4PHwM6s9eNKqxzyNG/pxfdLJQB3Mz+1p+CBuxpDSj4pKBD3ND0Nc+WZYG4rS
HQltPwrzDNqyNmCXjRfJgoIEx+1Yvj6AzaMlinyFIZ8/4m8lvoQ+1S2IgL8h
paRudHLcv0fjBMFHnHbH9qFDLmg8TwL8ugUZP8JUvHMLjCdhPsG/7/vwfGPE
bytp0E9gnOvC/XeU6fplwJ8GBQmjSprvbBKyBDsJfQ4YQAmZCUdDzxJsmZof
WIe8LmqeXFOA/NWzqR3YcvH3Od1zoF9a7t2PdQIyr5arQP/X7Z+jMDqhZ8J2
AfwzyEj3If4BqscOF2Feja0NZLTLrsh5VAPy7aPfluGVfUb+Z7RgPvN9iQN4
tGL369grUE++wN2I6/Wrs/9qE8yAKH62oYw/5lWGegSnvbOnHkABcfvaa6+D
n8X20mT0RL7pDbcBnLdXwOb3xs2Jx9OuhgSL5Htq9eBzHlxrE0Ywb+/CpxIk
dKR7+zlTmI/JhTSAmNueMqfegf5qx3sa0c97AjzU5qAfce97G/64a1j0rgXB
ZK73YgO4Ndddru0BzOOq/2vz/XfphMaxR1Bv1i3bh8K/jd/weQz6WOVUD3oe
4mcxbwP9L2tsL8e3pWQc1J/A/F341wBWfzPjlfsf6J2/F9KAJRzCwhmeAbMY
BHUg9oNKqY+ew3xfGegH0Naar8W9zqB3xkwpDM0axjWccIN+7Xe29+OeLep9
wR5wf/lemZBxWdLPD9894Txmjt+oQZIK1mvnX0J+lrrcICr+MEcX5wtxIROZ
eiTuZMr9/RXoPzjh1YkLON5JnQ+E+YazRQawSLX2xdfB4O9Ikkg0zr3ebbQS
Cvn7Bcb6kPCG8hPVCIKp38+d6UFZ4STf2CjYp3oTTQUWkDqV+C0G+sU3aw3i
9IH8MpU4uK8Xqzwa8RFrga6YBIhXnN7ZgVKYEj99TYL7/9olbgDx5h/4oZwK
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
CQ3b29B/lH1bh/8DcVYkgw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{
    InsetBox[
     FormBox["\"b=1\"", TraditionalForm], {15, 3}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"% diff.\"", TraditionalForm]},
  PlotRange->{{0., 30.}, {-4, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.5693212846120825`*^9, 3.569321341670163*^9}, {
   3.5693246741980467`*^9, 3.569324678459053*^9}, 3.5693254300401115`*^9, 
   3.569755924228166*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Off", "[", 
  StyleBox[
   RowBox[{
    RowBox[{"NIntegrate", "::", "slwcon"}], ",", 
    RowBox[{"NIntegrate", "::", "ncvb"}]}], "MessageName"], 
  StyleBox["]", "MessageName"]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".01", ",", "Ns"}],
     "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".02", ",", "Ns"}],
     "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".05", ",", "Ns"}],
     "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".1", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".2", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".3", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".4", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", ".5", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", "1", ",", "Ns"}], 
    "]"}], ",", 
   RowBox[{"Hsol", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "+", "0.1"}]], "]"}], ",", "om0", ",", "2", ",", "Ns"}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.5697601642633066`*^9, 3.569760207549368*^9}, 
   3.5697602478034244`*^9, {3.569760466114732*^9, 3.5697604827467546`*^9}, {
   3.569760522722811*^9, 3.5697605308628225`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0381622804981858`", ",", "1.0373486202727786`", ",", 
   "1.0349324264747257`", ",", "1.0309745000243555`", ",", 
   "1.0235486386094483`", ",", "1.0177137054060885`", ",", 
   "1.0134074013540568`", ",", "1.0101148102591164`", ",", 
   "0.9987998346019373`", ",", "0.9752107643735489`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5697604874777613`*^9, 3.5697605315238237`*^9, 3.5698299372103004`*^9, 
   3.570269310858899*^9, {3.570518117260062*^9, 3.570518136353089*^9}, 
   3.570518169938136*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testdatH", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"100", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Happrox", "[", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  FractionBox["1", 
                   RowBox[{"1", "+", "z"}]], "]"}], ",", "b", ",", "0.24"}], 
                "]"}], "/", 
               RowBox[{"Hsol", "[", 
                RowBox[{
                 RowBox[{"Log", "[", 
                  FractionBox["1", 
                   RowBox[{"1", "+", "z"}]], "]"}], ",", "om0", ",", "b", ",",
                  "Ns"}], "]"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", "0", ",", "30"}], "}"}]}], "]"}], "/", "30"}], "//",
         "Abs"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"{", 
        RowBox[{
        "0.01", ",", "0.02", ",", "0.05", ",", "0.1", ",", "0.2", ",", "0.3", 
         ",", "0.4", ",", "0.5", ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5697562478646216`*^9, 3.569756280719668*^9}, {
  3.5697563124247127`*^9, 3.5697564043668423`*^9}, {3.569756516143999*^9, 
  3.5697565224450083`*^9}, {3.5697566085271297`*^9, 3.569756613718137*^9}, {
  3.5697604950087724`*^9, 3.569760495508773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl2", "=", 
  RowBox[{"ListLogLogPlot", "[", 
   RowBox[{"testdatH", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Black"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<b\>\"", ",", "\"\<<% error(b)>\>\""}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.09", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "15"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.09", ",", "2"}], "}"}]}], "}"}], "//", "Log"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.111", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "15"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.111", ",", "2"}], "}"}]}], "}"}], "//", "Log"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dotted", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.001", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "5"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "5"}]}]}], "}"}]}], "}"}], "//", "Log"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(f\), \(1\)]\)CDM\>\"", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"{", 
           RowBox[{"0.03", ",", "0.1"}], "}"}], "]"}]}], "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.569756628610158*^9, 3.5697566757772245`*^9}, {
  3.5697567145122786`*^9, 3.56975671550228*^9}, {3.5697568746065044`*^9, 
  3.5697570687667775`*^9}, {3.569760545184843*^9, 3.569760552645853*^9}, {
  3.5698299553433266`*^9, 3.569829976347356*^9}, {3.5705181808001513`*^9, 
  3.570518181310152*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[0.005], 
    LineBox[{{-4.605170185988091, -20.85209888383472}, {-3.912023005428146, \
-19.95233599205463}, {-2.995732273553991, -16.82012411249889}, \
{-2.3025850929940455`, -12.607215747274658`}, {-1.6094379124341003`, \
-9.135776598215157}, {-1.2039728043259361`, -7.864661192321409}, \
{-0.916290731874155, -9.064738424248942}, {-0.6931471805599453, \
-6.615672433957789}, {0., -3.410664383300093}, {
     0.6931471805599453, -1.5963000604700304`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-4.605170185988091, -20.85209888383472},
  BaseStyle->{FontSize -> 18, FontFamily -> "Times"},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  Epilog->{{
     Dashing[{Small, Small}], 
     Thickness[0.003], 
     LineBox[
      NCache[{{-2.4079456086518722`, -
         Log[1000000000000000]}, {-2.4079456086518722`, 
         Log[
         2]}}, {{-2.4079456086518722`, -34.538776394910684`}, \
{-2.4079456086518722`, 0.6931471805599453}}]]}, {
     Dashing[{Small, Small}], 
     Thickness[0.003], 
     LineBox[
      NCache[{{-2.198225077669803, -
         Log[1000000000000000]}, {-2.198225077669803, 
         Log[
         2]}}, {{-2.198225077669803, -34.538776394910684`}, \
{-2.198225077669803, 0.6931471805599453}}]]}, {
     Dashing[{0, Small}], 
     Thickness[0.003], 
     LineBox[
      NCache[{{-6.907755278982137, -Log[100000]}, {
         Log[10], -
         Log[100000]}}, {{-6.907755278982137, -11.512925464970229`}, {
       2.302585092994046, -11.512925464970229`}}]]}, 
    InsetBox[
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)CDM\"", 
      TraditionalForm], {-3.506557897319982, -2.3025850929940455`}]},
  Frame->True,
  FrameLabel->{
    FormBox["\"b\"", TraditionalForm], 
    FormBox["\"<% error(b)>\"", TraditionalForm]},
  FrameTicks->{{{{-20.72326583694641, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {-18.238359187158412`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.58777162101726, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.196905312330248`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.916603347176093`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.69791414621126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.518573217555446`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.36655701025682, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.234629467214273`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.633189001170319`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.98260143502917, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.591735126342158`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.311433161188, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.09274396022317, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.913403031567354`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.761386824268728`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.629459281226179`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.028018815182229, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.377431249041079, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.986564940354067, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.706262975199909, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.487573774235079, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.308232845579262, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.156216638280637, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.024289095238088, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.422848629194137, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.7722610630529876`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.3813947543659757`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.101092789211817, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.882403588246988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.703062659591171, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.551046452292545, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.419118909249997, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-20.72326583694641, 
       FormBox["\"\"", TraditionalForm]}, {-16.11809565095832, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {-18.238359187158412`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.58777162101726, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.196905312330248`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.916603347176093`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.69791414621126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.518573217555446`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.36655701025682, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.234629467214273`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.633189001170319`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.98260143502917, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.591735126342158`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.311433161188, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.09274396022317, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.913403031567354`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.761386824268728`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.629459281226179`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.028018815182229, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.377431249041079, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.986564940354067, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.706262975199909, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.487573774235079, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.308232845579262, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.156216638280637, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.024289095238088, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.422848629194137, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.7722610630529876`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.3813947543659757`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.101092789211817, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.882403588246988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.703062659591171, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.551046452292545, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.419118909249997, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {{{-4.605170185988092, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-2.302585092994046, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"2.00\"", 2., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"5.00\"", 5., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.2039728043259361`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {-2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {0.6931471805599453, 
       FormBox["\"\"", TraditionalForm]}, {1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm]}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.6592600369327783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.4079456086518722`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.2039728043259361`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659907, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782628`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.0986122886681098`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.3862943611198906`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-4.605170185988091, 0.6931471805599453}, {-20.85209888383472, 
   0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-4.605170185988092, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-3.912023005428146, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.995732273553991, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-2.302585092994046, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0., 
      FormBox[
       TagBox[
        InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {0.6931471805599453, 
      FormBox[
       TagBox[
        InterpretationBox["\"2.00\"", 2., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {1.6094379124341003`, 
      FormBox[
       TagBox[
        InterpretationBox["\"5.00\"", 5., AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 2}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.6592600369327783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.4079456086518722`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.2039728043259361`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659907, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782628`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.0986122886681098`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.3862943611198906`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, {{-20.72326583694641, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-16.11809565095832, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {-18.238359187158412`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.58777162101726, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.196905312330248`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.916603347176093`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.69791414621126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.518573217555446`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.36655701025682, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.234629467214273`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.633189001170319`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.98260143502917, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.591735126342158`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.311433161188, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.09274396022317, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.913403031567354`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.761386824268728`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.629459281226179`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.028018815182229, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.377431249041079, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.986564940354067, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.706262975199909, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.487573774235079, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.308232845579262, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.156216638280637, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.024289095238088, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.422848629194137, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.7722610630529876`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.3813947543659757`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.101092789211817, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.882403588246988, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.703062659591171, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.551046452292545, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.419118909249997, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.56975662994016*^9, 3.56975663744117*^9}, {
   3.569756670216216*^9, 3.569756676417225*^9}, 3.5697567160122805`*^9, {
   3.5697569095025535`*^9, 3.569756988423664*^9}, {3.569757046342746*^9, 
   3.569757069316778*^9}, 3.5697605101707935`*^9, {3.569760548194847*^9, 
   3.569760553135854*^9}, 3.56982997932736*^9, 3.570269318939911*^9, 
   3.5705181839001555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<.\\\\plots\\\\accuracyH(z)_HS.eps\>\"", ",", "pl2", ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.569756739045313*^9, 3.569756787842382*^9}, {
  3.569756860704485*^9, 3.5697568613744855`*^9}, {3.569829990309376*^9, 
  3.569829992529379*^9}}],

Cell[BoxData["\<\".\\\\plots\\\\accuracyH(z)_HS.eps\"\>"], "Output",
 CellChangeTimes->{3.569756790213385*^9, 3.5697570778577905`*^9, 
  3.5697605812198935`*^9, 3.569829994211381*^9, 3.5705181922511673`*^9}]
}, Open  ]]
},
WindowSize->{1853, 1025},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.600000023841858,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 119, 2, 49, "Input"],
Cell[679, 24, 191, 4, 49, "Input"],
Cell[CellGroupData[{
Cell[895, 32, 5091, 112, 391, "Input"],
Cell[5989, 146, 2164, 29, 49, "Output"]
}, Open  ]],
Cell[8168, 178, 2081, 62, 155, "Input"],
Cell[10252, 242, 460, 14, 67, "Input"],
Cell[CellGroupData[{
Cell[10737, 260, 389, 9, 49, "Input"],
Cell[11129, 271, 13756, 351, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24922, 627, 398, 9, 49, "Input"],
Cell[25323, 638, 1825, 52, 56, "Output"]
}, Open  ]],
Cell[27163, 693, 1621, 48, 56, "Input"],
Cell[CellGroupData[{
Cell[28809, 745, 122, 2, 49, "Input"],
Cell[28934, 749, 1397, 44, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30368, 798, 180, 4, 49, "Input"],
Cell[30551, 804, 27610, 728, 710, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58198, 1537, 301, 7, 49, "Input"],
Cell[58502, 1546, 14926, 372, 386, "Output"]
}, Open  ]],
Cell[73443, 1921, 14007, 366, 467, "Input"],
Cell[CellGroupData[{
Cell[87475, 2291, 159, 3, 49, "Input"],
Cell[87637, 2296, 13562, 364, 350, "Output"]
}, Open  ]],
Cell[101214, 2663, 1111, 24, 68, "Input"],
Cell[CellGroupData[{
Cell[102350, 2691, 303, 5, 49, "Input"],
Cell[102656, 2698, 8075, 206, 279, "Output"]
}, Open  ]],
Cell[110746, 2907, 8905, 223, 412, "Input"],
Cell[119654, 3132, 10716, 234, 797, "Input"],
Cell[130373, 3368, 271, 7, 85, "Input"],
Cell[CellGroupData[{
Cell[130669, 3379, 736, 20, 87, "Input"],
Cell[131408, 3401, 343, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131788, 3410, 680, 19, 87, "Input"],
Cell[132471, 3431, 282, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132790, 3440, 622, 18, 87, "Input"],
Cell[133415, 3460, 211, 3, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133663, 3468, 1391, 39, 138, "Input"],
Cell[135057, 3509, 51143, 846, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186237, 4360, 1377, 39, 294, "Input"],
Cell[187617, 4401, 49217, 816, 627, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236871, 5222, 1366, 38, 243, "Input"],
Cell[238240, 5262, 47562, 789, 697, "Output"]
}, Open  ]],
Cell[285817, 6054, 214, 6, 78, "Input"],
Cell[CellGroupData[{
Cell[286056, 6064, 2089, 65, 520, "Input"],
Cell[288148, 6131, 545, 11, 123, "Output"]
}, Open  ]],
Cell[288708, 6145, 1526, 40, 548, "Input"],
Cell[CellGroupData[{
Cell[290259, 6189, 2853, 75, 604, "Input"],
Cell[293115, 6266, 24018, 488, 716, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317170, 6759, 340, 6, 78, "Input"],
Cell[317513, 6767, 207, 2, 76, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
